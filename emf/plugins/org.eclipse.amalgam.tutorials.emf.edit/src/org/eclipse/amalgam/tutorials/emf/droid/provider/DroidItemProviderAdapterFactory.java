/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.amalgam.tutorials.emf.droid.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.amalgam.tutorials.emf.droid.util.DroidAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class DroidItemProviderAdapterFactory extends DroidAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public DroidItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.Application} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationItemProvider applicationItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.Application}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationAdapter() {
		if (applicationItemProvider == null) {
			applicationItemProvider = new ApplicationItemProvider(this);
		}

		return applicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ApplicationUsesSDK} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationUsesSDKItemProvider applicationUsesSDKItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ApplicationUsesSDK}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationUsesSDKAdapter() {
		if (applicationUsesSDKItemProvider == null) {
			applicationUsesSDKItemProvider = new ApplicationUsesSDKItemProvider(this);
		}

		return applicationUsesSDKItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.Resource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResourceItemProvider resourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.Resource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResourceAdapter() {
		if (resourceItemProvider == null) {
			resourceItemProvider = new ResourceItemProvider(this);
		}

		return resourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.Layout} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LayoutItemProvider layoutItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.Layout}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLayoutAdapter() {
		if (layoutItemProvider == null) {
			layoutItemProvider = new LayoutItemProvider(this);
		}

		return layoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.AbstractActivity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractActivityItemProvider abstractActivityItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.AbstractActivity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractActivityAdapter() {
		if (abstractActivityItemProvider == null) {
			abstractActivityItemProvider = new AbstractActivityItemProvider(this);
		}

		return abstractActivityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.Activity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActivityItemProvider activityItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.Activity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActivityAdapter() {
		if (activityItemProvider == null) {
			activityItemProvider = new ActivityItemProvider(this);
		}

		return activityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.GenericActivity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenericActivityItemProvider genericActivityItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.GenericActivity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenericActivityAdapter() {
		if (genericActivityItemProvider == null) {
			genericActivityItemProvider = new GenericActivityItemProvider(this);
		}

		return genericActivityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ViewCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViewCollectionItemProvider viewCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ViewCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createViewCollectionAdapter() {
		if (viewCollectionItemProvider == null) {
			viewCollectionItemProvider = new ViewCollectionItemProvider(this);
		}

		return viewCollectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ListActivity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ListActivityItemProvider listActivityItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ListActivity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createListActivityAdapter() {
		if (listActivityItemProvider == null) {
			listActivityItemProvider = new ListActivityItemProvider(this);
		}

		return listActivityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.TabActivity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TabActivityItemProvider tabActivityItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.TabActivity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTabActivityAdapter() {
		if (tabActivityItemProvider == null) {
			tabActivityItemProvider = new TabActivityItemProvider(this);
		}

		return tabActivityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.Tab} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TabItemProvider tabItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.Tab}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTabAdapter() {
		if (tabItemProvider == null) {
			tabItemProvider = new TabItemProvider(this);
		}

		return tabItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ActionSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionSetItemProvider actionSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ActionSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionSetAdapter() {
		if (actionSetItemProvider == null) {
			actionSetItemProvider = new ActionSetItemProvider(this);
		}

		return actionSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.Action} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionItemProvider actionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.Action}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionAdapter() {
		if (actionItemProvider == null) {
			actionItemProvider = new ActionItemProvider(this);
		}

		return actionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.GoToURLAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GoToURLActionItemProvider goToURLActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.GoToURLAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGoToURLActionAdapter() {
		if (goToURLActionItemProvider == null) {
			goToURLActionItemProvider = new GoToURLActionItemProvider(this);
		}

		return goToURLActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ShowLayoutAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ShowLayoutActionItemProvider showLayoutActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ShowLayoutAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createShowLayoutActionAdapter() {
		if (showLayoutActionItemProvider == null) {
			showLayoutActionItemProvider = new ShowLayoutActionItemProvider(this);
		}

		return showLayoutActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.InvokeActivityAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InvokeActivityActionItemProvider invokeActivityActionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.InvokeActivityAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInvokeActivityActionAdapter() {
		if (invokeActivityActionItemProvider == null) {
			invokeActivityActionItemProvider = new InvokeActivityActionItemProvider(this);
		}

		return invokeActivityActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.AbstractLinearLayout} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractLinearLayoutItemProvider abstractLinearLayoutItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.AbstractLinearLayout}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractLinearLayoutAdapter() {
		if (abstractLinearLayoutItemProvider == null) {
			abstractLinearLayoutItemProvider = new AbstractLinearLayoutItemProvider(this);
		}

		return abstractLinearLayoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.AbstractView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractViewItemProvider abstractViewItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.AbstractView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractViewAdapter() {
		if (abstractViewItemProvider == null) {
			abstractViewItemProvider = new AbstractViewItemProvider(this);
		}

		return abstractViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.View} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViewItemProvider viewItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.View}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createViewAdapter() {
		if (viewItemProvider == null) {
			viewItemProvider = new ViewItemProvider(this);
		}

		return viewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.LinearLayout} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinearLayoutItemProvider linearLayoutItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.LinearLayout}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinearLayoutAdapter() {
		if (linearLayoutItemProvider == null) {
			linearLayoutItemProvider = new LinearLayoutItemProvider(this);
		}

		return linearLayoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.RelativeLayout} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelativeLayoutItemProvider relativeLayoutItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.RelativeLayout}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelativeLayoutAdapter() {
		if (relativeLayoutItemProvider == null) {
			relativeLayoutItemProvider = new RelativeLayoutItemProvider(this);
		}

		return relativeLayoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.TabHost} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TabHostItemProvider tabHostItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.TabHost}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTabHostAdapter() {
		if (tabHostItemProvider == null) {
			tabHostItemProvider = new TabHostItemProvider(this);
		}

		return tabHostItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.TabWidget} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TabWidgetItemProvider tabWidgetItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.TabWidget}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTabWidgetAdapter() {
		if (tabWidgetItemProvider == null) {
			tabWidgetItemProvider = new TabWidgetItemProvider(this);
		}

		return tabWidgetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.FrameLayout} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrameLayoutItemProvider frameLayoutItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.FrameLayout}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFrameLayoutAdapter() {
		if (frameLayoutItemProvider == null) {
			frameLayoutItemProvider = new FrameLayoutItemProvider(this);
		}

		return frameLayoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.LayoutParams} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LayoutParamsItemProvider layoutParamsItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.LayoutParams}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLayoutParamsAdapter() {
		if (layoutParamsItemProvider == null) {
			layoutParamsItemProvider = new LayoutParamsItemProvider(this);
		}

		return layoutParamsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.Widget} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WidgetItemProvider widgetItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.Widget}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWidgetAdapter() {
		if (widgetItemProvider == null) {
			widgetItemProvider = new WidgetItemProvider(this);
		}

		return widgetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.AbstractTextView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractTextViewItemProvider abstractTextViewItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.AbstractTextView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractTextViewAdapter() {
		if (abstractTextViewItemProvider == null) {
			abstractTextViewItemProvider = new AbstractTextViewItemProvider(this);
		}

		return abstractTextViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.TextView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextViewItemProvider textViewItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.TextView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextViewAdapter() {
		if (textViewItemProvider == null) {
			textViewItemProvider = new TextViewItemProvider(this);
		}

		return textViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ImageView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImageViewItemProvider imageViewItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ImageView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImageViewAdapter() {
		if (imageViewItemProvider == null) {
			imageViewItemProvider = new ImageViewItemProvider(this);
		}

		return imageViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.Button} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ButtonItemProvider buttonItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.Button}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createButtonAdapter() {
		if (buttonItemProvider == null) {
			buttonItemProvider = new ButtonItemProvider(this);
		}

		return buttonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.Spinner} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpinnerItemProvider spinnerItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.Spinner}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpinnerAdapter() {
		if (spinnerItemProvider == null) {
			spinnerItemProvider = new SpinnerItemProvider(this);
		}

		return spinnerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.EditText} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EditTextItemProvider editTextItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.EditText}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEditTextAdapter() {
		if (editTextItemProvider == null) {
			editTextItemProvider = new EditTextItemProvider(this);
		}

		return editTextItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ValueAccess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueAccessItemProvider valueAccessItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ValueAccess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueAccessAdapter() {
		if (valueAccessItemProvider == null) {
			valueAccessItemProvider = new ValueAccessItemProvider(this);
		}

		return valueAccessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.StringVA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringVAItemProvider stringVAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.StringVA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringVAAdapter() {
		if (stringVAItemProvider == null) {
			stringVAItemProvider = new StringVAItemProvider(this);
		}

		return stringVAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.IntegerVA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerVAItemProvider integerVAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.IntegerVA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerVAAdapter() {
		if (integerVAItemProvider == null) {
			integerVAItemProvider = new IntegerVAItemProvider(this);
		}

		return integerVAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.BooleanVA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanVAItemProvider booleanVAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.BooleanVA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanVAAdapter() {
		if (booleanVAItemProvider == null) {
			booleanVAItemProvider = new BooleanVAItemProvider(this);
		}

		return booleanVAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ColorVA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ColorVAItemProvider colorVAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ColorVA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createColorVAAdapter() {
		if (colorVAItemProvider == null) {
			colorVAItemProvider = new ColorVAItemProvider(this);
		}

		return colorVAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.DimensionVA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DimensionVAItemProvider dimensionVAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.DimensionVA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDimensionVAAdapter() {
		if (dimensionVAItemProvider == null) {
			dimensionVAItemProvider = new DimensionVAItemProvider(this);
		}

		return dimensionVAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.LayoutDimensionVA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LayoutDimensionVAItemProvider layoutDimensionVAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.LayoutDimensionVA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLayoutDimensionVAAdapter() {
		if (layoutDimensionVAItemProvider == null) {
			layoutDimensionVAItemProvider = new LayoutDimensionVAItemProvider(this);
		}

		return layoutDimensionVAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.AnyDrawableVA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnyDrawableVAItemProvider anyDrawableVAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.AnyDrawableVA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnyDrawableVAAdapter() {
		if (anyDrawableVAItemProvider == null) {
			anyDrawableVAItemProvider = new AnyDrawableVAItemProvider(this);
		}

		return anyDrawableVAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.DrawableVA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DrawableVAItemProvider drawableVAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.DrawableVA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDrawableVAAdapter() {
		if (drawableVAItemProvider == null) {
			drawableVAItemProvider = new DrawableVAItemProvider(this);
		}

		return drawableVAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.AnimationVA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnimationVAItemProvider animationVAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.AnimationVA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnimationVAAdapter() {
		if (animationVAItemProvider == null) {
			animationVAItemProvider = new AnimationVAItemProvider(this);
		}

		return animationVAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.InterpolatorVA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterpolatorVAItemProvider interpolatorVAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.InterpolatorVA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterpolatorVAAdapter() {
		if (interpolatorVAItemProvider == null) {
			interpolatorVAItemProvider = new InterpolatorVAItemProvider(this);
		}

		return interpolatorVAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ValueDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueDefinitionItemProvider valueDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ValueDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueDefinitionAdapter() {
		if (valueDefinitionItemProvider == null) {
			valueDefinitionItemProvider = new ValueDefinitionItemProvider(this);
		}

		return valueDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.StringVD} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringVDItemProvider stringVDItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.StringVD}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringVDAdapter() {
		if (stringVDItemProvider == null) {
			stringVDItemProvider = new StringVDItemProvider(this);
		}

		return stringVDItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.IntegerVD} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerVDItemProvider integerVDItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.IntegerVD}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerVDAdapter() {
		if (integerVDItemProvider == null) {
			integerVDItemProvider = new IntegerVDItemProvider(this);
		}

		return integerVDItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.BooleanVD} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanVDItemProvider booleanVDItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.BooleanVD}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanVDAdapter() {
		if (booleanVDItemProvider == null) {
			booleanVDItemProvider = new BooleanVDItemProvider(this);
		}

		return booleanVDItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ColorVD} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ColorVDItemProvider colorVDItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ColorVD}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createColorVDAdapter() {
		if (colorVDItemProvider == null) {
			colorVDItemProvider = new ColorVDItemProvider(this);
		}

		return colorVDItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.DimensionVD} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DimensionVDItemProvider dimensionVDItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.DimensionVD}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDimensionVDAdapter() {
		if (dimensionVDItemProvider == null) {
			dimensionVDItemProvider = new DimensionVDItemProvider(this);
		}

		return dimensionVDItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ValueResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueResourceItemProvider valueResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ValueResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueResourceAdapter() {
		if (valueResourceItemProvider == null) {
			valueResourceItemProvider = new ValueResourceItemProvider(this);
		}

		return valueResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.StringResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringResourceItemProvider stringResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.StringResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringResourceAdapter() {
		if (stringResourceItemProvider == null) {
			stringResourceItemProvider = new StringResourceItemProvider(this);
		}

		return stringResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.IntegerResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerResourceItemProvider integerResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.IntegerResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerResourceAdapter() {
		if (integerResourceItemProvider == null) {
			integerResourceItemProvider = new IntegerResourceItemProvider(this);
		}

		return integerResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.BooleanResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanResourceItemProvider booleanResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.BooleanResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanResourceAdapter() {
		if (booleanResourceItemProvider == null) {
			booleanResourceItemProvider = new BooleanResourceItemProvider(this);
		}

		return booleanResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ColorResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ColorResourceItemProvider colorResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ColorResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createColorResourceAdapter() {
		if (colorResourceItemProvider == null) {
			colorResourceItemProvider = new ColorResourceItemProvider(this);
		}

		return colorResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.DimensionResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DimensionResourceItemProvider dimensionResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.DimensionResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDimensionResourceAdapter() {
		if (dimensionResourceItemProvider == null) {
			dimensionResourceItemProvider = new DimensionResourceItemProvider(this);
		}

		return dimensionResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ArrayResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayResourceItemProvider arrayResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ArrayResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayResourceAdapter() {
		if (arrayResourceItemProvider == null) {
			arrayResourceItemProvider = new ArrayResourceItemProvider(this);
		}

		return arrayResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.IntegerArrayResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerArrayResourceItemProvider integerArrayResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.IntegerArrayResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerArrayResourceAdapter() {
		if (integerArrayResourceItemProvider == null) {
			integerArrayResourceItemProvider = new IntegerArrayResourceItemProvider(this);
		}

		return integerArrayResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.StringArrayResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringArrayResourceItemProvider stringArrayResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.StringArrayResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringArrayResourceAdapter() {
		if (stringArrayResourceItemProvider == null) {
			stringArrayResourceItemProvider = new StringArrayResourceItemProvider(this);
		}

		return stringArrayResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.TypedArrayResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypedArrayResourceItemProvider typedArrayResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.TypedArrayResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypedArrayResourceAdapter() {
		if (typedArrayResourceItemProvider == null) {
			typedArrayResourceItemProvider = new TypedArrayResourceItemProvider(this);
		}

		return typedArrayResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.DrawableResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DrawableResourceItemProvider drawableResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.DrawableResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDrawableResourceAdapter() {
		if (drawableResourceItemProvider == null) {
			drawableResourceItemProvider = new DrawableResourceItemProvider(this);
		}

		return drawableResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.BitmapDrawableResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BitmapDrawableResourceItemProvider bitmapDrawableResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.BitmapDrawableResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBitmapDrawableResourceAdapter() {
		if (bitmapDrawableResourceItemProvider == null) {
			bitmapDrawableResourceItemProvider = new BitmapDrawableResourceItemProvider(this);
		}

		return bitmapDrawableResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.TransitionDrawableResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransitionDrawableResourceItemProvider transitionDrawableResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.TransitionDrawableResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransitionDrawableResourceAdapter() {
		if (transitionDrawableResourceItemProvider == null) {
			transitionDrawableResourceItemProvider = new TransitionDrawableResourceItemProvider(this);
		}

		return transitionDrawableResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.MenuResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MenuResourceItemProvider menuResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.MenuResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMenuResourceAdapter() {
		if (menuResourceItemProvider == null) {
			menuResourceItemProvider = new MenuResourceItemProvider(this);
		}

		return menuResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.MenuItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MenuItemItemProvider menuItemItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.MenuItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMenuItemAdapter() {
		if (menuItemItemProvider == null) {
			menuItemItemProvider = new MenuItemItemProvider(this);
		}

		return menuItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.MenuItemGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MenuItemGroupItemProvider menuItemGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.MenuItemGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMenuItemGroupAdapter() {
		if (menuItemGroupItemProvider == null) {
			menuItemGroupItemProvider = new MenuItemGroupItemProvider(this);
		}

		return menuItemGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.SubMenu} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubMenuItemProvider subMenuItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.SubMenu}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubMenuAdapter() {
		if (subMenuItemProvider == null) {
			subMenuItemProvider = new SubMenuItemProvider(this);
		}

		return subMenuItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.AnimationResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnimationResourceItemProvider animationResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.AnimationResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnimationResourceAdapter() {
		if (animationResourceItemProvider == null) {
			animationResourceItemProvider = new AnimationResourceItemProvider(this);
		}

		return animationResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.FrameAnimationElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrameAnimationElementItemProvider frameAnimationElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.FrameAnimationElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFrameAnimationElementAdapter() {
		if (frameAnimationElementItemProvider == null) {
			frameAnimationElementItemProvider = new FrameAnimationElementItemProvider(this);
		}

		return frameAnimationElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.TerminalAnimationElements} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TerminalAnimationElementsItemProvider terminalAnimationElementsItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.TerminalAnimationElements}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTerminalAnimationElementsAdapter() {
		if (terminalAnimationElementsItemProvider == null) {
			terminalAnimationElementsItemProvider = new TerminalAnimationElementsItemProvider(this);
		}

		return terminalAnimationElementsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.TerminalAnimationSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TerminalAnimationSetItemProvider terminalAnimationSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.TerminalAnimationSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTerminalAnimationSetAdapter() {
		if (terminalAnimationSetItemProvider == null) {
			terminalAnimationSetItemProvider = new TerminalAnimationSetItemProvider(this);
		}

		return terminalAnimationSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.AlphaAnimation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlphaAnimationItemProvider alphaAnimationItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.AlphaAnimation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlphaAnimationAdapter() {
		if (alphaAnimationItemProvider == null) {
			alphaAnimationItemProvider = new AlphaAnimationItemProvider(this);
		}

		return alphaAnimationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ScaleAnimation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScaleAnimationItemProvider scaleAnimationItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ScaleAnimation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScaleAnimationAdapter() {
		if (scaleAnimationItemProvider == null) {
			scaleAnimationItemProvider = new ScaleAnimationItemProvider(this);
		}

		return scaleAnimationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.TranslateAnimation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TranslateAnimationItemProvider translateAnimationItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.TranslateAnimation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTranslateAnimationAdapter() {
		if (translateAnimationItemProvider == null) {
			translateAnimationItemProvider = new TranslateAnimationItemProvider(this);
		}

		return translateAnimationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.RotateAnimation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RotateAnimationItemProvider rotateAnimationItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.RotateAnimation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRotateAnimationAdapter() {
		if (rotateAnimationItemProvider == null) {
			rotateAnimationItemProvider = new RotateAnimationItemProvider(this);
		}

		return rotateAnimationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.TweenAnimationResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TweenAnimationResourceItemProvider tweenAnimationResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.TweenAnimationResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTweenAnimationResourceAdapter() {
		if (tweenAnimationResourceItemProvider == null) {
			tweenAnimationResourceItemProvider = new TweenAnimationResourceItemProvider(this);
		}

		return tweenAnimationResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.FrameAnimationResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrameAnimationResourceItemProvider frameAnimationResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.FrameAnimationResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFrameAnimationResourceAdapter() {
		if (frameAnimationResourceItemProvider == null) {
			frameAnimationResourceItemProvider = new FrameAnimationResourceItemProvider(this);
		}

		return frameAnimationResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.AnimationFrame} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnimationFrameItemProvider animationFrameItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.AnimationFrame}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnimationFrameAdapter() {
		if (animationFrameItemProvider == null) {
			animationFrameItemProvider = new AnimationFrameItemProvider(this);
		}

		return animationFrameItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.AbstractResourceAccess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractResourceAccessItemProvider abstractResourceAccessItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.AbstractResourceAccess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractResourceAccessAdapter() {
		if (abstractResourceAccessItemProvider == null) {
			abstractResourceAccessItemProvider = new AbstractResourceAccessItemProvider(this);
		}

		return abstractResourceAccessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ResourceAccess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResourceAccessItemProvider resourceAccessItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ResourceAccess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResourceAccessAdapter() {
		if (resourceAccessItemProvider == null) {
			resourceAccessItemProvider = new ResourceAccessItemProvider(this);
		}

		return resourceAccessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.StringRA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringRAItemProvider stringRAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.StringRA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringRAAdapter() {
		if (stringRAItemProvider == null) {
			stringRAItemProvider = new StringRAItemProvider(this);
		}

		return stringRAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.IntegerRA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerRAItemProvider integerRAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.IntegerRA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerRAAdapter() {
		if (integerRAItemProvider == null) {
			integerRAItemProvider = new IntegerRAItemProvider(this);
		}

		return integerRAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.BooleanRA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanRAItemProvider booleanRAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.BooleanRA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanRAAdapter() {
		if (booleanRAItemProvider == null) {
			booleanRAItemProvider = new BooleanRAItemProvider(this);
		}

		return booleanRAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.ColorRA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ColorRAItemProvider colorRAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.ColorRA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createColorRAAdapter() {
		if (colorRAItemProvider == null) {
			colorRAItemProvider = new ColorRAItemProvider(this);
		}

		return colorRAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.DimensionRA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DimensionRAItemProvider dimensionRAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.DimensionRA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDimensionRAAdapter() {
		if (dimensionRAItemProvider == null) {
			dimensionRAItemProvider = new DimensionRAItemProvider(this);
		}

		return dimensionRAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.DrawableRA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DrawableRAItemProvider drawableRAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.DrawableRA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDrawableRAAdapter() {
		if (drawableRAItemProvider == null) {
			drawableRAItemProvider = new DrawableRAItemProvider(this);
		}

		return drawableRAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.AnimationRA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnimationRAItemProvider animationRAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.AnimationRA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnimationRAAdapter() {
		if (animationRAItemProvider == null) {
			animationRAItemProvider = new AnimationRAItemProvider(this);
		}

		return animationRAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.InterpolatorRA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterpolatorRAItemProvider interpolatorRAItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.InterpolatorRA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterpolatorRAAdapter() {
		if (interpolatorRAItemProvider == null) {
			interpolatorRAItemProvider = new InterpolatorRAItemProvider(this);
		}

		return interpolatorRAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.CheckBox} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CheckBoxItemProvider checkBoxItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.CheckBox}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCheckBoxAdapter() {
		if (checkBoxItemProvider == null) {
			checkBoxItemProvider = new CheckBoxItemProvider(this);
		}

		return checkBoxItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.RadioButton} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RadioButtonItemProvider radioButtonItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.RadioButton}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRadioButtonAdapter() {
		if (radioButtonItemProvider == null) {
			radioButtonItemProvider = new RadioButtonItemProvider(this);
		}

		return radioButtonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.RadioGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RadioGroupItemProvider radioGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.RadioGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRadioGroupAdapter() {
		if (radioGroupItemProvider == null) {
			radioGroupItemProvider = new RadioGroupItemProvider(this);
		}

		return radioGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.amalgam.tutorials.emf.droid.MenuGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MenuGroupItemProvider menuGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.amalgam.tutorials.emf.droid.MenuGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMenuGroupAdapter() {
		if (menuGroupItemProvider == null) {
			menuGroupItemProvider = new MenuGroupItemProvider(this);
		}

		return menuGroupItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (applicationItemProvider != null) applicationItemProvider.dispose();
		if (applicationUsesSDKItemProvider != null) applicationUsesSDKItemProvider.dispose();
		if (resourceItemProvider != null) resourceItemProvider.dispose();
		if (layoutItemProvider != null) layoutItemProvider.dispose();
		if (abstractActivityItemProvider != null) abstractActivityItemProvider.dispose();
		if (activityItemProvider != null) activityItemProvider.dispose();
		if (genericActivityItemProvider != null) genericActivityItemProvider.dispose();
		if (viewCollectionItemProvider != null) viewCollectionItemProvider.dispose();
		if (listActivityItemProvider != null) listActivityItemProvider.dispose();
		if (tabActivityItemProvider != null) tabActivityItemProvider.dispose();
		if (tabItemProvider != null) tabItemProvider.dispose();
		if (actionSetItemProvider != null) actionSetItemProvider.dispose();
		if (actionItemProvider != null) actionItemProvider.dispose();
		if (goToURLActionItemProvider != null) goToURLActionItemProvider.dispose();
		if (showLayoutActionItemProvider != null) showLayoutActionItemProvider.dispose();
		if (invokeActivityActionItemProvider != null) invokeActivityActionItemProvider.dispose();
		if (abstractLinearLayoutItemProvider != null) abstractLinearLayoutItemProvider.dispose();
		if (abstractViewItemProvider != null) abstractViewItemProvider.dispose();
		if (viewItemProvider != null) viewItemProvider.dispose();
		if (linearLayoutItemProvider != null) linearLayoutItemProvider.dispose();
		if (relativeLayoutItemProvider != null) relativeLayoutItemProvider.dispose();
		if (tabHostItemProvider != null) tabHostItemProvider.dispose();
		if (tabWidgetItemProvider != null) tabWidgetItemProvider.dispose();
		if (frameLayoutItemProvider != null) frameLayoutItemProvider.dispose();
		if (layoutParamsItemProvider != null) layoutParamsItemProvider.dispose();
		if (widgetItemProvider != null) widgetItemProvider.dispose();
		if (abstractTextViewItemProvider != null) abstractTextViewItemProvider.dispose();
		if (textViewItemProvider != null) textViewItemProvider.dispose();
		if (imageViewItemProvider != null) imageViewItemProvider.dispose();
		if (buttonItemProvider != null) buttonItemProvider.dispose();
		if (spinnerItemProvider != null) spinnerItemProvider.dispose();
		if (editTextItemProvider != null) editTextItemProvider.dispose();
		if (valueAccessItemProvider != null) valueAccessItemProvider.dispose();
		if (stringVAItemProvider != null) stringVAItemProvider.dispose();
		if (integerVAItemProvider != null) integerVAItemProvider.dispose();
		if (booleanVAItemProvider != null) booleanVAItemProvider.dispose();
		if (colorVAItemProvider != null) colorVAItemProvider.dispose();
		if (dimensionVAItemProvider != null) dimensionVAItemProvider.dispose();
		if (layoutDimensionVAItemProvider != null) layoutDimensionVAItemProvider.dispose();
		if (anyDrawableVAItemProvider != null) anyDrawableVAItemProvider.dispose();
		if (drawableVAItemProvider != null) drawableVAItemProvider.dispose();
		if (animationVAItemProvider != null) animationVAItemProvider.dispose();
		if (interpolatorVAItemProvider != null) interpolatorVAItemProvider.dispose();
		if (valueDefinitionItemProvider != null) valueDefinitionItemProvider.dispose();
		if (stringVDItemProvider != null) stringVDItemProvider.dispose();
		if (integerVDItemProvider != null) integerVDItemProvider.dispose();
		if (booleanVDItemProvider != null) booleanVDItemProvider.dispose();
		if (colorVDItemProvider != null) colorVDItemProvider.dispose();
		if (dimensionVDItemProvider != null) dimensionVDItemProvider.dispose();
		if (valueResourceItemProvider != null) valueResourceItemProvider.dispose();
		if (stringResourceItemProvider != null) stringResourceItemProvider.dispose();
		if (integerResourceItemProvider != null) integerResourceItemProvider.dispose();
		if (booleanResourceItemProvider != null) booleanResourceItemProvider.dispose();
		if (colorResourceItemProvider != null) colorResourceItemProvider.dispose();
		if (dimensionResourceItemProvider != null) dimensionResourceItemProvider.dispose();
		if (arrayResourceItemProvider != null) arrayResourceItemProvider.dispose();
		if (integerArrayResourceItemProvider != null) integerArrayResourceItemProvider.dispose();
		if (stringArrayResourceItemProvider != null) stringArrayResourceItemProvider.dispose();
		if (typedArrayResourceItemProvider != null) typedArrayResourceItemProvider.dispose();
		if (drawableResourceItemProvider != null) drawableResourceItemProvider.dispose();
		if (bitmapDrawableResourceItemProvider != null) bitmapDrawableResourceItemProvider.dispose();
		if (transitionDrawableResourceItemProvider != null) transitionDrawableResourceItemProvider.dispose();
		if (menuResourceItemProvider != null) menuResourceItemProvider.dispose();
		if (menuItemItemProvider != null) menuItemItemProvider.dispose();
		if (menuItemGroupItemProvider != null) menuItemGroupItemProvider.dispose();
		if (subMenuItemProvider != null) subMenuItemProvider.dispose();
		if (animationResourceItemProvider != null) animationResourceItemProvider.dispose();
		if (frameAnimationElementItemProvider != null) frameAnimationElementItemProvider.dispose();
		if (terminalAnimationElementsItemProvider != null) terminalAnimationElementsItemProvider.dispose();
		if (terminalAnimationSetItemProvider != null) terminalAnimationSetItemProvider.dispose();
		if (alphaAnimationItemProvider != null) alphaAnimationItemProvider.dispose();
		if (scaleAnimationItemProvider != null) scaleAnimationItemProvider.dispose();
		if (translateAnimationItemProvider != null) translateAnimationItemProvider.dispose();
		if (rotateAnimationItemProvider != null) rotateAnimationItemProvider.dispose();
		if (tweenAnimationResourceItemProvider != null) tweenAnimationResourceItemProvider.dispose();
		if (frameAnimationResourceItemProvider != null) frameAnimationResourceItemProvider.dispose();
		if (animationFrameItemProvider != null) animationFrameItemProvider.dispose();
		if (abstractResourceAccessItemProvider != null) abstractResourceAccessItemProvider.dispose();
		if (resourceAccessItemProvider != null) resourceAccessItemProvider.dispose();
		if (stringRAItemProvider != null) stringRAItemProvider.dispose();
		if (integerRAItemProvider != null) integerRAItemProvider.dispose();
		if (booleanRAItemProvider != null) booleanRAItemProvider.dispose();
		if (colorRAItemProvider != null) colorRAItemProvider.dispose();
		if (dimensionRAItemProvider != null) dimensionRAItemProvider.dispose();
		if (drawableRAItemProvider != null) drawableRAItemProvider.dispose();
		if (animationRAItemProvider != null) animationRAItemProvider.dispose();
		if (interpolatorRAItemProvider != null) interpolatorRAItemProvider.dispose();
		if (checkBoxItemProvider != null) checkBoxItemProvider.dispose();
		if (radioButtonItemProvider != null) radioButtonItemProvider.dispose();
		if (radioGroupItemProvider != null) radioGroupItemProvider.dispose();
		if (menuGroupItemProvider != null) menuGroupItemProvider.dispose();
	}

}
