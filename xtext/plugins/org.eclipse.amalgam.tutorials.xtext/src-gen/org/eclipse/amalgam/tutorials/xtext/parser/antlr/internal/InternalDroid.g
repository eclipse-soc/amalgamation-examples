/*
* generated by Xtext
*/
grammar InternalDroid;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.amalgam.tutorials.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.amalgam.tutorials.xtext.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.amalgam.tutorials.xtext.services.DroidGrammarAccess;

}

@parser::members {

 	private DroidGrammarAccess grammarAccess;
 	
    public InternalDroidParser(TokenStream input, IAstFactory factory, DroidGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/eclipse/amalgam/tutorials/xtext/parser/antlr/internal/InternalDroid.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Application";	
   	}
   	
   	@Override
   	protected DroidGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleApplication
entryRuleApplication returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getApplicationRule(), currentNode); }
	 iv_ruleApplication=ruleApplication 
	 { $current=$iv_ruleApplication.current; } 
	 EOF 
;

// Rule Application
ruleApplication returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'application' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getApplicationKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getApplicationAccess().getNameSTRINGTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getApplicationAccess().getPackageQualifiedNameParserRuleCall_2_0(), currentNode); 
	    }
		lv_package_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"package",
	        		lv_package_2_0, 
	        		"QualifiedName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'{' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getApplicationAccess().getManifestManifestFileParserRuleCall_4_0(), currentNode); 
	    }
		lv_manifest_4_0=ruleManifestFile		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"manifest",
	        		lv_manifest_4_0, 
	        		"ManifestFile", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getApplicationAccess().getLayoutsLayoutParserRuleCall_5_0(), currentNode); 
	    }
		lv_layouts_5_0=ruleLayout		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"layouts",
	        		lv_layouts_5_0, 
	        		"Layout", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getApplicationAccess().getActivitiesActivityParserRuleCall_6_0(), currentNode); 
	    }
		lv_activities_6_0=ruleActivity		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"activities",
	        		lv_activities_6_0, 
	        		"Activity", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)+	'}' 
    {
        createLeafNode(grammarAccess.getApplicationAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;







// Entry rule entryRuleManifestFile
entryRuleManifestFile returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getManifestFileRule(), currentNode); }
	 iv_ruleManifestFile=ruleManifestFile 
	 { $current=$iv_ruleManifestFile.current; } 
	 EOF 
;

// Rule ManifestFile
ruleManifestFile returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getManifestFileAccess().getManifestFileAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getManifestFileAccess().getManifestFileAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'manifest' 
    {
        createLeafNode(grammarAccess.getManifestFileAccess().getManifestKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getManifestFileAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getManifestFileAccess().getRightCurlyBracketKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleLayout
entryRuleLayout returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLayoutRule(), currentNode); }
	 iv_ruleLayout=ruleLayout 
	 { $current=$iv_ruleLayout.current; } 
	 EOF 
;

// Rule Layout
ruleLayout returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'layout' 
    {
        createLeafNode(grammarAccess.getLayoutAccess().getLayoutKeyword_0(), null); 
    }
(
(
		lv_name_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getLayoutAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLayoutAccess().getWidgetsWidgetParserRuleCall_3_0(), currentNode); 
	    }
		lv_widgets_3_0=ruleWidget		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLayoutRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"widgets",
	        		lv_widgets_3_0, 
	        		"Widget", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleWidget
entryRuleWidget returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWidgetRule(), currentNode); }
	 iv_ruleWidget=ruleWidget 
	 { $current=$iv_ruleWidget.current; } 
	 EOF 
;

// Rule Widget
ruleWidget returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        currentNode=createCompositeNode(grammarAccess.getWidgetAccess().getGenericWidgetParserRuleCall_0_0(), currentNode); 
    }
    this_GenericWidget_0=ruleGenericWidget
    { 
        $current = $this_GenericWidget_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getWidgetAccess().getButtonParserRuleCall_0_1(), currentNode); 
    }
    this_Button_1=ruleButton
    { 
        $current = $this_Button_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getWidgetAccess().getSpinnerParserRuleCall_0_2(), currentNode); 
    }
    this_Spinner_2=ruleSpinner
    { 
        $current = $this_Spinner_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getWidgetAccess().getEditTextParserRuleCall_0_3(), currentNode); 
    }
    this_EditText_3=ruleEditText
    { 
        $current = $this_EditText_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getWidgetAccess().getTextViewParserRuleCall_0_4(), currentNode); 
    }
    this_TextView_4=ruleTextView
    { 
        $current = $this_TextView_4.current; 
        currentNode = currentNode.getParent();
    }
)(	'top' 
    {
        createLeafNode(grammarAccess.getWidgetAccess().getTopKeyword_1_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getWidgetAccess().getEqualsSignKeyword_1_1(), null); 
    }
(
(
		lv_top_7_0=RULE_INT
		{
			createLeafNode(grammarAccess.getWidgetAccess().getTopINTTerminalRuleCall_1_2_0(), "top"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWidgetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"top",
	        		lv_top_7_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(	'left' 
    {
        createLeafNode(grammarAccess.getWidgetAccess().getLeftKeyword_2_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getWidgetAccess().getEqualsSignKeyword_2_1(), null); 
    }
(
(
		lv_left_10_0=RULE_INT
		{
			createLeafNode(grammarAccess.getWidgetAccess().getLeftINTTerminalRuleCall_2_2_0(), "left"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWidgetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"left",
	        		lv_left_10_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(	'width' 
    {
        createLeafNode(grammarAccess.getWidgetAccess().getWidthKeyword_3_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getWidgetAccess().getEqualsSignKeyword_3_1(), null); 
    }
(
(
		lv_width_13_0=RULE_INT
		{
			createLeafNode(grammarAccess.getWidgetAccess().getWidthINTTerminalRuleCall_3_2_0(), "width"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWidgetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"width",
	        		lv_width_13_0, 
	        		"INT", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(	'->' 
    {
        createLeafNode(grammarAccess.getWidgetAccess().getHyphenMinusGreaterThanSignKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWidgetAccess().getActionsActionParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_actions_15_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWidgetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_15_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleGenericWidget
entryRuleGenericWidget returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGenericWidgetRule(), currentNode); }
	 iv_ruleGenericWidget=ruleGenericWidget 
	 { $current=$iv_ruleGenericWidget.current; } 
	 EOF 
;

// Rule GenericWidget
ruleGenericWidget returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'widget' 
    {
        createLeafNode(grammarAccess.getGenericWidgetAccess().getWidgetKeyword_0(), null); 
    }
(
    { 
        temp=factory.create(grammarAccess.getGenericWidgetAccess().getGenericWidgetAction_1().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getGenericWidgetAccess().getGenericWidgetAction_1(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'<' 
    {
        createLeafNode(grammarAccess.getGenericWidgetAccess().getLessThanSignKeyword_2_0(), null); 
    }
(
(
		lv_id_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getGenericWidgetAccess().getIdIDTerminalRuleCall_2_1_0(), "id"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGenericWidgetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"id",
	        		lv_id_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'>' 
    {
        createLeafNode(grammarAccess.getGenericWidgetAccess().getGreaterThanSignKeyword_2_2(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGenericWidgetAccess().getNameQualifiedNameParserRuleCall_3_0(), currentNode); 
	    }
		lv_name_5_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGenericWidgetRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_5_0, 
	        		"QualifiedName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleButton
entryRuleButton returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getButtonRule(), currentNode); }
	 iv_ruleButton=ruleButton 
	 { $current=$iv_ruleButton.current; } 
	 EOF 
;

// Rule Button
ruleButton returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'button' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getButtonKeyword_0(), null); 
    }
(
    { 
        temp=factory.create(grammarAccess.getButtonAccess().getButtonAction_1().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getButtonAccess().getButtonAction_1(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'<' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getLessThanSignKeyword_2_0(), null); 
    }
(
(
		lv_id_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getButtonAccess().getIdIDTerminalRuleCall_2_1_0(), "id"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getButtonRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"id",
	        		lv_id_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'>' 
    {
        createLeafNode(grammarAccess.getButtonAccess().getGreaterThanSignKeyword_2_2(), null); 
    }
)?(
(
		lv_label_5_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getButtonAccess().getLabelSTRINGTerminalRuleCall_3_0(), "label"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getButtonRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"label",
	        		lv_label_5_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleSpinner
entryRuleSpinner returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpinnerRule(), currentNode); }
	 iv_ruleSpinner=ruleSpinner 
	 { $current=$iv_ruleSpinner.current; } 
	 EOF 
;

// Rule Spinner
ruleSpinner returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'spinner' 
    {
        createLeafNode(grammarAccess.getSpinnerAccess().getSpinnerKeyword_0(), null); 
    }
(
    { 
        temp=factory.create(grammarAccess.getSpinnerAccess().getSpinnerAction_1().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSpinnerAccess().getSpinnerAction_1(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'<' 
    {
        createLeafNode(grammarAccess.getSpinnerAccess().getLessThanSignKeyword_2_0(), null); 
    }
(
(
		lv_id_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getSpinnerAccess().getIdIDTerminalRuleCall_2_1_0(), "id"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpinnerRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"id",
	        		lv_id_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'>' 
    {
        createLeafNode(grammarAccess.getSpinnerAccess().getGreaterThanSignKeyword_2_2(), null); 
    }
)?(
(
		lv_label_5_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getSpinnerAccess().getLabelSTRINGTerminalRuleCall_3_0(), "label"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpinnerRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"label",
	        		lv_label_5_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleEditText
entryRuleEditText returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEditTextRule(), currentNode); }
	 iv_ruleEditText=ruleEditText 
	 { $current=$iv_ruleEditText.current; } 
	 EOF 
;

// Rule EditText
ruleEditText returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'editText' 
    {
        createLeafNode(grammarAccess.getEditTextAccess().getEditTextKeyword_0(), null); 
    }
(
    { 
        temp=factory.create(grammarAccess.getEditTextAccess().getEditTextAction_1().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getEditTextAccess().getEditTextAction_1(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'<' 
    {
        createLeafNode(grammarAccess.getEditTextAccess().getLessThanSignKeyword_2_0(), null); 
    }
(
(
		lv_id_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getEditTextAccess().getIdIDTerminalRuleCall_2_1_0(), "id"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEditTextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"id",
	        		lv_id_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'>' 
    {
        createLeafNode(grammarAccess.getEditTextAccess().getGreaterThanSignKeyword_2_2(), null); 
    }
)?(
(
		lv_label_5_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getEditTextAccess().getLabelSTRINGTerminalRuleCall_3_0(), "label"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEditTextRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"label",
	        		lv_label_5_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleTextView
entryRuleTextView returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTextViewRule(), currentNode); }
	 iv_ruleTextView=ruleTextView 
	 { $current=$iv_ruleTextView.current; } 
	 EOF 
;

// Rule TextView
ruleTextView returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'textView' 
    {
        createLeafNode(grammarAccess.getTextViewAccess().getTextViewKeyword_0(), null); 
    }
(
    { 
        temp=factory.create(grammarAccess.getTextViewAccess().getTextViewAction_1().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getTextViewAccess().getTextViewAction_1(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'<' 
    {
        createLeafNode(grammarAccess.getTextViewAccess().getLessThanSignKeyword_2_0(), null); 
    }
(
(
		lv_id_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getTextViewAccess().getIdIDTerminalRuleCall_2_1_0(), "id"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"id",
	        		lv_id_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'>' 
    {
        createLeafNode(grammarAccess.getTextViewAccess().getGreaterThanSignKeyword_2_2(), null); 
    }
)?(
(
		lv_label_5_0=RULE_STRING
		{
			createLeafNode(grammarAccess.getTextViewAccess().getLabelSTRINGTerminalRuleCall_3_0(), "label"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTextViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"label",
	        		lv_label_5_0, 
	        		"STRING", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleActivity
entryRuleActivity returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getActivityRule(), currentNode); }
	 iv_ruleActivity=ruleActivity 
	 { $current=$iv_ruleActivity.current; } 
	 EOF 
;

// Rule Activity
ruleActivity returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getActivityAccess().getGenericActivityParserRuleCall_0(), currentNode); 
    }
    this_GenericActivity_0=ruleGenericActivity
    { 
        $current = $this_GenericActivity_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getActivityAccess().getListActivityParserRuleCall_1(), currentNode); 
    }
    this_ListActivity_1=ruleListActivity
    { 
        $current = $this_ListActivity_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getActivityAccess().getTabActivityParserRuleCall_2(), currentNode); 
    }
    this_TabActivity_2=ruleTabActivity
    { 
        $current = $this_TabActivity_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleGenericActivity
entryRuleGenericActivity returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGenericActivityRule(), currentNode); }
	 iv_ruleGenericActivity=ruleGenericActivity 
	 { $current=$iv_ruleGenericActivity.current; } 
	 EOF 
;

// Rule GenericActivity
ruleGenericActivity returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'activity' 
    {
        createLeafNode(grammarAccess.getGenericActivityAccess().getActivityKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGenericActivityAccess().getNameQualifiedNameParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGenericActivityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"QualifiedName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getGenericActivityAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGenericActivityAccess().getActionsActionParserRuleCall_3_0(), currentNode); 
	    }
		lv_actions_3_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGenericActivityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_3_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getGenericActivityAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleListActivity
entryRuleListActivity returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getListActivityRule(), currentNode); }
	 iv_ruleListActivity=ruleListActivity 
	 { $current=$iv_ruleListActivity.current; } 
	 EOF 
;

// Rule ListActivity
ruleListActivity returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'list activity' 
    {
        createLeafNode(grammarAccess.getListActivityAccess().getListActivityKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getListActivityAccess().getNameQualifiedNameParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListActivityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"QualifiedName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getListActivityAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
	'data' 
    {
        createLeafNode(grammarAccess.getListActivityAccess().getDataKeyword_3(), null); 
    }
(
(
		lv_dataSource_4_0=RULE_ID
		{
			createLeafNode(grammarAccess.getListActivityAccess().getDataSourceIDTerminalRuleCall_4_0(), "dataSource"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListActivityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"dataSource",
	        		lv_dataSource_4_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'layout' 
    {
        createLeafNode(grammarAccess.getListActivityAccess().getLayoutKeyword_5_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getListActivityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getListActivityAccess().getLayoutLayoutCrossReference_5_1_0(), "layout"); 
	}

)
))?	'item' 
    {
        createLeafNode(grammarAccess.getListActivityAccess().getItemKeyword_6(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getListActivityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getListActivityAccess().getItemLayoutLayoutCrossReference_7_0(), "itemLayout"); 
	}

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getListActivityAccess().getActionsActionParserRuleCall_8_0(), currentNode); 
	    }
		lv_actions_9_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListActivityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_9_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getListActivityAccess().getRightCurlyBracketKeyword_9(), null); 
    }
)
;





// Entry rule entryRuleTabActivity
entryRuleTabActivity returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTabActivityRule(), currentNode); }
	 iv_ruleTabActivity=ruleTabActivity 
	 { $current=$iv_ruleTabActivity.current; } 
	 EOF 
;

// Rule TabActivity
ruleTabActivity returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'tab activity' 
    {
        createLeafNode(grammarAccess.getTabActivityAccess().getTabActivityKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTabActivityAccess().getNameQualifiedNameParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTabActivityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"QualifiedName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getTabActivityAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTabActivityAccess().getActionsActionParserRuleCall_3_0(), currentNode); 
	    }
		lv_actions_3_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTabActivityRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_3_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getTabActivityAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getActionRule(), currentNode); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getActionAccess().getGenericActionParserRuleCall_0(), currentNode); 
    }
    this_GenericAction_0=ruleGenericAction
    { 
        $current = $this_GenericAction_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getActionAccess().getGoToURLActionParserRuleCall_1(), currentNode); 
    }
    this_GoToURLAction_1=ruleGoToURLAction
    { 
        $current = $this_GoToURLAction_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getActionAccess().getShowLayoutActionParserRuleCall_2(), currentNode); 
    }
    this_ShowLayoutAction_2=ruleShowLayoutAction
    { 
        $current = $this_ShowLayoutAction_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getActionAccess().getInvokeActivityActionParserRuleCall_3(), currentNode); 
    }
    this_InvokeActivityAction_3=ruleInvokeActivityAction
    { 
        $current = $this_InvokeActivityAction_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getActionAccess().getLoadResourceActionParserRuleCall_4(), currentNode); 
    }
    this_LoadResourceAction_4=ruleLoadResourceAction
    { 
        $current = $this_LoadResourceAction_4.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleGenericAction
entryRuleGenericAction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGenericActionRule(), currentNode); }
	 iv_ruleGenericAction=ruleGenericAction 
	 { $current=$iv_ruleGenericAction.current; } 
	 EOF 
;

// Rule GenericAction
ruleGenericAction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'action' 
    {
        createLeafNode(grammarAccess.getGenericActionAccess().getActionKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGenericActionAccess().getNameQualifiedNameParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGenericActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"QualifiedName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleGoToURLAction
entryRuleGoToURLAction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGoToURLActionRule(), currentNode); }
	 iv_ruleGoToURLAction=ruleGoToURLAction 
	 { $current=$iv_ruleGoToURLAction.current; } 
	 EOF 
;

// Rule GoToURLAction
ruleGoToURLAction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'go to' 
    {
        createLeafNode(grammarAccess.getGoToURLActionAccess().getGoToKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGoToURLActionAccess().getUrlURLParserRuleCall_1_0(), currentNode); 
	    }
		lv_url_1_0=ruleURL		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGoToURLActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"url",
	        		lv_url_1_0, 
	        		"URL", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleShowLayoutAction
entryRuleShowLayoutAction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getShowLayoutActionRule(), currentNode); }
	 iv_ruleShowLayoutAction=ruleShowLayoutAction 
	 { $current=$iv_ruleShowLayoutAction.current; } 
	 EOF 
;

// Rule ShowLayoutAction
ruleShowLayoutAction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'show' 
    {
        createLeafNode(grammarAccess.getShowLayoutActionAccess().getShowKeyword_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getShowLayoutActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getShowLayoutActionAccess().getLayoutLayoutCrossReference_1_0(), "layout"); 
	}

)
))
;





// Entry rule entryRuleInvokeActivityAction
entryRuleInvokeActivityAction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInvokeActivityActionRule(), currentNode); }
	 iv_ruleInvokeActivityAction=ruleInvokeActivityAction 
	 { $current=$iv_ruleInvokeActivityAction.current; } 
	 EOF 
;

// Rule InvokeActivityAction
ruleInvokeActivityAction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'invoke' 
    {
        createLeafNode(grammarAccess.getInvokeActivityActionAccess().getInvokeKeyword_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getInvokeActivityActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInvokeActivityActionAccess().getActivityActivityCrossReference_1_0(), currentNode); 
	    }
		ruleQualifiedName		{ 
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleLoadResourceAction
entryRuleLoadResourceAction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLoadResourceActionRule(), currentNode); }
	 iv_ruleLoadResourceAction=ruleLoadResourceAction 
	 { $current=$iv_ruleLoadResourceAction.current; } 
	 EOF 
;

// Rule LoadResourceAction
ruleLoadResourceAction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'load' 
    {
        createLeafNode(grammarAccess.getLoadResourceActionAccess().getLoadKeyword_0(), null); 
    }
(
(
		lv_resource_1_0=RULE_ID
		{
			createLeafNode(grammarAccess.getLoadResourceActionAccess().getResourceIDTerminalRuleCall_1_0(), "resource"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLoadResourceActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"resource",
	        		lv_resource_1_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'->' 
    {
        createLeafNode(grammarAccess.getLoadResourceActionAccess().getHyphenMinusGreaterThanSignKeyword_2_0(), null); 
    }
(
(
		lv_toVar_3_0=RULE_ID
		{
			createLeafNode(grammarAccess.getLoadResourceActionAccess().getToVarIDTerminalRuleCall_2_1_0(), "toVar"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLoadResourceActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"toVar",
	        		lv_toVar_3_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))?(	'=>' 
    {
        createLeafNode(grammarAccess.getLoadResourceActionAccess().getEqualsSignGreaterThanSignKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLoadResourceActionAccess().getAfterLoadActionParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_afterLoad_5_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLoadResourceActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"afterLoad",
	        		lv_afterLoad_5_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getQualifiedNameRule(), currentNode); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0(), null); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0(), null); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    createLeafNode(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1(), null); 
    }
)*)
    ;





// Entry rule entryRuleURL
entryRuleURL returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getURLRule(), currentNode); } 
	 iv_ruleURL=ruleURL 
	 { $current=$iv_ruleURL.current.getText(); }  
	 EOF 
;

// Rule URL
ruleURL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getURLAccess().getIDTerminalRuleCall_0(), null); 
    }

	kw='://' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getURLAccess().getColonSolidusSolidusKeyword_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getURLAccess().getQualifiedNameParserRuleCall_2(), currentNode); 
    }
    this_QualifiedName_2=ruleQualifiedName    {
		$current.merge(this_QualifiedName_2);
    }

    { 
        currentNode = currentNode.getParent();
    }
(
	kw='/' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getURLAccess().getSolidusKeyword_3_0(), null); 
    }
(
    { 
        currentNode=createCompositeNode(grammarAccess.getURLAccess().getQualifiedNameParserRuleCall_3_1_0(), currentNode); 
    }
    this_QualifiedName_4=ruleQualifiedName    {
		$current.merge(this_QualifiedName_4);
    }

    { 
        currentNode = currentNode.getParent();
    }

	kw='/' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getURLAccess().getSolidusKeyword_3_1_1(), null); 
    }
)*)?)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


