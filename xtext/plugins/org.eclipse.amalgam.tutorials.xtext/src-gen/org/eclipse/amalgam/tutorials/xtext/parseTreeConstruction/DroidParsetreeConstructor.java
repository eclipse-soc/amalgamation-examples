/*
* generated by Xtext
*/
package org.eclipse.amalgam.tutorials.xtext.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import org.eclipse.amalgam.tutorials.xtext.services.DroidGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class DroidParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private DroidGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Application_Group(this, this, 0, inst);
			case 1: return new ManifestFile_Group(this, this, 1, inst);
			case 2: return new Resource_Alternatives(this, this, 2, inst);
			case 3: return new GenericResource_Group(this, this, 3, inst);
			case 4: return new MenuResource_Group(this, this, 4, inst);
			case 5: return new ValueResource_Alternatives(this, this, 5, inst);
			case 6: return new StringValueResource_Group(this, this, 6, inst);
			case 7: return new IntegerValueResource_Group(this, this, 7, inst);
			case 8: return new BooleanValueResource_Group(this, this, 8, inst);
			case 9: return new ColorValueResource_Group(this, this, 9, inst);
			case 10: return new DimensionValueResource_Group(this, this, 10, inst);
			case 11: return new DrawableResource_Alternatives(this, this, 11, inst);
			case 12: return new BitmapDrawableResource_Group(this, this, 12, inst);
			case 13: return new TransitionDrawableResource_Group(this, this, 13, inst);
			case 14: return new AnimationResource_Group(this, this, 14, inst);
			case 15: return new Layout_Group(this, this, 15, inst);
			case 16: return new Widget_Alternatives(this, this, 16, inst);
			case 17: return new GenericWidget_Group(this, this, 17, inst);
			case 18: return new TextView_Group(this, this, 18, inst);
			case 19: return new Button_Group(this, this, 19, inst);
			case 20: return new ImageButton_Group(this, this, 20, inst);
			case 21: return new Link_Group(this, this, 21, inst);
			case 22: return new Spinner_Group(this, this, 22, inst);
			case 23: return new EditText_Group(this, this, 23, inst);
			case 24: return new Activity_Alternatives(this, this, 24, inst);
			case 25: return new GenericActivity_Group(this, this, 25, inst);
			case 26: return new ListActivity_Group(this, this, 26, inst);
			case 27: return new TabActivity_Group(this, this, 27, inst);
			case 28: return new Tab_Group(this, this, 28, inst);
			case 29: return new Action_Alternatives(this, this, 29, inst);
			case 30: return new GenericAction_Group(this, this, 30, inst);
			case 31: return new GoToURLAction_Group(this, this, 31, inst);
			case 32: return new ShowLayoutAction_Group(this, this, 32, inst);
			case 33: return new InvokeActivityAction_Group(this, this, 33, inst);
			case 34: return new LoadResourceAction_Group(this, this, 34, inst);
			case 35: return new PropertyValue_Alternatives(this, this, 35, inst);
			case 36: return new StringPropertyValue_Alternatives(this, this, 36, inst);
			case 37: return new IntegerPropertyValue_Alternatives(this, this, 37, inst);
			case 38: return new BooleanPropertyValue_Alternatives(this, this, 38, inst);
			case 39: return new ColorPropertyValue_Alternatives(this, this, 39, inst);
			case 40: return new DimensionPropertyValue_Alternatives(this, this, 40, inst);
			case 41: return new DrawableResourcePropertyValue_Alternatives(this, this, 41, inst);
			case 42: return new DrawableImageResourcePropertyValue_Alternatives(this, this, 42, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Application ****************
 *
 * Application:
 * 	"application" name=STRING package=QualifiedName? "{" manifest=ManifestFile? (resources+=Resource | layouts+=Layout |
 * 	activities+=Activity)+ //elements+=ApplicationElement+ //Will not care about the order
 * 
 * 	/ *
 * 		resources+=Resource*	//Resources first
 * 		layouts+=Layout*
 * 		activities+=Activity+	//Activities Next
 * 		* /
 * //services+=[Service|QualifiedName]*
 * 	//fragments+=[Fragments|QualifiedName]*
 * 	"}";
 *
 **/

// "application" name=STRING package=QualifiedName? "{" manifest=ManifestFile? (resources+=Resource | layouts+=Layout |
// activities+=Activity)+ //elements+=ApplicationElement+ //Will not care about the order
// / *
// 		resources+=Resource*	//Resources first
// 		layouts+=Layout*
// 		activities+=Activity+	//Activities Next
// 		* ///services+=[Service|QualifiedName]*
// //fragments+=[Fragments|QualifiedName]*
// "}"
protected class Application_Group extends GroupToken {
	
	public Application_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getApplicationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Application_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getApplicationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "application"
protected class Application_ApplicationKeyword_0 extends KeywordToken  {
	
	public Application_ApplicationKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getApplicationAccess().getApplicationKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=STRING
protected class Application_NameAssignment_1 extends AssignmentToken  {
	
	public Application_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getApplicationAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Application_ApplicationKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getApplicationAccess().getNameSTRINGTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getApplicationAccess().getNameSTRINGTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// package=QualifiedName?
protected class Application_PackageAssignment_2 extends AssignmentToken  {
	
	public Application_PackageAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getApplicationAccess().getPackageAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Application_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("package",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("package");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getApplicationAccess().getPackageQualifiedNameParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getApplicationAccess().getPackageQualifiedNameParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Application_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Application_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getApplicationAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Application_PackageAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Application_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// manifest=ManifestFile?
protected class Application_ManifestAssignment_4 extends AssignmentToken  {
	
	public Application_ManifestAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getApplicationAccess().getManifestAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ManifestFile_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("manifest",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("manifest");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getManifestFileRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getApplicationAccess().getManifestManifestFileParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Application_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (resources+=Resource | layouts+=Layout | activities+=Activity)+
protected class Application_Alternatives_5 extends AlternativesToken {

	public Application_Alternatives_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getApplicationAccess().getAlternatives_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Application_ResourcesAssignment_5_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Application_LayoutsAssignment_5_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Application_ActivitiesAssignment_5_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// resources+=Resource
protected class Application_ResourcesAssignment_5_0 extends AssignmentToken  {
	
	public Application_ResourcesAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getApplicationAccess().getResourcesAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Resource_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("resources",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("resources");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getResourceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getApplicationAccess().getResourcesResourceParserRuleCall_5_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Application_Alternatives_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Application_ManifestAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new Application_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// layouts+=Layout
protected class Application_LayoutsAssignment_5_1 extends AssignmentToken  {
	
	public Application_LayoutsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getApplicationAccess().getLayoutsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Layout_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("layouts",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("layouts");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getLayoutRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getApplicationAccess().getLayoutsLayoutParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Application_Alternatives_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Application_ManifestAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new Application_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// activities+=Activity
protected class Application_ActivitiesAssignment_5_2 extends AssignmentToken  {
	
	public Application_ActivitiesAssignment_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getApplicationAccess().getActivitiesAssignment_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Activity_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("activities",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("activities");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getActivityRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getApplicationAccess().getActivitiesActivityParserRuleCall_5_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Application_Alternatives_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Application_ManifestAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new Application_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// //elements+=ApplicationElement+ //Will not care about the order
// / *
// 		resources+=Resource*	//Resources first
// 		layouts+=Layout*
// 		activities+=Activity+	//Activities Next
// 		* ///services+=[Service|QualifiedName]*
// //fragments+=[Fragments|QualifiedName]*
// "}"
protected class Application_RightCurlyBracketKeyword_6 extends KeywordToken  {
	
	public Application_RightCurlyBracketKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getApplicationAccess().getRightCurlyBracketKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Application_Alternatives_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Application ****************/


/************ begin Rule ManifestFile ****************
 *
 * //Teria que criar um id diferente pra cada uma das classes concretas
 * //ApplicationElement:
 * //	(Resource | Activity)
 * //;
 * ManifestFile:
 * 	{ManifestFile} "manifest" "{" / *
 *     #permission
 *     #api level
 *     #features
 *     #libraries
 *     #intent-filter
 *     #requirements
 * * /"}";
 *
 **/

// {ManifestFile} "manifest" "{" / *
//     #permission
//     #api level
//     #features
//     #libraries
//     #intent-filter
//     #requirements
// * /"}"
protected class ManifestFile_Group extends GroupToken {
	
	public ManifestFile_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getManifestFileAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ManifestFile_RightCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getManifestFileAccess().getManifestFileAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {ManifestFile}
protected class ManifestFile_ManifestFileAction_0 extends ActionToken  {

	public ManifestFile_ManifestFileAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getManifestFileAccess().getManifestFileAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "manifest"
protected class ManifestFile_ManifestKeyword_1 extends KeywordToken  {
	
	public ManifestFile_ManifestKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getManifestFileAccess().getManifestKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ManifestFile_ManifestFileAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class ManifestFile_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public ManifestFile_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getManifestFileAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ManifestFile_ManifestKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// / *
//     #permission
//     #api level
//     #features
//     #libraries
//     #intent-filter
//     #requirements
// * /"}"
protected class ManifestFile_RightCurlyBracketKeyword_3 extends KeywordToken  {
	
	public ManifestFile_RightCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getManifestFileAccess().getRightCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ManifestFile_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ManifestFile ****************/


/************ begin Rule Resource ****************
 *
 * Resource:
 * 	GenericResource / * | Layout * / | MenuResource | ValueResource | DrawableResource | AnimationResource;
 *
 **/

// GenericResource / * | Layout * / | MenuResource | ValueResource | DrawableResource | AnimationResource
protected class Resource_Alternatives extends AlternativesToken {

	public Resource_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getResourceAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Resource_GenericResourceParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Resource_MenuResourceParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Resource_ValueResourceParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Resource_DrawableResourceParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Resource_AnimationResourceParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAnimationResourceAccess().getAnimationResourceAction_1().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBitmapDrawableResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBooleanValueResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getColorValueResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDimensionValueResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getGenericResourceAccess().getGenericResourceAction_1().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getIntegerValueResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMenuResourceAccess().getMenuResourceAction_1().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getStringValueResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTransitionDrawableResourceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// GenericResource
protected class Resource_GenericResourceParserRuleCall_0 extends RuleCallToken {
	
	public Resource_GenericResourceParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getResourceAccess().getGenericResourceParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericResource_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGenericResourceAccess().getGenericResourceAction_1().getType().getClassifier())
			return null;
		if(checkForRecursion(GenericResource_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// MenuResource
protected class Resource_MenuResourceParserRuleCall_1 extends RuleCallToken {
	
	public Resource_MenuResourceParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getResourceAccess().getMenuResourceParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MenuResource_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMenuResourceAccess().getMenuResourceAction_1().getType().getClassifier())
			return null;
		if(checkForRecursion(MenuResource_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ValueResource
protected class Resource_ValueResourceParserRuleCall_2 extends RuleCallToken {
	
	public Resource_ValueResourceParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getResourceAccess().getValueResourceParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ValueResource_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBooleanValueResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getColorValueResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDimensionValueResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getIntegerValueResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getStringValueResourceRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ValueResource_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// DrawableResource
protected class Resource_DrawableResourceParserRuleCall_3 extends RuleCallToken {
	
	public Resource_DrawableResourceParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getResourceAccess().getDrawableResourceParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResource_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBitmapDrawableResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTransitionDrawableResourceRule().getType().getClassifier())
			return null;
		if(checkForRecursion(DrawableResource_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// AnimationResource
protected class Resource_AnimationResourceParserRuleCall_4 extends RuleCallToken {
	
	public Resource_AnimationResourceParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getResourceAccess().getAnimationResourceParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnimationResource_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAnimationResourceAccess().getAnimationResourceAction_1().getType().getClassifier())
			return null;
		if(checkForRecursion(AnimationResource_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Resource ****************/


/************ begin Rule GenericResource ****************
 *
 * //?
 * GenericResource:
 * 	"resource" {GenericResource} name=ID "{" //widgets+=Widget*
 * 	"}";
 *
 **/

// "resource" {GenericResource} name=ID "{" //widgets+=Widget*
// "}"
protected class GenericResource_Group extends GroupToken {
	
	public GenericResource_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericResourceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericResource_RightCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGenericResourceAccess().getGenericResourceAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "resource"
protected class GenericResource_ResourceKeyword_0 extends KeywordToken  {
	
	public GenericResource_ResourceKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericResourceAccess().getResourceKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {GenericResource}
protected class GenericResource_GenericResourceAction_1 extends ActionToken  {

	public GenericResource_GenericResourceAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getGenericResourceAccess().getGenericResourceAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericResource_ResourceKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class GenericResource_NameAssignment_2 extends AssignmentToken  {
	
	public GenericResource_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericResourceAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericResource_GenericResourceAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGenericResourceAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGenericResourceAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class GenericResource_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public GenericResource_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericResourceAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericResource_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// //widgets+=Widget*
// "}"
protected class GenericResource_RightCurlyBracketKeyword_4 extends KeywordToken  {
	
	public GenericResource_RightCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericResourceAccess().getRightCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericResource_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule GenericResource ****************/


/************ begin Rule MenuResource ****************
 *
 * MenuResource:
 * 	"menu" {MenuResource} name=ID "{" //widgets+=Widget*
 * 	"}";
 *
 **/

// "menu" {MenuResource} name=ID "{" //widgets+=Widget*
// "}"
protected class MenuResource_Group extends GroupToken {
	
	public MenuResource_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMenuResourceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MenuResource_RightCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMenuResourceAccess().getMenuResourceAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "menu"
protected class MenuResource_MenuKeyword_0 extends KeywordToken  {
	
	public MenuResource_MenuKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMenuResourceAccess().getMenuKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {MenuResource}
protected class MenuResource_MenuResourceAction_1 extends ActionToken  {

	public MenuResource_MenuResourceAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getMenuResourceAccess().getMenuResourceAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MenuResource_MenuKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class MenuResource_NameAssignment_2 extends AssignmentToken  {
	
	public MenuResource_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMenuResourceAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MenuResource_MenuResourceAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMenuResourceAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMenuResourceAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class MenuResource_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public MenuResource_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMenuResourceAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MenuResource_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// //widgets+=Widget*
// "}"
protected class MenuResource_RightCurlyBracketKeyword_4 extends KeywordToken  {
	
	public MenuResource_RightCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMenuResourceAccess().getRightCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MenuResource_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule MenuResource ****************/


/************ begin Rule ValueResource ****************
 *
 * ValueResource:
 * 	StringValueResource | IntegerValueResource | BooleanValueResource | ColorValueResource | / * |
 * 	  IntegerArrayValueResource | StringArrayValueResource |
 * 	  TypedArrayValueResource * /DimensionValueResource;
 *
 **/

// StringValueResource | IntegerValueResource | BooleanValueResource | ColorValueResource | / * |
// 	  IntegerArrayValueResource | StringArrayValueResource |
// 	  TypedArrayValueResource * /DimensionValueResource
protected class ValueResource_Alternatives extends AlternativesToken {

	public ValueResource_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getValueResourceAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ValueResource_StringValueResourceParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ValueResource_IntegerValueResourceParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ValueResource_BooleanValueResourceParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ValueResource_ColorValueResourceParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ValueResource_DimensionValueResourceParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBooleanValueResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getColorValueResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDimensionValueResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getIntegerValueResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getStringValueResourceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// StringValueResource
protected class ValueResource_StringValueResourceParserRuleCall_0 extends RuleCallToken {
	
	public ValueResource_StringValueResourceParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValueResourceAccess().getStringValueResourceParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringValueResource_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStringValueResourceRule().getType().getClassifier())
			return null;
		if(checkForRecursion(StringValueResource_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// IntegerValueResource
protected class ValueResource_IntegerValueResourceParserRuleCall_1 extends RuleCallToken {
	
	public ValueResource_IntegerValueResourceParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValueResourceAccess().getIntegerValueResourceParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValueResource_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerValueResourceRule().getType().getClassifier())
			return null;
		if(checkForRecursion(IntegerValueResource_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// BooleanValueResource
protected class ValueResource_BooleanValueResourceParserRuleCall_2 extends RuleCallToken {
	
	public ValueResource_BooleanValueResourceParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValueResourceAccess().getBooleanValueResourceParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanValueResource_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBooleanValueResourceRule().getType().getClassifier())
			return null;
		if(checkForRecursion(BooleanValueResource_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ColorValueResource
protected class ValueResource_ColorValueResourceParserRuleCall_3 extends RuleCallToken {
	
	public ValueResource_ColorValueResourceParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValueResourceAccess().getColorValueResourceParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorValueResource_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getColorValueResourceRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ColorValueResource_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// / * |
// 	  IntegerArrayValueResource | StringArrayValueResource |
// 	  TypedArrayValueResource * /DimensionValueResource
protected class ValueResource_DimensionValueResourceParserRuleCall_4 extends RuleCallToken {
	
	public ValueResource_DimensionValueResourceParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValueResourceAccess().getDimensionValueResourceParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionValueResource_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDimensionValueResourceRule().getType().getClassifier())
			return null;
		if(checkForRecursion(DimensionValueResource_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule ValueResource ****************/


/************ begin Rule StringValueResource ****************
 *
 * StringValueResource:
 * 	"string" name=ID "=" value=STRING;
 *
 **/

// "string" name=ID "=" value=STRING
protected class StringValueResource_Group extends GroupToken {
	
	public StringValueResource_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStringValueResourceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringValueResource_ValueAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStringValueResourceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "string"
protected class StringValueResource_StringKeyword_0 extends KeywordToken  {
	
	public StringValueResource_StringKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStringValueResourceAccess().getStringKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class StringValueResource_NameAssignment_1 extends AssignmentToken  {
	
	public StringValueResource_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStringValueResourceAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringValueResource_StringKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getStringValueResourceAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getStringValueResourceAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "="
protected class StringValueResource_EqualsSignKeyword_2 extends KeywordToken  {
	
	public StringValueResource_EqualsSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStringValueResourceAccess().getEqualsSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringValueResource_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// value=STRING
protected class StringValueResource_ValueAssignment_3 extends AssignmentToken  {
	
	public StringValueResource_ValueAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStringValueResourceAccess().getValueAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringValueResource_EqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getStringValueResourceAccess().getValueSTRINGTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getStringValueResourceAccess().getValueSTRINGTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule StringValueResource ****************/


/************ begin Rule IntegerValueResource ****************
 *
 * IntegerValueResource:
 * 	"integer" name=ID "=" value=INT;
 *
 **/

// "integer" name=ID "=" value=INT
protected class IntegerValueResource_Group extends GroupToken {
	
	public IntegerValueResource_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIntegerValueResourceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValueResource_ValueAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerValueResourceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "integer"
protected class IntegerValueResource_IntegerKeyword_0 extends KeywordToken  {
	
	public IntegerValueResource_IntegerKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerValueResourceAccess().getIntegerKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class IntegerValueResource_NameAssignment_1 extends AssignmentToken  {
	
	public IntegerValueResource_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerValueResourceAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValueResource_IntegerKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getIntegerValueResourceAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getIntegerValueResourceAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "="
protected class IntegerValueResource_EqualsSignKeyword_2 extends KeywordToken  {
	
	public IntegerValueResource_EqualsSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerValueResourceAccess().getEqualsSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValueResource_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// value=INT
protected class IntegerValueResource_ValueAssignment_3 extends AssignmentToken  {
	
	public IntegerValueResource_ValueAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerValueResourceAccess().getValueAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerValueResource_EqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getIntegerValueResourceAccess().getValueINTTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getIntegerValueResourceAccess().getValueINTTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule IntegerValueResource ****************/


/************ begin Rule BooleanValueResource ****************
 *
 * BooleanValueResource:
 * 	"bool" name=ID "=" value=BOOL;
 *
 **/

// "bool" name=ID "=" value=BOOL
protected class BooleanValueResource_Group extends GroupToken {
	
	public BooleanValueResource_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBooleanValueResourceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanValueResource_ValueAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBooleanValueResourceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "bool"
protected class BooleanValueResource_BoolKeyword_0 extends KeywordToken  {
	
	public BooleanValueResource_BoolKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBooleanValueResourceAccess().getBoolKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class BooleanValueResource_NameAssignment_1 extends AssignmentToken  {
	
	public BooleanValueResource_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBooleanValueResourceAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanValueResource_BoolKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBooleanValueResourceAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBooleanValueResourceAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "="
protected class BooleanValueResource_EqualsSignKeyword_2 extends KeywordToken  {
	
	public BooleanValueResource_EqualsSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBooleanValueResourceAccess().getEqualsSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanValueResource_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// value=BOOL
protected class BooleanValueResource_ValueAssignment_3 extends AssignmentToken  {
	
	public BooleanValueResource_ValueAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBooleanValueResourceAccess().getValueAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanValueResource_EqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBooleanValueResourceAccess().getValueBOOLParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getBooleanValueResourceAccess().getValueBOOLParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule BooleanValueResource ****************/


/************ begin Rule ColorValueResource ****************
 *
 * ColorValueResource:
 * 	"color" name=ID "=" value=HEX_COLOR;
 *
 **/

// "color" name=ID "=" value=HEX_COLOR
protected class ColorValueResource_Group extends GroupToken {
	
	public ColorValueResource_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorValueResourceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorValueResource_ValueAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getColorValueResourceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "color"
protected class ColorValueResource_ColorKeyword_0 extends KeywordToken  {
	
	public ColorValueResource_ColorKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorValueResourceAccess().getColorKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class ColorValueResource_NameAssignment_1 extends AssignmentToken  {
	
	public ColorValueResource_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorValueResourceAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorValueResource_ColorKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getColorValueResourceAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getColorValueResourceAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "="
protected class ColorValueResource_EqualsSignKeyword_2 extends KeywordToken  {
	
	public ColorValueResource_EqualsSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorValueResourceAccess().getEqualsSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorValueResource_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// value=HEX_COLOR
protected class ColorValueResource_ValueAssignment_3 extends AssignmentToken  {
	
	public ColorValueResource_ValueAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorValueResourceAccess().getValueAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorValueResource_EqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getColorValueResourceAccess().getValueHEX_COLORTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getColorValueResourceAccess().getValueHEX_COLORTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule ColorValueResource ****************/


/************ begin Rule DimensionValueResource ****************
 *
 * DimensionValueResource:
 * 	"dimension" name=ID "=" value=FLOAT unit=DimensionKind;
 *
 **/

// "dimension" name=ID "=" value=FLOAT unit=DimensionKind
protected class DimensionValueResource_Group extends GroupToken {
	
	public DimensionValueResource_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDimensionValueResourceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionValueResource_UnitAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDimensionValueResourceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "dimension"
protected class DimensionValueResource_DimensionKeyword_0 extends KeywordToken  {
	
	public DimensionValueResource_DimensionKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDimensionValueResourceAccess().getDimensionKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class DimensionValueResource_NameAssignment_1 extends AssignmentToken  {
	
	public DimensionValueResource_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDimensionValueResourceAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionValueResource_DimensionKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDimensionValueResourceAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDimensionValueResourceAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "="
protected class DimensionValueResource_EqualsSignKeyword_2 extends KeywordToken  {
	
	public DimensionValueResource_EqualsSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDimensionValueResourceAccess().getEqualsSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionValueResource_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// value=FLOAT
protected class DimensionValueResource_ValueAssignment_3 extends AssignmentToken  {
	
	public DimensionValueResource_ValueAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDimensionValueResourceAccess().getValueAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionValueResource_EqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDimensionValueResourceAccess().getValueFLOATParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getDimensionValueResourceAccess().getValueFLOATParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// unit=DimensionKind
protected class DimensionValueResource_UnitAssignment_4 extends AssignmentToken  {
	
	public DimensionValueResource_UnitAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDimensionValueResourceAccess().getUnitAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionValueResource_ValueAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("unit",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("unit");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getDimensionValueResourceAccess().getUnitDimensionKindEnumRuleCall_4_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getDimensionValueResourceAccess().getUnitDimensionKindEnumRuleCall_4_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule DimensionValueResource ****************/


/************ begin Rule DrawableResource ****************
 *
 * //http://developer.android.com/guide/topics/resources/drawable-resource.html
 * DrawableResource:
 * 	BitmapDrawableResource | TransitionDrawableResource;
 *
 **/

// BitmapDrawableResource | TransitionDrawableResource
protected class DrawableResource_Alternatives extends AlternativesToken {

	public DrawableResource_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDrawableResourceAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResource_BitmapDrawableResourceParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DrawableResource_TransitionDrawableResourceParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBitmapDrawableResourceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTransitionDrawableResourceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// BitmapDrawableResource
protected class DrawableResource_BitmapDrawableResourceParserRuleCall_0 extends RuleCallToken {
	
	public DrawableResource_BitmapDrawableResourceParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDrawableResourceAccess().getBitmapDrawableResourceParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitmapDrawableResource_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBitmapDrawableResourceRule().getType().getClassifier())
			return null;
		if(checkForRecursion(BitmapDrawableResource_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// TransitionDrawableResource
protected class DrawableResource_TransitionDrawableResourceParserRuleCall_1 extends RuleCallToken {
	
	public DrawableResource_TransitionDrawableResourceParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDrawableResourceAccess().getTransitionDrawableResourceParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TransitionDrawableResource_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTransitionDrawableResourceRule().getType().getClassifier())
			return null;
		if(checkForRecursion(TransitionDrawableResource_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule DrawableResource ****************/


/************ begin Rule BitmapDrawableResource ****************
 *
 * //http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap
 * BitmapDrawableResource:
 * 	"bitmap" name=ID "=" filename=ID;
 *
 **/

// "bitmap" name=ID "=" filename=ID
protected class BitmapDrawableResource_Group extends GroupToken {
	
	public BitmapDrawableResource_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBitmapDrawableResourceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitmapDrawableResource_FilenameAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBitmapDrawableResourceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "bitmap"
protected class BitmapDrawableResource_BitmapKeyword_0 extends KeywordToken  {
	
	public BitmapDrawableResource_BitmapKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBitmapDrawableResourceAccess().getBitmapKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class BitmapDrawableResource_NameAssignment_1 extends AssignmentToken  {
	
	public BitmapDrawableResource_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBitmapDrawableResourceAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitmapDrawableResource_BitmapKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBitmapDrawableResourceAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBitmapDrawableResourceAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "="
protected class BitmapDrawableResource_EqualsSignKeyword_2 extends KeywordToken  {
	
	public BitmapDrawableResource_EqualsSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBitmapDrawableResourceAccess().getEqualsSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitmapDrawableResource_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// filename=ID
protected class BitmapDrawableResource_FilenameAssignment_3 extends AssignmentToken  {
	
	public BitmapDrawableResource_FilenameAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBitmapDrawableResourceAccess().getFilenameAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BitmapDrawableResource_EqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("filename",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("filename");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBitmapDrawableResourceAccess().getFilenameIDTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBitmapDrawableResourceAccess().getFilenameIDTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule BitmapDrawableResource ****************/


/************ begin Rule TransitionDrawableResource ****************
 *
 * //http://developer.android.com/guide/topics/resources/drawable-resource.html#Transition
 * TransitionDrawableResource:
 * 	"transition" from=[DrawableResource] "<->" to=[DrawableResource];
 *
 **/

// "transition" from=[DrawableResource] "<->" to=[DrawableResource]
protected class TransitionDrawableResource_Group extends GroupToken {
	
	public TransitionDrawableResource_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTransitionDrawableResourceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TransitionDrawableResource_ToAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTransitionDrawableResourceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "transition"
protected class TransitionDrawableResource_TransitionKeyword_0 extends KeywordToken  {
	
	public TransitionDrawableResource_TransitionKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTransitionDrawableResourceAccess().getTransitionKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// from=[DrawableResource]
protected class TransitionDrawableResource_FromAssignment_1 extends AssignmentToken  {
	
	public TransitionDrawableResource_FromAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTransitionDrawableResourceAccess().getFromAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TransitionDrawableResource_TransitionKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("from",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("from");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTransitionDrawableResourceAccess().getFromDrawableResourceCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getTransitionDrawableResourceAccess().getFromDrawableResourceCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "<->"
protected class TransitionDrawableResource_LessThanSignHyphenMinusGreaterThanSignKeyword_2 extends KeywordToken  {
	
	public TransitionDrawableResource_LessThanSignHyphenMinusGreaterThanSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTransitionDrawableResourceAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TransitionDrawableResource_FromAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// to=[DrawableResource]
protected class TransitionDrawableResource_ToAssignment_3 extends AssignmentToken  {
	
	public TransitionDrawableResource_ToAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTransitionDrawableResourceAccess().getToAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TransitionDrawableResource_LessThanSignHyphenMinusGreaterThanSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("to",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("to");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTransitionDrawableResourceAccess().getToDrawableResourceCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getTransitionDrawableResourceAccess().getToDrawableResourceCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule TransitionDrawableResource ****************/


/************ begin Rule AnimationResource ****************
 *
 * AnimationResource:
 * 	"animation" {AnimationResource} name=ID "{" //widgets+=Widget*
 * 	"}";
 *
 **/

// "animation" {AnimationResource} name=ID "{" //widgets+=Widget*
// "}"
protected class AnimationResource_Group extends GroupToken {
	
	public AnimationResource_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAnimationResourceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnimationResource_RightCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAnimationResourceAccess().getAnimationResourceAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "animation"
protected class AnimationResource_AnimationKeyword_0 extends KeywordToken  {
	
	public AnimationResource_AnimationKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAnimationResourceAccess().getAnimationKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {AnimationResource}
protected class AnimationResource_AnimationResourceAction_1 extends ActionToken  {

	public AnimationResource_AnimationResourceAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getAnimationResourceAccess().getAnimationResourceAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnimationResource_AnimationKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class AnimationResource_NameAssignment_2 extends AssignmentToken  {
	
	public AnimationResource_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAnimationResourceAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnimationResource_AnimationResourceAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAnimationResourceAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAnimationResourceAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class AnimationResource_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public AnimationResource_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAnimationResourceAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnimationResource_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// //widgets+=Widget*
// "}"
protected class AnimationResource_RightCurlyBracketKeyword_4 extends KeywordToken  {
	
	public AnimationResource_RightCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAnimationResourceAccess().getRightCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnimationResource_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule AnimationResource ****************/


/************ begin Rule Layout ****************
 *
 * Layout:
 * 	"layout" {Layout} name=ID "{" widgets+=Widget* "}";
 *
 **/

// "layout" {Layout} name=ID "{" widgets+=Widget* "}"
protected class Layout_Group extends GroupToken {
	
	public Layout_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLayoutAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Layout_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLayoutAccess().getLayoutAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "layout"
protected class Layout_LayoutKeyword_0 extends KeywordToken  {
	
	public Layout_LayoutKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLayoutAccess().getLayoutKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {Layout}
protected class Layout_LayoutAction_1 extends ActionToken  {

	public Layout_LayoutAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getLayoutAccess().getLayoutAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Layout_LayoutKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class Layout_NameAssignment_2 extends AssignmentToken  {
	
	public Layout_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLayoutAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Layout_LayoutAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLayoutAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLayoutAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Layout_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Layout_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Layout_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// widgets+=Widget*
protected class Layout_WidgetsAssignment_4 extends AssignmentToken  {
	
	public Layout_WidgetsAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLayoutAccess().getWidgetsAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Widget_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("widgets",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("widgets");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getWidgetRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLayoutAccess().getWidgetsWidgetParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Layout_WidgetsAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Layout_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class Layout_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public Layout_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Layout_WidgetsAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Layout_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Layout ****************/


/************ begin Rule Widget ****************
 *
 * Widget:
 * 	GenericWidget //';'
 * 	| Button | ImageButton | Link | Spinner | EditText | TextView;
 *
 **/

// GenericWidget //';'
// | Button | ImageButton | Link | Spinner | EditText | TextView
protected class Widget_Alternatives extends AlternativesToken {

	public Widget_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getWidgetAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Widget_GenericWidgetParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Widget_ButtonParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Widget_ImageButtonParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Widget_LinkParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Widget_SpinnerParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Widget_EditTextParserRuleCall_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Widget_TextViewParserRuleCall_6(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getButtonAccess().getButtonAction_1().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEditTextAccess().getEditTextAction_1().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getGenericWidgetAccess().getGenericWidgetAction_1().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getImageButtonAccess().getImageButtonAction_1().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLinkAccess().getLinkAction_1().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSpinnerAccess().getSpinnerAction_1().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTextViewAccess().getTextViewAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// GenericWidget
protected class Widget_GenericWidgetParserRuleCall_0 extends RuleCallToken {
	
	public Widget_GenericWidgetParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getWidgetAccess().getGenericWidgetParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGenericWidgetAccess().getGenericWidgetAction_1().getType().getClassifier())
			return null;
		if(checkForRecursion(GenericWidget_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Button
protected class Widget_ButtonParserRuleCall_1 extends RuleCallToken {
	
	public Widget_ButtonParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getWidgetAccess().getButtonParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getButtonAccess().getButtonAction_1().getType().getClassifier())
			return null;
		if(checkForRecursion(Button_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ImageButton
protected class Widget_ImageButtonParserRuleCall_2 extends RuleCallToken {
	
	public Widget_ImageButtonParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getWidgetAccess().getImageButtonParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getImageButtonAccess().getImageButtonAction_1().getType().getClassifier())
			return null;
		if(checkForRecursion(ImageButton_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Link
protected class Widget_LinkParserRuleCall_3 extends RuleCallToken {
	
	public Widget_LinkParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getWidgetAccess().getLinkParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLinkAccess().getLinkAction_1().getType().getClassifier())
			return null;
		if(checkForRecursion(Link_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Spinner
protected class Widget_SpinnerParserRuleCall_4 extends RuleCallToken {
	
	public Widget_SpinnerParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getWidgetAccess().getSpinnerParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSpinnerAccess().getSpinnerAction_1().getType().getClassifier())
			return null;
		if(checkForRecursion(Spinner_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EditText
protected class Widget_EditTextParserRuleCall_5 extends RuleCallToken {
	
	public Widget_EditTextParserRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getWidgetAccess().getEditTextParserRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEditTextAccess().getEditTextAction_1().getType().getClassifier())
			return null;
		if(checkForRecursion(EditText_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// TextView
protected class Widget_TextViewParserRuleCall_6 extends RuleCallToken {
	
	public Widget_TextViewParserRuleCall_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getWidgetAccess().getTextViewParserRuleCall_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTextViewAccess().getTextViewAction_1().getType().getClassifier())
			return null;
		if(checkForRecursion(TextView_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Widget ****************/


/************ begin Rule GenericWidget ****************
 *
 * GenericWidget:
 * 	"widget" {GenericWidget} ("<" id=ID ">")? name=STRING (("top:" top=DimensionPropertyValue)? & ("left:"
 * 	left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:" height=DimensionPropertyValue)?
 * 	& ("background:" background=DrawableResourcePropertyValue)? & ("clickable?" clickable=BooleanPropertyValue)? &
 * 	("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
 * 	isScrollContainer=BooleanPropertyValue)?) // Specific properties
 * 	("->" actions+=Action)*;
 *
 **/

// "widget" {GenericWidget} ("<" id=ID ">")? name=STRING (("top:" top=DimensionPropertyValue)? & ("left:"
// left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:" height=DimensionPropertyValue)? &
// ("background:" background=DrawableResourcePropertyValue)? & ("clickable?" clickable=BooleanPropertyValue)? &
// ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
// isScrollContainer=BooleanPropertyValue)?) // Specific properties
// ("->" actions+=Action)*
protected class GenericWidget_Group extends GroupToken {
	
	public GenericWidget_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GenericWidget_UnorderedGroup_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGenericWidgetAccess().getGenericWidgetAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "widget"
protected class GenericWidget_WidgetKeyword_0 extends KeywordToken  {
	
	public GenericWidget_WidgetKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getWidgetKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {GenericWidget}
protected class GenericWidget_GenericWidgetAction_1 extends ActionToken  {

	public GenericWidget_GenericWidgetAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getGenericWidgetAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_WidgetKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ("<" id=ID ">")?
protected class GenericWidget_Group_2 extends GroupToken {
	
	public GenericWidget_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_GreaterThanSignKeyword_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "<"
protected class GenericWidget_LessThanSignKeyword_2_0 extends KeywordToken  {
	
	public GenericWidget_LessThanSignKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getLessThanSignKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_GenericWidgetAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// id=ID
protected class GenericWidget_IdAssignment_2_1 extends AssignmentToken  {
	
	public GenericWidget_IdAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getIdAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_LessThanSignKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGenericWidgetAccess().getIdIDTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGenericWidgetAccess().getIdIDTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}

// ">"
protected class GenericWidget_GreaterThanSignKeyword_2_2 extends KeywordToken  {
	
	public GenericWidget_GreaterThanSignKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getGreaterThanSignKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_IdAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// name=STRING
protected class GenericWidget_NameAssignment_3 extends AssignmentToken  {
	
	public GenericWidget_NameAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getNameAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GenericWidget_GenericWidgetAction_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGenericWidgetAccess().getNameSTRINGTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGenericWidgetAccess().getNameSTRINGTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// ("top:" top=DimensionPropertyValue)? & ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)?
// & ("height:" height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? &
// ("clickable?" clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? &
// ("isScrollContainer?" isScrollContainer=BooleanPropertyValue)?
protected class GenericWidget_UnorderedGroup_4 extends UnorderedGroupToken {
	
	public GenericWidget_UnorderedGroup_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getUnorderedGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_Group_4_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GenericWidget_Group_4_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new GenericWidget_Group_4_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new GenericWidget_Group_4_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new GenericWidget_Group_4_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new GenericWidget_Group_4_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new GenericWidget_Group_4_1(lastRuleCallOrigin, this, 6, inst);
			case 7: return new GenericWidget_Group_4_0(lastRuleCallOrigin, this, 7, inst);
			case 8: return new GenericWidget_NameAssignment_3(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// ("top:" top=DimensionPropertyValue)?
protected class GenericWidget_Group_4_0 extends GroupToken {
	
	public GenericWidget_Group_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getGroup_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_TopAssignment_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "top:"
protected class GenericWidget_TopKeyword_4_0_0 extends KeywordToken  {
	
	public GenericWidget_TopKeyword_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getTopKeyword_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_NameAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// top=DimensionPropertyValue
protected class GenericWidget_TopAssignment_4_0_1 extends AssignmentToken  {
	
	public GenericWidget_TopAssignment_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getTopAssignment_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("top",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("top");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGenericWidgetAccess().getTopDimensionPropertyValueParserRuleCall_4_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new GenericWidget_TopKeyword_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("left:" left=DimensionPropertyValue)?
protected class GenericWidget_Group_4_1 extends GroupToken {
	
	public GenericWidget_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_LeftAssignment_4_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "left:"
protected class GenericWidget_LeftKeyword_4_1_0 extends KeywordToken  {
	
	public GenericWidget_LeftKeyword_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getLeftKeyword_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GenericWidget_NameAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// left=DimensionPropertyValue
protected class GenericWidget_LeftAssignment_4_1_1 extends AssignmentToken  {
	
	public GenericWidget_LeftAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getLeftAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("left",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("left");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGenericWidgetAccess().getLeftDimensionPropertyValueParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new GenericWidget_LeftKeyword_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("width:" width=DimensionPropertyValue)?
protected class GenericWidget_Group_4_2 extends GroupToken {
	
	public GenericWidget_Group_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getGroup_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_WidthAssignment_4_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "width:"
protected class GenericWidget_WidthKeyword_4_2_0 extends KeywordToken  {
	
	public GenericWidget_WidthKeyword_4_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getWidthKeyword_4_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_Group_4_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GenericWidget_Group_4_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new GenericWidget_NameAssignment_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// width=DimensionPropertyValue
protected class GenericWidget_WidthAssignment_4_2_1 extends AssignmentToken  {
	
	public GenericWidget_WidthAssignment_4_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getWidthAssignment_4_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("width",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("width");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGenericWidgetAccess().getWidthDimensionPropertyValueParserRuleCall_4_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new GenericWidget_WidthKeyword_4_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("height:" height=DimensionPropertyValue)?
protected class GenericWidget_Group_4_3 extends GroupToken {
	
	public GenericWidget_Group_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getGroup_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_HeightAssignment_4_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "height:"
protected class GenericWidget_HeightKeyword_4_3_0 extends KeywordToken  {
	
	public GenericWidget_HeightKeyword_4_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getHeightKeyword_4_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_Group_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GenericWidget_Group_4_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new GenericWidget_Group_4_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new GenericWidget_NameAssignment_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// height=DimensionPropertyValue
protected class GenericWidget_HeightAssignment_4_3_1 extends AssignmentToken  {
	
	public GenericWidget_HeightAssignment_4_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getHeightAssignment_4_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("height",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("height");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGenericWidgetAccess().getHeightDimensionPropertyValueParserRuleCall_4_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new GenericWidget_HeightKeyword_4_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("background:" background=DrawableResourcePropertyValue)?
protected class GenericWidget_Group_4_4 extends GroupToken {
	
	public GenericWidget_Group_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getGroup_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_BackgroundAssignment_4_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "background:"
protected class GenericWidget_BackgroundKeyword_4_4_0 extends KeywordToken  {
	
	public GenericWidget_BackgroundKeyword_4_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getBackgroundKeyword_4_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GenericWidget_Group_4_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new GenericWidget_Group_4_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new GenericWidget_Group_4_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new GenericWidget_NameAssignment_3(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// background=DrawableResourcePropertyValue
protected class GenericWidget_BackgroundAssignment_4_4_1 extends AssignmentToken  {
	
	public GenericWidget_BackgroundAssignment_4_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getBackgroundAssignment_4_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResourcePropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("background",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("background");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDrawableResourcePropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGenericWidgetAccess().getBackgroundDrawableResourcePropertyValueParserRuleCall_4_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new GenericWidget_BackgroundKeyword_4_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("clickable?" clickable=BooleanPropertyValue)?
protected class GenericWidget_Group_4_5 extends GroupToken {
	
	public GenericWidget_Group_4_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getGroup_4_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_ClickableAssignment_4_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "clickable?"
protected class GenericWidget_ClickableKeyword_4_5_0 extends KeywordToken  {
	
	public GenericWidget_ClickableKeyword_4_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getClickableKeyword_4_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_Group_4_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GenericWidget_Group_4_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new GenericWidget_Group_4_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new GenericWidget_Group_4_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new GenericWidget_Group_4_0(lastRuleCallOrigin, this, 4, inst);
			case 5: return new GenericWidget_NameAssignment_3(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// clickable=BooleanPropertyValue
protected class GenericWidget_ClickableAssignment_4_5_1 extends AssignmentToken  {
	
	public GenericWidget_ClickableAssignment_4_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getClickableAssignment_4_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("clickable",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("clickable");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGenericWidgetAccess().getClickableBooleanPropertyValueParserRuleCall_4_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new GenericWidget_ClickableKeyword_4_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)?
protected class GenericWidget_Group_4_6 extends GroupToken {
	
	public GenericWidget_Group_4_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getGroup_4_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_FadeScrollBarsAssignment_4_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "fadeScrollBars?"
protected class GenericWidget_FadeScrollBarsKeyword_4_6_0 extends KeywordToken  {
	
	public GenericWidget_FadeScrollBarsKeyword_4_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getFadeScrollBarsKeyword_4_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_Group_4_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GenericWidget_Group_4_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new GenericWidget_Group_4_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new GenericWidget_Group_4_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new GenericWidget_Group_4_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new GenericWidget_Group_4_0(lastRuleCallOrigin, this, 5, inst);
			case 6: return new GenericWidget_NameAssignment_3(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// fadeScrollBars=BooleanPropertyValue
protected class GenericWidget_FadeScrollBarsAssignment_4_6_1 extends AssignmentToken  {
	
	public GenericWidget_FadeScrollBarsAssignment_4_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getFadeScrollBarsAssignment_4_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("fadeScrollBars",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("fadeScrollBars");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGenericWidgetAccess().getFadeScrollBarsBooleanPropertyValueParserRuleCall_4_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new GenericWidget_FadeScrollBarsKeyword_4_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("isScrollContainer?" isScrollContainer=BooleanPropertyValue)?
protected class GenericWidget_Group_4_7 extends GroupToken {
	
	public GenericWidget_Group_4_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getGroup_4_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_IsScrollContainerAssignment_4_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "isScrollContainer?"
protected class GenericWidget_IsScrollContainerKeyword_4_7_0 extends KeywordToken  {
	
	public GenericWidget_IsScrollContainerKeyword_4_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getIsScrollContainerKeyword_4_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_Group_4_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GenericWidget_Group_4_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new GenericWidget_Group_4_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new GenericWidget_Group_4_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new GenericWidget_Group_4_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new GenericWidget_Group_4_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new GenericWidget_Group_4_0(lastRuleCallOrigin, this, 6, inst);
			case 7: return new GenericWidget_NameAssignment_3(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// isScrollContainer=BooleanPropertyValue
protected class GenericWidget_IsScrollContainerAssignment_4_7_1 extends AssignmentToken  {
	
	public GenericWidget_IsScrollContainerAssignment_4_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getIsScrollContainerAssignment_4_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isScrollContainer",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isScrollContainer");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGenericWidgetAccess().getIsScrollContainerBooleanPropertyValueParserRuleCall_4_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new GenericWidget_IsScrollContainerKeyword_4_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// ("->" actions+=Action)*
protected class GenericWidget_Group_5 extends GroupToken {
	
	public GenericWidget_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_ActionsAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "->"
protected class GenericWidget_HyphenMinusGreaterThanSignKeyword_5_0 extends KeywordToken  {
	
	public GenericWidget_HyphenMinusGreaterThanSignKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getHyphenMinusGreaterThanSignKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericWidget_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GenericWidget_UnorderedGroup_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// actions+=Action
protected class GenericWidget_ActionsAssignment_5_1 extends AssignmentToken  {
	
	public GenericWidget_ActionsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericWidgetAccess().getActionsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Action_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getActionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGenericWidgetAccess().getActionsActionParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new GenericWidget_HyphenMinusGreaterThanSignKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule GenericWidget ****************/


/************ begin Rule TextView ****************
 *
 * TextView:
 * 	"textView" {TextView} ("<" id=ID ">")? text=StringPropertyValue (("top:" top=DimensionPropertyValue)? // Specific properties
 * 	& ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
 * 	height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
 * 	clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
 * 	isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
 * 	textColor=ColorPropertyValue)?) ("->" actions+=Action)*;
 *
 **/

// "textView" {TextView} ("<" id=ID ">")? text=StringPropertyValue (("top:" top=DimensionPropertyValue)? // Specific properties
// & ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
// height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
// clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
// isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
// textColor=ColorPropertyValue)?) ("->" actions+=Action)*
protected class TextView_Group extends GroupToken {
	
	public TextView_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TextView_UnorderedGroup_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTextViewAccess().getTextViewAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "textView"
protected class TextView_TextViewKeyword_0 extends KeywordToken  {
	
	public TextView_TextViewKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getTextViewKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {TextView}
protected class TextView_TextViewAction_1 extends ActionToken  {

	public TextView_TextViewAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getTextViewAccess().getTextViewAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_TextViewKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ("<" id=ID ">")?
protected class TextView_Group_2 extends GroupToken {
	
	public TextView_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_GreaterThanSignKeyword_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "<"
protected class TextView_LessThanSignKeyword_2_0 extends KeywordToken  {
	
	public TextView_LessThanSignKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getLessThanSignKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_TextViewAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// id=ID
protected class TextView_IdAssignment_2_1 extends AssignmentToken  {
	
	public TextView_IdAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextViewAccess().getIdAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_LessThanSignKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTextViewAccess().getIdIDTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTextViewAccess().getIdIDTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}

// ">"
protected class TextView_GreaterThanSignKeyword_2_2 extends KeywordToken  {
	
	public TextView_GreaterThanSignKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGreaterThanSignKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_IdAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// text=StringPropertyValue
protected class TextView_TextAssignment_3 extends AssignmentToken  {
	
	public TextView_TextAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextViewAccess().getTextAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("text",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("text");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStringPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextViewAccess().getTextStringPropertyValueParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new TextView_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new TextView_TextViewAction_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("top:" top=DimensionPropertyValue)? // Specific properties
// & ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
// height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
// clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
// isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
// textColor=ColorPropertyValue)?
protected class TextView_UnorderedGroup_4 extends UnorderedGroupToken {
	
	public TextView_UnorderedGroup_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getTextViewAccess().getUnorderedGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_Group_4_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TextView_Group_4_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new TextView_Group_4_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new TextView_Group_4_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new TextView_Group_4_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new TextView_Group_4_4(lastRuleCallOrigin, this, 5, inst);
			case 6: return new TextView_Group_4_3(lastRuleCallOrigin, this, 6, inst);
			case 7: return new TextView_Group_4_2(lastRuleCallOrigin, this, 7, inst);
			case 8: return new TextView_Group_4_1(lastRuleCallOrigin, this, 8, inst);
			case 9: return new TextView_Group_4_0(lastRuleCallOrigin, this, 9, inst);
			case 10: return new TextView_TextAssignment_3(lastRuleCallOrigin, this, 10, inst);
			default: return null;
		}	
	}

}

// ("top:" top=DimensionPropertyValue)?
protected class TextView_Group_4_0 extends GroupToken {
	
	public TextView_Group_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGroup_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_TopAssignment_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "top:"
protected class TextView_TopKeyword_4_0_0 extends KeywordToken  {
	
	public TextView_TopKeyword_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getTopKeyword_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_TextAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// top=DimensionPropertyValue
protected class TextView_TopAssignment_4_0_1 extends AssignmentToken  {
	
	public TextView_TopAssignment_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextViewAccess().getTopAssignment_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("top",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("top");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextViewAccess().getTopDimensionPropertyValueParserRuleCall_4_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new TextView_TopKeyword_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("left:" left=DimensionPropertyValue)?
protected class TextView_Group_4_1 extends GroupToken {
	
	public TextView_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_LeftAssignment_4_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "left:"
protected class TextView_LeftKeyword_4_1_0 extends KeywordToken  {
	
	public TextView_LeftKeyword_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getLeftKeyword_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TextView_TextAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// left=DimensionPropertyValue
protected class TextView_LeftAssignment_4_1_1 extends AssignmentToken  {
	
	public TextView_LeftAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextViewAccess().getLeftAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("left",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("left");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextViewAccess().getLeftDimensionPropertyValueParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new TextView_LeftKeyword_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("width:" width=DimensionPropertyValue)?
protected class TextView_Group_4_2 extends GroupToken {
	
	public TextView_Group_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGroup_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_WidthAssignment_4_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "width:"
protected class TextView_WidthKeyword_4_2_0 extends KeywordToken  {
	
	public TextView_WidthKeyword_4_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getWidthKeyword_4_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_Group_4_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TextView_Group_4_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new TextView_TextAssignment_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// width=DimensionPropertyValue
protected class TextView_WidthAssignment_4_2_1 extends AssignmentToken  {
	
	public TextView_WidthAssignment_4_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextViewAccess().getWidthAssignment_4_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("width",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("width");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextViewAccess().getWidthDimensionPropertyValueParserRuleCall_4_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new TextView_WidthKeyword_4_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("height:" height=DimensionPropertyValue)?
protected class TextView_Group_4_3 extends GroupToken {
	
	public TextView_Group_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGroup_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_HeightAssignment_4_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "height:"
protected class TextView_HeightKeyword_4_3_0 extends KeywordToken  {
	
	public TextView_HeightKeyword_4_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getHeightKeyword_4_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_Group_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TextView_Group_4_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new TextView_Group_4_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new TextView_TextAssignment_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// height=DimensionPropertyValue
protected class TextView_HeightAssignment_4_3_1 extends AssignmentToken  {
	
	public TextView_HeightAssignment_4_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextViewAccess().getHeightAssignment_4_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("height",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("height");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextViewAccess().getHeightDimensionPropertyValueParserRuleCall_4_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new TextView_HeightKeyword_4_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("background:" background=DrawableResourcePropertyValue)?
protected class TextView_Group_4_4 extends GroupToken {
	
	public TextView_Group_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGroup_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_BackgroundAssignment_4_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "background:"
protected class TextView_BackgroundKeyword_4_4_0 extends KeywordToken  {
	
	public TextView_BackgroundKeyword_4_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getBackgroundKeyword_4_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TextView_Group_4_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new TextView_Group_4_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new TextView_Group_4_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new TextView_TextAssignment_3(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// background=DrawableResourcePropertyValue
protected class TextView_BackgroundAssignment_4_4_1 extends AssignmentToken  {
	
	public TextView_BackgroundAssignment_4_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextViewAccess().getBackgroundAssignment_4_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResourcePropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("background",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("background");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDrawableResourcePropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextViewAccess().getBackgroundDrawableResourcePropertyValueParserRuleCall_4_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new TextView_BackgroundKeyword_4_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("clickable?" clickable=BooleanPropertyValue)?
protected class TextView_Group_4_5 extends GroupToken {
	
	public TextView_Group_4_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGroup_4_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_ClickableAssignment_4_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "clickable?"
protected class TextView_ClickableKeyword_4_5_0 extends KeywordToken  {
	
	public TextView_ClickableKeyword_4_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getClickableKeyword_4_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_Group_4_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TextView_Group_4_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new TextView_Group_4_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new TextView_Group_4_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new TextView_Group_4_0(lastRuleCallOrigin, this, 4, inst);
			case 5: return new TextView_TextAssignment_3(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// clickable=BooleanPropertyValue
protected class TextView_ClickableAssignment_4_5_1 extends AssignmentToken  {
	
	public TextView_ClickableAssignment_4_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextViewAccess().getClickableAssignment_4_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("clickable",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("clickable");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextViewAccess().getClickableBooleanPropertyValueParserRuleCall_4_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new TextView_ClickableKeyword_4_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)?
protected class TextView_Group_4_6 extends GroupToken {
	
	public TextView_Group_4_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGroup_4_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_FadeScrollBarsAssignment_4_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "fadeScrollBars?"
protected class TextView_FadeScrollBarsKeyword_4_6_0 extends KeywordToken  {
	
	public TextView_FadeScrollBarsKeyword_4_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getFadeScrollBarsKeyword_4_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_Group_4_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TextView_Group_4_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new TextView_Group_4_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new TextView_Group_4_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new TextView_Group_4_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new TextView_Group_4_0(lastRuleCallOrigin, this, 5, inst);
			case 6: return new TextView_TextAssignment_3(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// fadeScrollBars=BooleanPropertyValue
protected class TextView_FadeScrollBarsAssignment_4_6_1 extends AssignmentToken  {
	
	public TextView_FadeScrollBarsAssignment_4_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextViewAccess().getFadeScrollBarsAssignment_4_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("fadeScrollBars",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("fadeScrollBars");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextViewAccess().getFadeScrollBarsBooleanPropertyValueParserRuleCall_4_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new TextView_FadeScrollBarsKeyword_4_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("isScrollContainer?" isScrollContainer=BooleanPropertyValue)?
protected class TextView_Group_4_7 extends GroupToken {
	
	public TextView_Group_4_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGroup_4_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_IsScrollContainerAssignment_4_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "isScrollContainer?"
protected class TextView_IsScrollContainerKeyword_4_7_0 extends KeywordToken  {
	
	public TextView_IsScrollContainerKeyword_4_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getIsScrollContainerKeyword_4_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_Group_4_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TextView_Group_4_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new TextView_Group_4_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new TextView_Group_4_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new TextView_Group_4_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new TextView_Group_4_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new TextView_Group_4_0(lastRuleCallOrigin, this, 6, inst);
			case 7: return new TextView_TextAssignment_3(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// isScrollContainer=BooleanPropertyValue
protected class TextView_IsScrollContainerAssignment_4_7_1 extends AssignmentToken  {
	
	public TextView_IsScrollContainerAssignment_4_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextViewAccess().getIsScrollContainerAssignment_4_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isScrollContainer",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isScrollContainer");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextViewAccess().getIsScrollContainerBooleanPropertyValueParserRuleCall_4_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new TextView_IsScrollContainerKeyword_4_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("hint:" hint=StringPropertyValue)?
protected class TextView_Group_4_8 extends GroupToken {
	
	public TextView_Group_4_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGroup_4_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_HintAssignment_4_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "hint:"
protected class TextView_HintKeyword_4_8_0 extends KeywordToken  {
	
	public TextView_HintKeyword_4_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getHintKeyword_4_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_Group_4_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TextView_Group_4_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new TextView_Group_4_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new TextView_Group_4_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new TextView_Group_4_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new TextView_Group_4_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new TextView_Group_4_1(lastRuleCallOrigin, this, 6, inst);
			case 7: return new TextView_Group_4_0(lastRuleCallOrigin, this, 7, inst);
			case 8: return new TextView_TextAssignment_3(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// hint=StringPropertyValue
protected class TextView_HintAssignment_4_8_1 extends AssignmentToken  {
	
	public TextView_HintAssignment_4_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextViewAccess().getHintAssignment_4_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hint",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hint");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStringPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextViewAccess().getHintStringPropertyValueParserRuleCall_4_8_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new TextView_HintKeyword_4_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("textColor:" textColor=ColorPropertyValue)?
protected class TextView_Group_4_9 extends GroupToken {
	
	public TextView_Group_4_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGroup_4_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_TextColorAssignment_4_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "textColor:"
protected class TextView_TextColorKeyword_4_9_0 extends KeywordToken  {
	
	public TextView_TextColorKeyword_4_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getTextColorKeyword_4_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_Group_4_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TextView_Group_4_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new TextView_Group_4_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new TextView_Group_4_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new TextView_Group_4_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new TextView_Group_4_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new TextView_Group_4_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new TextView_Group_4_1(lastRuleCallOrigin, this, 7, inst);
			case 8: return new TextView_Group_4_0(lastRuleCallOrigin, this, 8, inst);
			case 9: return new TextView_TextAssignment_3(lastRuleCallOrigin, this, 9, inst);
			default: return null;
		}	
	}

}

// textColor=ColorPropertyValue
protected class TextView_TextColorAssignment_4_9_1 extends AssignmentToken  {
	
	public TextView_TextColorAssignment_4_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextViewAccess().getTextColorAssignment_4_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("textColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("textColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextViewAccess().getTextColorColorPropertyValueParserRuleCall_4_9_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new TextView_TextColorKeyword_4_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// ("->" actions+=Action)*
protected class TextView_Group_5 extends GroupToken {
	
	public TextView_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextViewAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_ActionsAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "->"
protected class TextView_HyphenMinusGreaterThanSignKeyword_5_0 extends KeywordToken  {
	
	public TextView_HyphenMinusGreaterThanSignKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextViewAccess().getHyphenMinusGreaterThanSignKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TextView_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TextView_UnorderedGroup_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// actions+=Action
protected class TextView_ActionsAssignment_5_1 extends AssignmentToken  {
	
	public TextView_ActionsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextViewAccess().getActionsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Action_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getActionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextViewAccess().getActionsActionParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new TextView_HyphenMinusGreaterThanSignKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule TextView ****************/


/************ begin Rule Button ****************
 *
 * Button:
 * 	"button" {Button} ("<" id=ID ">")? text=StringPropertyValue (("top:" top=DimensionPropertyValue)? // Specific properties
 * 	& ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
 * 	height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
 * 	clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
 * 	isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
 * 	textColor=ColorPropertyValue)?) ("->" actions+=Action)*;
 *
 **/

// "button" {Button} ("<" id=ID ">")? text=StringPropertyValue (("top:" top=DimensionPropertyValue)? // Specific properties
// & ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
// height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
// clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
// isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
// textColor=ColorPropertyValue)?) ("->" actions+=Action)*
protected class Button_Group extends GroupToken {
	
	public Button_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getButtonAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Button_UnorderedGroup_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getButtonAccess().getButtonAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "button"
protected class Button_ButtonKeyword_0 extends KeywordToken  {
	
	public Button_ButtonKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getButtonKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {Button}
protected class Button_ButtonAction_1 extends ActionToken  {

	public Button_ButtonAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getButtonAccess().getButtonAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_ButtonKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ("<" id=ID ">")?
protected class Button_Group_2 extends GroupToken {
	
	public Button_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getButtonAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_GreaterThanSignKeyword_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "<"
protected class Button_LessThanSignKeyword_2_0 extends KeywordToken  {
	
	public Button_LessThanSignKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getLessThanSignKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_ButtonAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// id=ID
protected class Button_IdAssignment_2_1 extends AssignmentToken  {
	
	public Button_IdAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getButtonAccess().getIdAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_LessThanSignKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getButtonAccess().getIdIDTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getButtonAccess().getIdIDTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}

// ">"
protected class Button_GreaterThanSignKeyword_2_2 extends KeywordToken  {
	
	public Button_GreaterThanSignKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getGreaterThanSignKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_IdAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// text=StringPropertyValue
protected class Button_TextAssignment_3 extends AssignmentToken  {
	
	public Button_TextAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getButtonAccess().getTextAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("text",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("text");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStringPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getButtonAccess().getTextStringPropertyValueParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Button_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Button_ButtonAction_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("top:" top=DimensionPropertyValue)? // Specific properties
// & ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
// height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
// clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
// isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
// textColor=ColorPropertyValue)?
protected class Button_UnorderedGroup_4 extends UnorderedGroupToken {
	
	public Button_UnorderedGroup_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getButtonAccess().getUnorderedGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_Group_4_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Button_Group_4_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Button_Group_4_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Button_Group_4_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Button_Group_4_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Button_Group_4_4(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Button_Group_4_3(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Button_Group_4_2(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Button_Group_4_1(lastRuleCallOrigin, this, 8, inst);
			case 9: return new Button_Group_4_0(lastRuleCallOrigin, this, 9, inst);
			case 10: return new Button_TextAssignment_3(lastRuleCallOrigin, this, 10, inst);
			default: return null;
		}	
	}

}

// ("top:" top=DimensionPropertyValue)?
protected class Button_Group_4_0 extends GroupToken {
	
	public Button_Group_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getButtonAccess().getGroup_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_TopAssignment_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "top:"
protected class Button_TopKeyword_4_0_0 extends KeywordToken  {
	
	public Button_TopKeyword_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getTopKeyword_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_TextAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// top=DimensionPropertyValue
protected class Button_TopAssignment_4_0_1 extends AssignmentToken  {
	
	public Button_TopAssignment_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getButtonAccess().getTopAssignment_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("top",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("top");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getButtonAccess().getTopDimensionPropertyValueParserRuleCall_4_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Button_TopKeyword_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("left:" left=DimensionPropertyValue)?
protected class Button_Group_4_1 extends GroupToken {
	
	public Button_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getButtonAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_LeftAssignment_4_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "left:"
protected class Button_LeftKeyword_4_1_0 extends KeywordToken  {
	
	public Button_LeftKeyword_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getLeftKeyword_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Button_TextAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// left=DimensionPropertyValue
protected class Button_LeftAssignment_4_1_1 extends AssignmentToken  {
	
	public Button_LeftAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getButtonAccess().getLeftAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("left",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("left");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getButtonAccess().getLeftDimensionPropertyValueParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Button_LeftKeyword_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("width:" width=DimensionPropertyValue)?
protected class Button_Group_4_2 extends GroupToken {
	
	public Button_Group_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getButtonAccess().getGroup_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_WidthAssignment_4_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "width:"
protected class Button_WidthKeyword_4_2_0 extends KeywordToken  {
	
	public Button_WidthKeyword_4_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getWidthKeyword_4_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_Group_4_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Button_Group_4_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Button_TextAssignment_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// width=DimensionPropertyValue
protected class Button_WidthAssignment_4_2_1 extends AssignmentToken  {
	
	public Button_WidthAssignment_4_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getButtonAccess().getWidthAssignment_4_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("width",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("width");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getButtonAccess().getWidthDimensionPropertyValueParserRuleCall_4_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Button_WidthKeyword_4_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("height:" height=DimensionPropertyValue)?
protected class Button_Group_4_3 extends GroupToken {
	
	public Button_Group_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getButtonAccess().getGroup_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_HeightAssignment_4_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "height:"
protected class Button_HeightKeyword_4_3_0 extends KeywordToken  {
	
	public Button_HeightKeyword_4_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getHeightKeyword_4_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_Group_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Button_Group_4_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Button_Group_4_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Button_TextAssignment_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// height=DimensionPropertyValue
protected class Button_HeightAssignment_4_3_1 extends AssignmentToken  {
	
	public Button_HeightAssignment_4_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getButtonAccess().getHeightAssignment_4_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("height",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("height");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getButtonAccess().getHeightDimensionPropertyValueParserRuleCall_4_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Button_HeightKeyword_4_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("background:" background=DrawableResourcePropertyValue)?
protected class Button_Group_4_4 extends GroupToken {
	
	public Button_Group_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getButtonAccess().getGroup_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_BackgroundAssignment_4_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "background:"
protected class Button_BackgroundKeyword_4_4_0 extends KeywordToken  {
	
	public Button_BackgroundKeyword_4_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getBackgroundKeyword_4_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Button_Group_4_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Button_Group_4_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Button_Group_4_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Button_TextAssignment_3(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// background=DrawableResourcePropertyValue
protected class Button_BackgroundAssignment_4_4_1 extends AssignmentToken  {
	
	public Button_BackgroundAssignment_4_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getButtonAccess().getBackgroundAssignment_4_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResourcePropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("background",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("background");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDrawableResourcePropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getButtonAccess().getBackgroundDrawableResourcePropertyValueParserRuleCall_4_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Button_BackgroundKeyword_4_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("clickable?" clickable=BooleanPropertyValue)?
protected class Button_Group_4_5 extends GroupToken {
	
	public Button_Group_4_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getButtonAccess().getGroup_4_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_ClickableAssignment_4_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "clickable?"
protected class Button_ClickableKeyword_4_5_0 extends KeywordToken  {
	
	public Button_ClickableKeyword_4_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getClickableKeyword_4_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_Group_4_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Button_Group_4_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Button_Group_4_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Button_Group_4_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Button_Group_4_0(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Button_TextAssignment_3(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// clickable=BooleanPropertyValue
protected class Button_ClickableAssignment_4_5_1 extends AssignmentToken  {
	
	public Button_ClickableAssignment_4_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getButtonAccess().getClickableAssignment_4_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("clickable",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("clickable");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getButtonAccess().getClickableBooleanPropertyValueParserRuleCall_4_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Button_ClickableKeyword_4_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)?
protected class Button_Group_4_6 extends GroupToken {
	
	public Button_Group_4_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getButtonAccess().getGroup_4_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_FadeScrollBarsAssignment_4_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "fadeScrollBars?"
protected class Button_FadeScrollBarsKeyword_4_6_0 extends KeywordToken  {
	
	public Button_FadeScrollBarsKeyword_4_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getFadeScrollBarsKeyword_4_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_Group_4_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Button_Group_4_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Button_Group_4_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Button_Group_4_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Button_Group_4_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Button_Group_4_0(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Button_TextAssignment_3(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// fadeScrollBars=BooleanPropertyValue
protected class Button_FadeScrollBarsAssignment_4_6_1 extends AssignmentToken  {
	
	public Button_FadeScrollBarsAssignment_4_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getButtonAccess().getFadeScrollBarsAssignment_4_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("fadeScrollBars",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("fadeScrollBars");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getButtonAccess().getFadeScrollBarsBooleanPropertyValueParserRuleCall_4_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Button_FadeScrollBarsKeyword_4_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("isScrollContainer?" isScrollContainer=BooleanPropertyValue)?
protected class Button_Group_4_7 extends GroupToken {
	
	public Button_Group_4_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getButtonAccess().getGroup_4_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_IsScrollContainerAssignment_4_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "isScrollContainer?"
protected class Button_IsScrollContainerKeyword_4_7_0 extends KeywordToken  {
	
	public Button_IsScrollContainerKeyword_4_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getIsScrollContainerKeyword_4_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_Group_4_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Button_Group_4_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Button_Group_4_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Button_Group_4_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Button_Group_4_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Button_Group_4_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Button_Group_4_0(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Button_TextAssignment_3(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// isScrollContainer=BooleanPropertyValue
protected class Button_IsScrollContainerAssignment_4_7_1 extends AssignmentToken  {
	
	public Button_IsScrollContainerAssignment_4_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getButtonAccess().getIsScrollContainerAssignment_4_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isScrollContainer",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isScrollContainer");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getButtonAccess().getIsScrollContainerBooleanPropertyValueParserRuleCall_4_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Button_IsScrollContainerKeyword_4_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("hint:" hint=StringPropertyValue)?
protected class Button_Group_4_8 extends GroupToken {
	
	public Button_Group_4_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getButtonAccess().getGroup_4_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_HintAssignment_4_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "hint:"
protected class Button_HintKeyword_4_8_0 extends KeywordToken  {
	
	public Button_HintKeyword_4_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getHintKeyword_4_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_Group_4_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Button_Group_4_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Button_Group_4_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Button_Group_4_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Button_Group_4_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Button_Group_4_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Button_Group_4_1(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Button_Group_4_0(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Button_TextAssignment_3(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// hint=StringPropertyValue
protected class Button_HintAssignment_4_8_1 extends AssignmentToken  {
	
	public Button_HintAssignment_4_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getButtonAccess().getHintAssignment_4_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hint",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hint");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStringPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getButtonAccess().getHintStringPropertyValueParserRuleCall_4_8_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Button_HintKeyword_4_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("textColor:" textColor=ColorPropertyValue)?
protected class Button_Group_4_9 extends GroupToken {
	
	public Button_Group_4_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getButtonAccess().getGroup_4_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_TextColorAssignment_4_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "textColor:"
protected class Button_TextColorKeyword_4_9_0 extends KeywordToken  {
	
	public Button_TextColorKeyword_4_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getTextColorKeyword_4_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_Group_4_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Button_Group_4_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Button_Group_4_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Button_Group_4_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Button_Group_4_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Button_Group_4_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Button_Group_4_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Button_Group_4_1(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Button_Group_4_0(lastRuleCallOrigin, this, 8, inst);
			case 9: return new Button_TextAssignment_3(lastRuleCallOrigin, this, 9, inst);
			default: return null;
		}	
	}

}

// textColor=ColorPropertyValue
protected class Button_TextColorAssignment_4_9_1 extends AssignmentToken  {
	
	public Button_TextColorAssignment_4_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getButtonAccess().getTextColorAssignment_4_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("textColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("textColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getButtonAccess().getTextColorColorPropertyValueParserRuleCall_4_9_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Button_TextColorKeyword_4_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// ("->" actions+=Action)*
protected class Button_Group_5 extends GroupToken {
	
	public Button_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getButtonAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_ActionsAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "->"
protected class Button_HyphenMinusGreaterThanSignKeyword_5_0 extends KeywordToken  {
	
	public Button_HyphenMinusGreaterThanSignKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getButtonAccess().getHyphenMinusGreaterThanSignKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Button_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Button_UnorderedGroup_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// actions+=Action
protected class Button_ActionsAssignment_5_1 extends AssignmentToken  {
	
	public Button_ActionsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getButtonAccess().getActionsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Action_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getActionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getButtonAccess().getActionsActionParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Button_HyphenMinusGreaterThanSignKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule Button ****************/


/************ begin Rule ImageButton ****************
 *
 * ImageButton:
 * 	"imageButton" {ImageButton} ("<" id=ID ">")? src=DrawableImageResourcePropertyValue (("top:"
 * 	top=DimensionPropertyValue)? // Specific properties
 * 	& ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
 * 	height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
 * 	clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
 * 	isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
 * 	textColor=ColorPropertyValue)?) ("->" actions+=Action)*;
 *
 **/

// "imageButton" {ImageButton} ("<" id=ID ">")? src=DrawableImageResourcePropertyValue (("top:"
// top=DimensionPropertyValue)? // Specific properties
// & ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
// height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
// clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
// isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
// textColor=ColorPropertyValue)?) ("->" actions+=Action)*
protected class ImageButton_Group extends GroupToken {
	
	public ImageButton_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ImageButton_UnorderedGroup_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getImageButtonAccess().getImageButtonAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "imageButton"
protected class ImageButton_ImageButtonKeyword_0 extends KeywordToken  {
	
	public ImageButton_ImageButtonKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getImageButtonKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {ImageButton}
protected class ImageButton_ImageButtonAction_1 extends ActionToken  {

	public ImageButton_ImageButtonAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getImageButtonAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_ImageButtonKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ("<" id=ID ">")?
protected class ImageButton_Group_2 extends GroupToken {
	
	public ImageButton_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_GreaterThanSignKeyword_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "<"
protected class ImageButton_LessThanSignKeyword_2_0 extends KeywordToken  {
	
	public ImageButton_LessThanSignKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getLessThanSignKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_ImageButtonAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// id=ID
protected class ImageButton_IdAssignment_2_1 extends AssignmentToken  {
	
	public ImageButton_IdAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getIdAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_LessThanSignKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getImageButtonAccess().getIdIDTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getImageButtonAccess().getIdIDTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}

// ">"
protected class ImageButton_GreaterThanSignKeyword_2_2 extends KeywordToken  {
	
	public ImageButton_GreaterThanSignKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGreaterThanSignKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_IdAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// src=DrawableImageResourcePropertyValue
protected class ImageButton_SrcAssignment_3 extends AssignmentToken  {
	
	public ImageButton_SrcAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getSrcAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableImageResourcePropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("src",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("src");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDrawableImageResourcePropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageButtonAccess().getSrcDrawableImageResourcePropertyValueParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ImageButton_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ImageButton_ImageButtonAction_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("top:" top=DimensionPropertyValue)? // Specific properties
// & ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
// height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
// clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
// isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
// textColor=ColorPropertyValue)?
protected class ImageButton_UnorderedGroup_4 extends UnorderedGroupToken {
	
	public ImageButton_UnorderedGroup_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getUnorderedGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_Group_4_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ImageButton_Group_4_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ImageButton_Group_4_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ImageButton_Group_4_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ImageButton_Group_4_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ImageButton_Group_4_4(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ImageButton_Group_4_3(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ImageButton_Group_4_2(lastRuleCallOrigin, this, 7, inst);
			case 8: return new ImageButton_Group_4_1(lastRuleCallOrigin, this, 8, inst);
			case 9: return new ImageButton_Group_4_0(lastRuleCallOrigin, this, 9, inst);
			case 10: return new ImageButton_SrcAssignment_3(lastRuleCallOrigin, this, 10, inst);
			default: return null;
		}	
	}

}

// ("top:" top=DimensionPropertyValue)?
protected class ImageButton_Group_4_0 extends GroupToken {
	
	public ImageButton_Group_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGroup_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_TopAssignment_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "top:"
protected class ImageButton_TopKeyword_4_0_0 extends KeywordToken  {
	
	public ImageButton_TopKeyword_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getTopKeyword_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_SrcAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// top=DimensionPropertyValue
protected class ImageButton_TopAssignment_4_0_1 extends AssignmentToken  {
	
	public ImageButton_TopAssignment_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getTopAssignment_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("top",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("top");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageButtonAccess().getTopDimensionPropertyValueParserRuleCall_4_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ImageButton_TopKeyword_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("left:" left=DimensionPropertyValue)?
protected class ImageButton_Group_4_1 extends GroupToken {
	
	public ImageButton_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_LeftAssignment_4_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "left:"
protected class ImageButton_LeftKeyword_4_1_0 extends KeywordToken  {
	
	public ImageButton_LeftKeyword_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getLeftKeyword_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ImageButton_SrcAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// left=DimensionPropertyValue
protected class ImageButton_LeftAssignment_4_1_1 extends AssignmentToken  {
	
	public ImageButton_LeftAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getLeftAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("left",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("left");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageButtonAccess().getLeftDimensionPropertyValueParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ImageButton_LeftKeyword_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("width:" width=DimensionPropertyValue)?
protected class ImageButton_Group_4_2 extends GroupToken {
	
	public ImageButton_Group_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGroup_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_WidthAssignment_4_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "width:"
protected class ImageButton_WidthKeyword_4_2_0 extends KeywordToken  {
	
	public ImageButton_WidthKeyword_4_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getWidthKeyword_4_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_Group_4_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ImageButton_Group_4_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ImageButton_SrcAssignment_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// width=DimensionPropertyValue
protected class ImageButton_WidthAssignment_4_2_1 extends AssignmentToken  {
	
	public ImageButton_WidthAssignment_4_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getWidthAssignment_4_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("width",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("width");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageButtonAccess().getWidthDimensionPropertyValueParserRuleCall_4_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ImageButton_WidthKeyword_4_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("height:" height=DimensionPropertyValue)?
protected class ImageButton_Group_4_3 extends GroupToken {
	
	public ImageButton_Group_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGroup_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_HeightAssignment_4_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "height:"
protected class ImageButton_HeightKeyword_4_3_0 extends KeywordToken  {
	
	public ImageButton_HeightKeyword_4_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getHeightKeyword_4_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_Group_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ImageButton_Group_4_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ImageButton_Group_4_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ImageButton_SrcAssignment_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// height=DimensionPropertyValue
protected class ImageButton_HeightAssignment_4_3_1 extends AssignmentToken  {
	
	public ImageButton_HeightAssignment_4_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getHeightAssignment_4_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("height",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("height");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageButtonAccess().getHeightDimensionPropertyValueParserRuleCall_4_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ImageButton_HeightKeyword_4_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("background:" background=DrawableResourcePropertyValue)?
protected class ImageButton_Group_4_4 extends GroupToken {
	
	public ImageButton_Group_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGroup_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_BackgroundAssignment_4_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "background:"
protected class ImageButton_BackgroundKeyword_4_4_0 extends KeywordToken  {
	
	public ImageButton_BackgroundKeyword_4_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getBackgroundKeyword_4_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ImageButton_Group_4_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ImageButton_Group_4_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ImageButton_Group_4_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ImageButton_SrcAssignment_3(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// background=DrawableResourcePropertyValue
protected class ImageButton_BackgroundAssignment_4_4_1 extends AssignmentToken  {
	
	public ImageButton_BackgroundAssignment_4_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getBackgroundAssignment_4_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResourcePropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("background",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("background");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDrawableResourcePropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageButtonAccess().getBackgroundDrawableResourcePropertyValueParserRuleCall_4_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ImageButton_BackgroundKeyword_4_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("clickable?" clickable=BooleanPropertyValue)?
protected class ImageButton_Group_4_5 extends GroupToken {
	
	public ImageButton_Group_4_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGroup_4_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_ClickableAssignment_4_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "clickable?"
protected class ImageButton_ClickableKeyword_4_5_0 extends KeywordToken  {
	
	public ImageButton_ClickableKeyword_4_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getClickableKeyword_4_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_Group_4_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ImageButton_Group_4_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ImageButton_Group_4_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ImageButton_Group_4_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ImageButton_Group_4_0(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ImageButton_SrcAssignment_3(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// clickable=BooleanPropertyValue
protected class ImageButton_ClickableAssignment_4_5_1 extends AssignmentToken  {
	
	public ImageButton_ClickableAssignment_4_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getClickableAssignment_4_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("clickable",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("clickable");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageButtonAccess().getClickableBooleanPropertyValueParserRuleCall_4_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ImageButton_ClickableKeyword_4_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)?
protected class ImageButton_Group_4_6 extends GroupToken {
	
	public ImageButton_Group_4_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGroup_4_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_FadeScrollBarsAssignment_4_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "fadeScrollBars?"
protected class ImageButton_FadeScrollBarsKeyword_4_6_0 extends KeywordToken  {
	
	public ImageButton_FadeScrollBarsKeyword_4_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getFadeScrollBarsKeyword_4_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_Group_4_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ImageButton_Group_4_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ImageButton_Group_4_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ImageButton_Group_4_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ImageButton_Group_4_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ImageButton_Group_4_0(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ImageButton_SrcAssignment_3(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// fadeScrollBars=BooleanPropertyValue
protected class ImageButton_FadeScrollBarsAssignment_4_6_1 extends AssignmentToken  {
	
	public ImageButton_FadeScrollBarsAssignment_4_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getFadeScrollBarsAssignment_4_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("fadeScrollBars",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("fadeScrollBars");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageButtonAccess().getFadeScrollBarsBooleanPropertyValueParserRuleCall_4_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ImageButton_FadeScrollBarsKeyword_4_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("isScrollContainer?" isScrollContainer=BooleanPropertyValue)?
protected class ImageButton_Group_4_7 extends GroupToken {
	
	public ImageButton_Group_4_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGroup_4_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_IsScrollContainerAssignment_4_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "isScrollContainer?"
protected class ImageButton_IsScrollContainerKeyword_4_7_0 extends KeywordToken  {
	
	public ImageButton_IsScrollContainerKeyword_4_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getIsScrollContainerKeyword_4_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_Group_4_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ImageButton_Group_4_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ImageButton_Group_4_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ImageButton_Group_4_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ImageButton_Group_4_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ImageButton_Group_4_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ImageButton_Group_4_0(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ImageButton_SrcAssignment_3(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// isScrollContainer=BooleanPropertyValue
protected class ImageButton_IsScrollContainerAssignment_4_7_1 extends AssignmentToken  {
	
	public ImageButton_IsScrollContainerAssignment_4_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getIsScrollContainerAssignment_4_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isScrollContainer",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isScrollContainer");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageButtonAccess().getIsScrollContainerBooleanPropertyValueParserRuleCall_4_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ImageButton_IsScrollContainerKeyword_4_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("hint:" hint=StringPropertyValue)?
protected class ImageButton_Group_4_8 extends GroupToken {
	
	public ImageButton_Group_4_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGroup_4_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_HintAssignment_4_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "hint:"
protected class ImageButton_HintKeyword_4_8_0 extends KeywordToken  {
	
	public ImageButton_HintKeyword_4_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getHintKeyword_4_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_Group_4_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ImageButton_Group_4_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ImageButton_Group_4_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ImageButton_Group_4_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ImageButton_Group_4_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ImageButton_Group_4_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ImageButton_Group_4_1(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ImageButton_Group_4_0(lastRuleCallOrigin, this, 7, inst);
			case 8: return new ImageButton_SrcAssignment_3(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// hint=StringPropertyValue
protected class ImageButton_HintAssignment_4_8_1 extends AssignmentToken  {
	
	public ImageButton_HintAssignment_4_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getHintAssignment_4_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hint",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hint");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStringPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageButtonAccess().getHintStringPropertyValueParserRuleCall_4_8_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ImageButton_HintKeyword_4_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("textColor:" textColor=ColorPropertyValue)?
protected class ImageButton_Group_4_9 extends GroupToken {
	
	public ImageButton_Group_4_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGroup_4_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_TextColorAssignment_4_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "textColor:"
protected class ImageButton_TextColorKeyword_4_9_0 extends KeywordToken  {
	
	public ImageButton_TextColorKeyword_4_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getTextColorKeyword_4_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_Group_4_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ImageButton_Group_4_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ImageButton_Group_4_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ImageButton_Group_4_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ImageButton_Group_4_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ImageButton_Group_4_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ImageButton_Group_4_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ImageButton_Group_4_1(lastRuleCallOrigin, this, 7, inst);
			case 8: return new ImageButton_Group_4_0(lastRuleCallOrigin, this, 8, inst);
			case 9: return new ImageButton_SrcAssignment_3(lastRuleCallOrigin, this, 9, inst);
			default: return null;
		}	
	}

}

// textColor=ColorPropertyValue
protected class ImageButton_TextColorAssignment_4_9_1 extends AssignmentToken  {
	
	public ImageButton_TextColorAssignment_4_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getTextColorAssignment_4_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("textColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("textColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageButtonAccess().getTextColorColorPropertyValueParserRuleCall_4_9_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ImageButton_TextColorKeyword_4_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// ("->" actions+=Action)*
protected class ImageButton_Group_5 extends GroupToken {
	
	public ImageButton_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_ActionsAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "->"
protected class ImageButton_HyphenMinusGreaterThanSignKeyword_5_0 extends KeywordToken  {
	
	public ImageButton_HyphenMinusGreaterThanSignKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getHyphenMinusGreaterThanSignKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ImageButton_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ImageButton_UnorderedGroup_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// actions+=Action
protected class ImageButton_ActionsAssignment_5_1 extends AssignmentToken  {
	
	public ImageButton_ActionsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageButtonAccess().getActionsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Action_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getActionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageButtonAccess().getActionsActionParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ImageButton_HyphenMinusGreaterThanSignKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule ImageButton ****************/


/************ begin Rule Link ****************
 *
 * //Button to an Activity
 * Link:
 * 	"link" {Link} ("<" id=ID ">")? text=StringPropertyValue (("top:" top=DimensionPropertyValue)? // Specific properties
 * 	& ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
 * 	height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
 * 	clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
 * 	isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
 * 	textColor=ColorPropertyValue)?) "to" target=[Activity] ("->" actions+=Action)*;
 *
 **/

// "link" {Link} ("<" id=ID ">")? text=StringPropertyValue (("top:" top=DimensionPropertyValue)? // Specific properties
// & ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
// height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
// clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
// isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
// textColor=ColorPropertyValue)?) "to" target=[Activity] ("->" actions+=Action)*
protected class Link_Group extends GroupToken {
	
	public Link_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Link_TargetAssignment_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLinkAccess().getLinkAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "link"
protected class Link_LinkKeyword_0 extends KeywordToken  {
	
	public Link_LinkKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getLinkKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {Link}
protected class Link_LinkAction_1 extends ActionToken  {

	public Link_LinkAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getLinkAccess().getLinkAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_LinkKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ("<" id=ID ">")?
protected class Link_Group_2 extends GroupToken {
	
	public Link_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_GreaterThanSignKeyword_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "<"
protected class Link_LessThanSignKeyword_2_0 extends KeywordToken  {
	
	public Link_LessThanSignKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getLessThanSignKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_LinkAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// id=ID
protected class Link_IdAssignment_2_1 extends AssignmentToken  {
	
	public Link_IdAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getIdAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_LessThanSignKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLinkAccess().getIdIDTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLinkAccess().getIdIDTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}

// ">"
protected class Link_GreaterThanSignKeyword_2_2 extends KeywordToken  {
	
	public Link_GreaterThanSignKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getGreaterThanSignKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_IdAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// text=StringPropertyValue
protected class Link_TextAssignment_3 extends AssignmentToken  {
	
	public Link_TextAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getTextAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("text",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("text");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStringPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLinkAccess().getTextStringPropertyValueParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Link_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Link_LinkAction_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("top:" top=DimensionPropertyValue)? // Specific properties
// & ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
// height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
// clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
// isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
// textColor=ColorPropertyValue)?
protected class Link_UnorderedGroup_4 extends UnorderedGroupToken {
	
	public Link_UnorderedGroup_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getLinkAccess().getUnorderedGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_Group_4_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Link_Group_4_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Link_Group_4_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Link_Group_4_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Link_Group_4_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Link_Group_4_4(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Link_Group_4_3(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Link_Group_4_2(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Link_Group_4_1(lastRuleCallOrigin, this, 8, inst);
			case 9: return new Link_Group_4_0(lastRuleCallOrigin, this, 9, inst);
			case 10: return new Link_TextAssignment_3(lastRuleCallOrigin, this, 10, inst);
			default: return null;
		}	
	}

}

// ("top:" top=DimensionPropertyValue)?
protected class Link_Group_4_0 extends GroupToken {
	
	public Link_Group_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkAccess().getGroup_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_TopAssignment_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "top:"
protected class Link_TopKeyword_4_0_0 extends KeywordToken  {
	
	public Link_TopKeyword_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getTopKeyword_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_TextAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// top=DimensionPropertyValue
protected class Link_TopAssignment_4_0_1 extends AssignmentToken  {
	
	public Link_TopAssignment_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getTopAssignment_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("top",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("top");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLinkAccess().getTopDimensionPropertyValueParserRuleCall_4_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Link_TopKeyword_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("left:" left=DimensionPropertyValue)?
protected class Link_Group_4_1 extends GroupToken {
	
	public Link_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_LeftAssignment_4_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "left:"
protected class Link_LeftKeyword_4_1_0 extends KeywordToken  {
	
	public Link_LeftKeyword_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getLeftKeyword_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Link_TextAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// left=DimensionPropertyValue
protected class Link_LeftAssignment_4_1_1 extends AssignmentToken  {
	
	public Link_LeftAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getLeftAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("left",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("left");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLinkAccess().getLeftDimensionPropertyValueParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Link_LeftKeyword_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("width:" width=DimensionPropertyValue)?
protected class Link_Group_4_2 extends GroupToken {
	
	public Link_Group_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkAccess().getGroup_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_WidthAssignment_4_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "width:"
protected class Link_WidthKeyword_4_2_0 extends KeywordToken  {
	
	public Link_WidthKeyword_4_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getWidthKeyword_4_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_Group_4_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Link_Group_4_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Link_TextAssignment_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// width=DimensionPropertyValue
protected class Link_WidthAssignment_4_2_1 extends AssignmentToken  {
	
	public Link_WidthAssignment_4_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getWidthAssignment_4_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("width",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("width");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLinkAccess().getWidthDimensionPropertyValueParserRuleCall_4_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Link_WidthKeyword_4_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("height:" height=DimensionPropertyValue)?
protected class Link_Group_4_3 extends GroupToken {
	
	public Link_Group_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkAccess().getGroup_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_HeightAssignment_4_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "height:"
protected class Link_HeightKeyword_4_3_0 extends KeywordToken  {
	
	public Link_HeightKeyword_4_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getHeightKeyword_4_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_Group_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Link_Group_4_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Link_Group_4_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Link_TextAssignment_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// height=DimensionPropertyValue
protected class Link_HeightAssignment_4_3_1 extends AssignmentToken  {
	
	public Link_HeightAssignment_4_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getHeightAssignment_4_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("height",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("height");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLinkAccess().getHeightDimensionPropertyValueParserRuleCall_4_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Link_HeightKeyword_4_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("background:" background=DrawableResourcePropertyValue)?
protected class Link_Group_4_4 extends GroupToken {
	
	public Link_Group_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkAccess().getGroup_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_BackgroundAssignment_4_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "background:"
protected class Link_BackgroundKeyword_4_4_0 extends KeywordToken  {
	
	public Link_BackgroundKeyword_4_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getBackgroundKeyword_4_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Link_Group_4_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Link_Group_4_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Link_Group_4_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Link_TextAssignment_3(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// background=DrawableResourcePropertyValue
protected class Link_BackgroundAssignment_4_4_1 extends AssignmentToken  {
	
	public Link_BackgroundAssignment_4_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getBackgroundAssignment_4_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResourcePropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("background",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("background");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDrawableResourcePropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLinkAccess().getBackgroundDrawableResourcePropertyValueParserRuleCall_4_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Link_BackgroundKeyword_4_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("clickable?" clickable=BooleanPropertyValue)?
protected class Link_Group_4_5 extends GroupToken {
	
	public Link_Group_4_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkAccess().getGroup_4_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_ClickableAssignment_4_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "clickable?"
protected class Link_ClickableKeyword_4_5_0 extends KeywordToken  {
	
	public Link_ClickableKeyword_4_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getClickableKeyword_4_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_Group_4_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Link_Group_4_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Link_Group_4_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Link_Group_4_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Link_Group_4_0(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Link_TextAssignment_3(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// clickable=BooleanPropertyValue
protected class Link_ClickableAssignment_4_5_1 extends AssignmentToken  {
	
	public Link_ClickableAssignment_4_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getClickableAssignment_4_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("clickable",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("clickable");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLinkAccess().getClickableBooleanPropertyValueParserRuleCall_4_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Link_ClickableKeyword_4_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)?
protected class Link_Group_4_6 extends GroupToken {
	
	public Link_Group_4_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkAccess().getGroup_4_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_FadeScrollBarsAssignment_4_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "fadeScrollBars?"
protected class Link_FadeScrollBarsKeyword_4_6_0 extends KeywordToken  {
	
	public Link_FadeScrollBarsKeyword_4_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getFadeScrollBarsKeyword_4_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_Group_4_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Link_Group_4_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Link_Group_4_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Link_Group_4_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Link_Group_4_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Link_Group_4_0(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Link_TextAssignment_3(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// fadeScrollBars=BooleanPropertyValue
protected class Link_FadeScrollBarsAssignment_4_6_1 extends AssignmentToken  {
	
	public Link_FadeScrollBarsAssignment_4_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getFadeScrollBarsAssignment_4_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("fadeScrollBars",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("fadeScrollBars");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLinkAccess().getFadeScrollBarsBooleanPropertyValueParserRuleCall_4_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Link_FadeScrollBarsKeyword_4_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("isScrollContainer?" isScrollContainer=BooleanPropertyValue)?
protected class Link_Group_4_7 extends GroupToken {
	
	public Link_Group_4_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkAccess().getGroup_4_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_IsScrollContainerAssignment_4_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "isScrollContainer?"
protected class Link_IsScrollContainerKeyword_4_7_0 extends KeywordToken  {
	
	public Link_IsScrollContainerKeyword_4_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getIsScrollContainerKeyword_4_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_Group_4_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Link_Group_4_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Link_Group_4_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Link_Group_4_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Link_Group_4_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Link_Group_4_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Link_Group_4_0(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Link_TextAssignment_3(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// isScrollContainer=BooleanPropertyValue
protected class Link_IsScrollContainerAssignment_4_7_1 extends AssignmentToken  {
	
	public Link_IsScrollContainerAssignment_4_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getIsScrollContainerAssignment_4_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isScrollContainer",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isScrollContainer");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLinkAccess().getIsScrollContainerBooleanPropertyValueParserRuleCall_4_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Link_IsScrollContainerKeyword_4_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("hint:" hint=StringPropertyValue)?
protected class Link_Group_4_8 extends GroupToken {
	
	public Link_Group_4_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkAccess().getGroup_4_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_HintAssignment_4_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "hint:"
protected class Link_HintKeyword_4_8_0 extends KeywordToken  {
	
	public Link_HintKeyword_4_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getHintKeyword_4_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_Group_4_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Link_Group_4_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Link_Group_4_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Link_Group_4_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Link_Group_4_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Link_Group_4_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Link_Group_4_1(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Link_Group_4_0(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Link_TextAssignment_3(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// hint=StringPropertyValue
protected class Link_HintAssignment_4_8_1 extends AssignmentToken  {
	
	public Link_HintAssignment_4_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getHintAssignment_4_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hint",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hint");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStringPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLinkAccess().getHintStringPropertyValueParserRuleCall_4_8_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Link_HintKeyword_4_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("textColor:" textColor=ColorPropertyValue)?
protected class Link_Group_4_9 extends GroupToken {
	
	public Link_Group_4_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkAccess().getGroup_4_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_TextColorAssignment_4_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "textColor:"
protected class Link_TextColorKeyword_4_9_0 extends KeywordToken  {
	
	public Link_TextColorKeyword_4_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getTextColorKeyword_4_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_Group_4_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Link_Group_4_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Link_Group_4_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Link_Group_4_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Link_Group_4_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Link_Group_4_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Link_Group_4_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Link_Group_4_1(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Link_Group_4_0(lastRuleCallOrigin, this, 8, inst);
			case 9: return new Link_TextAssignment_3(lastRuleCallOrigin, this, 9, inst);
			default: return null;
		}	
	}

}

// textColor=ColorPropertyValue
protected class Link_TextColorAssignment_4_9_1 extends AssignmentToken  {
	
	public Link_TextColorAssignment_4_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getTextColorAssignment_4_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("textColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("textColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLinkAccess().getTextColorColorPropertyValueParserRuleCall_4_9_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Link_TextColorKeyword_4_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// "to"
protected class Link_ToKeyword_5 extends KeywordToken  {
	
	public Link_ToKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getToKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_UnorderedGroup_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// target=[Activity]
protected class Link_TargetAssignment_6 extends AssignmentToken  {
	
	public Link_TargetAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getTargetAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_ToKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("target",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("target");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getLinkAccess().getTargetActivityCrossReference_6_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getLinkAccess().getTargetActivityCrossReference_6_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("->" actions+=Action)*
protected class Link_Group_7 extends GroupToken {
	
	public Link_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_ActionsAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "->"
protected class Link_HyphenMinusGreaterThanSignKeyword_7_0 extends KeywordToken  {
	
	public Link_HyphenMinusGreaterThanSignKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkAccess().getHyphenMinusGreaterThanSignKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Link_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Link_TargetAssignment_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// actions+=Action
protected class Link_ActionsAssignment_7_1 extends AssignmentToken  {
	
	public Link_ActionsAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkAccess().getActionsAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Action_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getActionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLinkAccess().getActionsActionParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Link_HyphenMinusGreaterThanSignKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule Link ****************/


/************ begin Rule Spinner ****************
 *
 * //--Parei aqui
 * Spinner:
 * 	"spinner" {Spinner} ("<" id=ID ">")? (("top:" top=DimensionPropertyValue)? //Spinner properties
 * 	& ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
 * 	height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
 * 	clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
 * 	isScrollContainer=BooleanPropertyValue)? & ("prompt:" prompt=StringPropertyValue)?);
 *
 **/

// "spinner" {Spinner} ("<" id=ID ">")? (("top:" top=DimensionPropertyValue)? //Spinner properties
// & ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
// height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
// clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
// isScrollContainer=BooleanPropertyValue)? & ("prompt:" prompt=StringPropertyValue)?)
protected class Spinner_Group extends GroupToken {
	
	public Spinner_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_UnorderedGroup_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSpinnerAccess().getSpinnerAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "spinner"
protected class Spinner_SpinnerKeyword_0 extends KeywordToken  {
	
	public Spinner_SpinnerKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getSpinnerKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {Spinner}
protected class Spinner_SpinnerAction_1 extends ActionToken  {

	public Spinner_SpinnerAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getSpinnerAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_SpinnerKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ("<" id=ID ">")?
protected class Spinner_Group_2 extends GroupToken {
	
	public Spinner_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_GreaterThanSignKeyword_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "<"
protected class Spinner_LessThanSignKeyword_2_0 extends KeywordToken  {
	
	public Spinner_LessThanSignKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getLessThanSignKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_SpinnerAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// id=ID
protected class Spinner_IdAssignment_2_1 extends AssignmentToken  {
	
	public Spinner_IdAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getIdAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_LessThanSignKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSpinnerAccess().getIdIDTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSpinnerAccess().getIdIDTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}

// ">"
protected class Spinner_GreaterThanSignKeyword_2_2 extends KeywordToken  {
	
	public Spinner_GreaterThanSignKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getGreaterThanSignKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_IdAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ("top:" top=DimensionPropertyValue)? //Spinner properties
// & ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
// height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
// clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
// isScrollContainer=BooleanPropertyValue)? & ("prompt:" prompt=StringPropertyValue)?
protected class Spinner_UnorderedGroup_3 extends UnorderedGroupToken {
	
	public Spinner_UnorderedGroup_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getUnorderedGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_Group_3_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Spinner_Group_3_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Spinner_Group_3_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Spinner_Group_3_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Spinner_Group_3_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Spinner_Group_3_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Spinner_Group_3_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Spinner_Group_3_1(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Spinner_Group_3_0(lastRuleCallOrigin, this, 8, inst);
			case 9: return new Spinner_Group_2(lastRuleCallOrigin, this, 9, inst);
			case 10: return new Spinner_SpinnerAction_1(lastRuleCallOrigin, this, 10, inst);
			default: return null;
		}	
	}

}

// ("top:" top=DimensionPropertyValue)?
protected class Spinner_Group_3_0 extends GroupToken {
	
	public Spinner_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_TopAssignment_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "top:"
protected class Spinner_TopKeyword_3_0_0 extends KeywordToken  {
	
	public Spinner_TopKeyword_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getTopKeyword_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Spinner_SpinnerAction_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// top=DimensionPropertyValue
protected class Spinner_TopAssignment_3_0_1 extends AssignmentToken  {
	
	public Spinner_TopAssignment_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getTopAssignment_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("top",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("top");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSpinnerAccess().getTopDimensionPropertyValueParserRuleCall_3_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Spinner_TopKeyword_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("left:" left=DimensionPropertyValue)?
protected class Spinner_Group_3_1 extends GroupToken {
	
	public Spinner_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_LeftAssignment_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "left:"
protected class Spinner_LeftKeyword_3_1_0 extends KeywordToken  {
	
	public Spinner_LeftKeyword_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getLeftKeyword_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Spinner_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Spinner_SpinnerAction_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// left=DimensionPropertyValue
protected class Spinner_LeftAssignment_3_1_1 extends AssignmentToken  {
	
	public Spinner_LeftAssignment_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getLeftAssignment_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("left",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("left");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSpinnerAccess().getLeftDimensionPropertyValueParserRuleCall_3_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Spinner_LeftKeyword_3_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("width:" width=DimensionPropertyValue)?
protected class Spinner_Group_3_2 extends GroupToken {
	
	public Spinner_Group_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getGroup_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_WidthAssignment_3_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "width:"
protected class Spinner_WidthKeyword_3_2_0 extends KeywordToken  {
	
	public Spinner_WidthKeyword_3_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getWidthKeyword_3_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Spinner_Group_3_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Spinner_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Spinner_SpinnerAction_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// width=DimensionPropertyValue
protected class Spinner_WidthAssignment_3_2_1 extends AssignmentToken  {
	
	public Spinner_WidthAssignment_3_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getWidthAssignment_3_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("width",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("width");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSpinnerAccess().getWidthDimensionPropertyValueParserRuleCall_3_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Spinner_WidthKeyword_3_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("height:" height=DimensionPropertyValue)?
protected class Spinner_Group_3_3 extends GroupToken {
	
	public Spinner_Group_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getGroup_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_HeightAssignment_3_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "height:"
protected class Spinner_HeightKeyword_3_3_0 extends KeywordToken  {
	
	public Spinner_HeightKeyword_3_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getHeightKeyword_3_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_Group_3_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Spinner_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Spinner_Group_3_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Spinner_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Spinner_SpinnerAction_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// height=DimensionPropertyValue
protected class Spinner_HeightAssignment_3_3_1 extends AssignmentToken  {
	
	public Spinner_HeightAssignment_3_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getHeightAssignment_3_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("height",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("height");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSpinnerAccess().getHeightDimensionPropertyValueParserRuleCall_3_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Spinner_HeightKeyword_3_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("background:" background=DrawableResourcePropertyValue)?
protected class Spinner_Group_3_4 extends GroupToken {
	
	public Spinner_Group_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getGroup_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_BackgroundAssignment_3_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "background:"
protected class Spinner_BackgroundKeyword_3_4_0 extends KeywordToken  {
	
	public Spinner_BackgroundKeyword_3_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getBackgroundKeyword_3_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_Group_3_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Spinner_Group_3_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Spinner_Group_3_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Spinner_Group_3_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Spinner_Group_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Spinner_SpinnerAction_1(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// background=DrawableResourcePropertyValue
protected class Spinner_BackgroundAssignment_3_4_1 extends AssignmentToken  {
	
	public Spinner_BackgroundAssignment_3_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getBackgroundAssignment_3_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResourcePropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("background",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("background");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDrawableResourcePropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSpinnerAccess().getBackgroundDrawableResourcePropertyValueParserRuleCall_3_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Spinner_BackgroundKeyword_3_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("clickable?" clickable=BooleanPropertyValue)?
protected class Spinner_Group_3_5 extends GroupToken {
	
	public Spinner_Group_3_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getGroup_3_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_ClickableAssignment_3_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "clickable?"
protected class Spinner_ClickableKeyword_3_5_0 extends KeywordToken  {
	
	public Spinner_ClickableKeyword_3_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getClickableKeyword_3_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_Group_3_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Spinner_Group_3_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Spinner_Group_3_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Spinner_Group_3_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Spinner_Group_3_0(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Spinner_Group_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Spinner_SpinnerAction_1(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// clickable=BooleanPropertyValue
protected class Spinner_ClickableAssignment_3_5_1 extends AssignmentToken  {
	
	public Spinner_ClickableAssignment_3_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getClickableAssignment_3_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("clickable",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("clickable");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSpinnerAccess().getClickableBooleanPropertyValueParserRuleCall_3_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Spinner_ClickableKeyword_3_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)?
protected class Spinner_Group_3_6 extends GroupToken {
	
	public Spinner_Group_3_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getGroup_3_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_FadeScrollBarsAssignment_3_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "fadeScrollBars?"
protected class Spinner_FadeScrollBarsKeyword_3_6_0 extends KeywordToken  {
	
	public Spinner_FadeScrollBarsKeyword_3_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getFadeScrollBarsKeyword_3_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_Group_3_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Spinner_Group_3_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Spinner_Group_3_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Spinner_Group_3_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Spinner_Group_3_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Spinner_Group_3_0(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Spinner_Group_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Spinner_SpinnerAction_1(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// fadeScrollBars=BooleanPropertyValue
protected class Spinner_FadeScrollBarsAssignment_3_6_1 extends AssignmentToken  {
	
	public Spinner_FadeScrollBarsAssignment_3_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getFadeScrollBarsAssignment_3_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("fadeScrollBars",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("fadeScrollBars");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSpinnerAccess().getFadeScrollBarsBooleanPropertyValueParserRuleCall_3_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Spinner_FadeScrollBarsKeyword_3_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("isScrollContainer?" isScrollContainer=BooleanPropertyValue)?
protected class Spinner_Group_3_7 extends GroupToken {
	
	public Spinner_Group_3_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getGroup_3_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_IsScrollContainerAssignment_3_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "isScrollContainer?"
protected class Spinner_IsScrollContainerKeyword_3_7_0 extends KeywordToken  {
	
	public Spinner_IsScrollContainerKeyword_3_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getIsScrollContainerKeyword_3_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_Group_3_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Spinner_Group_3_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Spinner_Group_3_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Spinner_Group_3_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Spinner_Group_3_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Spinner_Group_3_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Spinner_Group_3_0(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Spinner_Group_2(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Spinner_SpinnerAction_1(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// isScrollContainer=BooleanPropertyValue
protected class Spinner_IsScrollContainerAssignment_3_7_1 extends AssignmentToken  {
	
	public Spinner_IsScrollContainerAssignment_3_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getIsScrollContainerAssignment_3_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isScrollContainer",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isScrollContainer");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSpinnerAccess().getIsScrollContainerBooleanPropertyValueParserRuleCall_3_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Spinner_IsScrollContainerKeyword_3_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("prompt:" prompt=StringPropertyValue)?
protected class Spinner_Group_3_8 extends GroupToken {
	
	public Spinner_Group_3_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getGroup_3_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_PromptAssignment_3_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "prompt:"
protected class Spinner_PromptKeyword_3_8_0 extends KeywordToken  {
	
	public Spinner_PromptKeyword_3_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getPromptKeyword_3_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Spinner_Group_3_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Spinner_Group_3_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Spinner_Group_3_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Spinner_Group_3_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Spinner_Group_3_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Spinner_Group_3_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Spinner_Group_3_1(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Spinner_Group_3_0(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Spinner_Group_2(lastRuleCallOrigin, this, 8, inst);
			case 9: return new Spinner_SpinnerAction_1(lastRuleCallOrigin, this, 9, inst);
			default: return null;
		}	
	}

}

// prompt=StringPropertyValue
protected class Spinner_PromptAssignment_3_8_1 extends AssignmentToken  {
	
	public Spinner_PromptAssignment_3_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpinnerAccess().getPromptAssignment_3_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("prompt",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("prompt");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStringPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSpinnerAccess().getPromptStringPropertyValueParserRuleCall_3_8_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Spinner_PromptKeyword_3_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




/************ end Rule Spinner ****************/


/************ begin Rule EditText ****************
 *
 * EditText:
 * 	"editText" {EditText} ("<" id=ID ">")? text=StringPropertyValue (("top:" top=DimensionPropertyValue)? //EditText properties
 * 	& ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
 * 	height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
 * 	clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
 * 	isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
 * 	textColor=ColorPropertyValue)? & ("editable?" editable=BooleanPropertyValue)? & ("numeric?"
 * 	numeric=BooleanPropertyValue)? & ("password?" password=BooleanPropertyValue)? & ("phoneNumber?"
 * 	phoneNumber=BooleanPropertyValue)?);
 *
 **/

// "editText" {EditText} ("<" id=ID ">")? text=StringPropertyValue (("top:" top=DimensionPropertyValue)? //EditText properties
// & ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
// height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
// clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
// isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
// textColor=ColorPropertyValue)? & ("editable?" editable=BooleanPropertyValue)? & ("numeric?"
// numeric=BooleanPropertyValue)? & ("password?" password=BooleanPropertyValue)? & ("phoneNumber?"
// phoneNumber=BooleanPropertyValue)?)
protected class EditText_Group extends GroupToken {
	
	public EditText_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_UnorderedGroup_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEditTextAccess().getEditTextAction_1().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "editText"
protected class EditText_EditTextKeyword_0 extends KeywordToken  {
	
	public EditText_EditTextKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getEditTextKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// {EditText}
protected class EditText_EditTextAction_1 extends ActionToken  {

	public EditText_EditTextAction_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getEditTextAccess().getEditTextAction_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_EditTextKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ("<" id=ID ">")?
protected class EditText_Group_2 extends GroupToken {
	
	public EditText_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_GreaterThanSignKeyword_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "<"
protected class EditText_LessThanSignKeyword_2_0 extends KeywordToken  {
	
	public EditText_LessThanSignKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getLessThanSignKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_EditTextAction_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// id=ID
protected class EditText_IdAssignment_2_1 extends AssignmentToken  {
	
	public EditText_IdAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getIdAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_LessThanSignKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("id",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("id");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEditTextAccess().getIdIDTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEditTextAccess().getIdIDTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}

// ">"
protected class EditText_GreaterThanSignKeyword_2_2 extends KeywordToken  {
	
	public EditText_GreaterThanSignKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGreaterThanSignKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_IdAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// text=StringPropertyValue
protected class EditText_TextAssignment_3 extends AssignmentToken  {
	
	public EditText_TextAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getTextAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("text",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("text");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStringPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getTextStringPropertyValueParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_Group_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new EditText_EditTextAction_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("top:" top=DimensionPropertyValue)? //EditText properties
// & ("left:" left=DimensionPropertyValue)? & ("width:" width=DimensionPropertyValue)? & ("height:"
// height=DimensionPropertyValue)? & ("background:" background=DrawableResourcePropertyValue)? & ("clickable?"
// clickable=BooleanPropertyValue)? & ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)? & ("isScrollContainer?"
// isScrollContainer=BooleanPropertyValue)? & ("hint:" hint=StringPropertyValue)? & ("textColor:"
// textColor=ColorPropertyValue)? & ("editable?" editable=BooleanPropertyValue)? & ("numeric?"
// numeric=BooleanPropertyValue)? & ("password?" password=BooleanPropertyValue)? & ("phoneNumber?"
// phoneNumber=BooleanPropertyValue)?
protected class EditText_UnorderedGroup_4 extends UnorderedGroupToken {
	
	public EditText_UnorderedGroup_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getEditTextAccess().getUnorderedGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_13(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_Group_4_12(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EditText_Group_4_11(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EditText_Group_4_10(lastRuleCallOrigin, this, 3, inst);
			case 4: return new EditText_Group_4_9(lastRuleCallOrigin, this, 4, inst);
			case 5: return new EditText_Group_4_8(lastRuleCallOrigin, this, 5, inst);
			case 6: return new EditText_Group_4_7(lastRuleCallOrigin, this, 6, inst);
			case 7: return new EditText_Group_4_6(lastRuleCallOrigin, this, 7, inst);
			case 8: return new EditText_Group_4_5(lastRuleCallOrigin, this, 8, inst);
			case 9: return new EditText_Group_4_4(lastRuleCallOrigin, this, 9, inst);
			case 10: return new EditText_Group_4_3(lastRuleCallOrigin, this, 10, inst);
			case 11: return new EditText_Group_4_2(lastRuleCallOrigin, this, 11, inst);
			case 12: return new EditText_Group_4_1(lastRuleCallOrigin, this, 12, inst);
			case 13: return new EditText_Group_4_0(lastRuleCallOrigin, this, 13, inst);
			case 14: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 14, inst);
			default: return null;
		}	
	}

}

// ("top:" top=DimensionPropertyValue)?
protected class EditText_Group_4_0 extends GroupToken {
	
	public EditText_Group_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_TopAssignment_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "top:"
protected class EditText_TopKeyword_4_0_0 extends KeywordToken  {
	
	public EditText_TopKeyword_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getTopKeyword_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// top=DimensionPropertyValue
protected class EditText_TopAssignment_4_0_1 extends AssignmentToken  {
	
	public EditText_TopAssignment_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getTopAssignment_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("top",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("top");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getTopDimensionPropertyValueParserRuleCall_4_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_TopKeyword_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("left:" left=DimensionPropertyValue)?
protected class EditText_Group_4_1 extends GroupToken {
	
	public EditText_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_LeftAssignment_4_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "left:"
protected class EditText_LeftKeyword_4_1_0 extends KeywordToken  {
	
	public EditText_LeftKeyword_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getLeftKeyword_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// left=DimensionPropertyValue
protected class EditText_LeftAssignment_4_1_1 extends AssignmentToken  {
	
	public EditText_LeftAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getLeftAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("left",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("left");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getLeftDimensionPropertyValueParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_LeftKeyword_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("width:" width=DimensionPropertyValue)?
protected class EditText_Group_4_2 extends GroupToken {
	
	public EditText_Group_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_WidthAssignment_4_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "width:"
protected class EditText_WidthKeyword_4_2_0 extends KeywordToken  {
	
	public EditText_WidthKeyword_4_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getWidthKeyword_4_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_Group_4_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// width=DimensionPropertyValue
protected class EditText_WidthAssignment_4_2_1 extends AssignmentToken  {
	
	public EditText_WidthAssignment_4_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getWidthAssignment_4_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("width",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("width");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getWidthDimensionPropertyValueParserRuleCall_4_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_WidthKeyword_4_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("height:" height=DimensionPropertyValue)?
protected class EditText_Group_4_3 extends GroupToken {
	
	public EditText_Group_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_HeightAssignment_4_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "height:"
protected class EditText_HeightKeyword_4_3_0 extends KeywordToken  {
	
	public EditText_HeightKeyword_4_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getHeightKeyword_4_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_Group_4_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EditText_Group_4_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// height=DimensionPropertyValue
protected class EditText_HeightAssignment_4_3_1 extends AssignmentToken  {
	
	public EditText_HeightAssignment_4_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getHeightAssignment_4_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("height",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("height");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getHeightDimensionPropertyValueParserRuleCall_4_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_HeightKeyword_4_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("background:" background=DrawableResourcePropertyValue)?
protected class EditText_Group_4_4 extends GroupToken {
	
	public EditText_Group_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_BackgroundAssignment_4_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "background:"
protected class EditText_BackgroundKeyword_4_4_0 extends KeywordToken  {
	
	public EditText_BackgroundKeyword_4_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getBackgroundKeyword_4_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_Group_4_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EditText_Group_4_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EditText_Group_4_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// background=DrawableResourcePropertyValue
protected class EditText_BackgroundAssignment_4_4_1 extends AssignmentToken  {
	
	public EditText_BackgroundAssignment_4_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getBackgroundAssignment_4_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResourcePropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("background",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("background");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDrawableResourcePropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getBackgroundDrawableResourcePropertyValueParserRuleCall_4_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_BackgroundKeyword_4_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("clickable?" clickable=BooleanPropertyValue)?
protected class EditText_Group_4_5 extends GroupToken {
	
	public EditText_Group_4_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_ClickableAssignment_4_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "clickable?"
protected class EditText_ClickableKeyword_4_5_0 extends KeywordToken  {
	
	public EditText_ClickableKeyword_4_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getClickableKeyword_4_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_Group_4_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EditText_Group_4_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EditText_Group_4_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new EditText_Group_4_0(lastRuleCallOrigin, this, 4, inst);
			case 5: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// clickable=BooleanPropertyValue
protected class EditText_ClickableAssignment_4_5_1 extends AssignmentToken  {
	
	public EditText_ClickableAssignment_4_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getClickableAssignment_4_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("clickable",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("clickable");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getClickableBooleanPropertyValueParserRuleCall_4_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_ClickableKeyword_4_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("fadeScrollBars?" fadeScrollBars=BooleanPropertyValue)?
protected class EditText_Group_4_6 extends GroupToken {
	
	public EditText_Group_4_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_FadeScrollBarsAssignment_4_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "fadeScrollBars?"
protected class EditText_FadeScrollBarsKeyword_4_6_0 extends KeywordToken  {
	
	public EditText_FadeScrollBarsKeyword_4_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getFadeScrollBarsKeyword_4_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_Group_4_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EditText_Group_4_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EditText_Group_4_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new EditText_Group_4_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new EditText_Group_4_0(lastRuleCallOrigin, this, 5, inst);
			case 6: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// fadeScrollBars=BooleanPropertyValue
protected class EditText_FadeScrollBarsAssignment_4_6_1 extends AssignmentToken  {
	
	public EditText_FadeScrollBarsAssignment_4_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getFadeScrollBarsAssignment_4_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("fadeScrollBars",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("fadeScrollBars");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getFadeScrollBarsBooleanPropertyValueParserRuleCall_4_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_FadeScrollBarsKeyword_4_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("isScrollContainer?" isScrollContainer=BooleanPropertyValue)?
protected class EditText_Group_4_7 extends GroupToken {
	
	public EditText_Group_4_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_IsScrollContainerAssignment_4_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "isScrollContainer?"
protected class EditText_IsScrollContainerKeyword_4_7_0 extends KeywordToken  {
	
	public EditText_IsScrollContainerKeyword_4_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getIsScrollContainerKeyword_4_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_Group_4_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EditText_Group_4_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EditText_Group_4_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new EditText_Group_4_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new EditText_Group_4_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new EditText_Group_4_0(lastRuleCallOrigin, this, 6, inst);
			case 7: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// isScrollContainer=BooleanPropertyValue
protected class EditText_IsScrollContainerAssignment_4_7_1 extends AssignmentToken  {
	
	public EditText_IsScrollContainerAssignment_4_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getIsScrollContainerAssignment_4_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isScrollContainer",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isScrollContainer");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getIsScrollContainerBooleanPropertyValueParserRuleCall_4_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_IsScrollContainerKeyword_4_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("hint:" hint=StringPropertyValue)?
protected class EditText_Group_4_8 extends GroupToken {
	
	public EditText_Group_4_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_HintAssignment_4_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "hint:"
protected class EditText_HintKeyword_4_8_0 extends KeywordToken  {
	
	public EditText_HintKeyword_4_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getHintKeyword_4_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_Group_4_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EditText_Group_4_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EditText_Group_4_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new EditText_Group_4_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new EditText_Group_4_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new EditText_Group_4_1(lastRuleCallOrigin, this, 6, inst);
			case 7: return new EditText_Group_4_0(lastRuleCallOrigin, this, 7, inst);
			case 8: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// hint=StringPropertyValue
protected class EditText_HintAssignment_4_8_1 extends AssignmentToken  {
	
	public EditText_HintAssignment_4_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getHintAssignment_4_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hint",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hint");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStringPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getHintStringPropertyValueParserRuleCall_4_8_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_HintKeyword_4_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("textColor:" textColor=ColorPropertyValue)?
protected class EditText_Group_4_9 extends GroupToken {
	
	public EditText_Group_4_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_TextColorAssignment_4_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "textColor:"
protected class EditText_TextColorKeyword_4_9_0 extends KeywordToken  {
	
	public EditText_TextColorKeyword_4_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getTextColorKeyword_4_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_Group_4_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EditText_Group_4_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EditText_Group_4_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new EditText_Group_4_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new EditText_Group_4_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new EditText_Group_4_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new EditText_Group_4_1(lastRuleCallOrigin, this, 7, inst);
			case 8: return new EditText_Group_4_0(lastRuleCallOrigin, this, 8, inst);
			case 9: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 9, inst);
			default: return null;
		}	
	}

}

// textColor=ColorPropertyValue
protected class EditText_TextColorAssignment_4_9_1 extends AssignmentToken  {
	
	public EditText_TextColorAssignment_4_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getTextColorAssignment_4_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("textColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("textColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getTextColorColorPropertyValueParserRuleCall_4_9_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_TextColorKeyword_4_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("editable?" editable=BooleanPropertyValue)?
protected class EditText_Group_4_10 extends GroupToken {
	
	public EditText_Group_4_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_EditableAssignment_4_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "editable?"
protected class EditText_EditableKeyword_4_10_0 extends KeywordToken  {
	
	public EditText_EditableKeyword_4_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getEditableKeyword_4_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_Group_4_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EditText_Group_4_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EditText_Group_4_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new EditText_Group_4_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new EditText_Group_4_4(lastRuleCallOrigin, this, 5, inst);
			case 6: return new EditText_Group_4_3(lastRuleCallOrigin, this, 6, inst);
			case 7: return new EditText_Group_4_2(lastRuleCallOrigin, this, 7, inst);
			case 8: return new EditText_Group_4_1(lastRuleCallOrigin, this, 8, inst);
			case 9: return new EditText_Group_4_0(lastRuleCallOrigin, this, 9, inst);
			case 10: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 10, inst);
			default: return null;
		}	
	}

}

// editable=BooleanPropertyValue
protected class EditText_EditableAssignment_4_10_1 extends AssignmentToken  {
	
	public EditText_EditableAssignment_4_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getEditableAssignment_4_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("editable",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("editable");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getEditableBooleanPropertyValueParserRuleCall_4_10_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_EditableKeyword_4_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("numeric?" numeric=BooleanPropertyValue)?
protected class EditText_Group_4_11 extends GroupToken {
	
	public EditText_Group_4_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_NumericAssignment_4_11_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "numeric?"
protected class EditText_NumericKeyword_4_11_0 extends KeywordToken  {
	
	public EditText_NumericKeyword_4_11_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getNumericKeyword_4_11_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_Group_4_9(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EditText_Group_4_8(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EditText_Group_4_7(lastRuleCallOrigin, this, 3, inst);
			case 4: return new EditText_Group_4_6(lastRuleCallOrigin, this, 4, inst);
			case 5: return new EditText_Group_4_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new EditText_Group_4_4(lastRuleCallOrigin, this, 6, inst);
			case 7: return new EditText_Group_4_3(lastRuleCallOrigin, this, 7, inst);
			case 8: return new EditText_Group_4_2(lastRuleCallOrigin, this, 8, inst);
			case 9: return new EditText_Group_4_1(lastRuleCallOrigin, this, 9, inst);
			case 10: return new EditText_Group_4_0(lastRuleCallOrigin, this, 10, inst);
			case 11: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 11, inst);
			default: return null;
		}	
	}

}

// numeric=BooleanPropertyValue
protected class EditText_NumericAssignment_4_11_1 extends AssignmentToken  {
	
	public EditText_NumericAssignment_4_11_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getNumericAssignment_4_11_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("numeric",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("numeric");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getNumericBooleanPropertyValueParserRuleCall_4_11_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_NumericKeyword_4_11_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("password?" password=BooleanPropertyValue)?
protected class EditText_Group_4_12 extends GroupToken {
	
	public EditText_Group_4_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_PasswordAssignment_4_12_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "password?"
protected class EditText_PasswordKeyword_4_12_0 extends KeywordToken  {
	
	public EditText_PasswordKeyword_4_12_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getPasswordKeyword_4_12_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_11(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_Group_4_10(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EditText_Group_4_9(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EditText_Group_4_8(lastRuleCallOrigin, this, 3, inst);
			case 4: return new EditText_Group_4_7(lastRuleCallOrigin, this, 4, inst);
			case 5: return new EditText_Group_4_6(lastRuleCallOrigin, this, 5, inst);
			case 6: return new EditText_Group_4_5(lastRuleCallOrigin, this, 6, inst);
			case 7: return new EditText_Group_4_4(lastRuleCallOrigin, this, 7, inst);
			case 8: return new EditText_Group_4_3(lastRuleCallOrigin, this, 8, inst);
			case 9: return new EditText_Group_4_2(lastRuleCallOrigin, this, 9, inst);
			case 10: return new EditText_Group_4_1(lastRuleCallOrigin, this, 10, inst);
			case 11: return new EditText_Group_4_0(lastRuleCallOrigin, this, 11, inst);
			case 12: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 12, inst);
			default: return null;
		}	
	}

}

// password=BooleanPropertyValue
protected class EditText_PasswordAssignment_4_12_1 extends AssignmentToken  {
	
	public EditText_PasswordAssignment_4_12_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getPasswordAssignment_4_12_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("password",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("password");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getPasswordBooleanPropertyValueParserRuleCall_4_12_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_PasswordKeyword_4_12_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("phoneNumber?" phoneNumber=BooleanPropertyValue)?
protected class EditText_Group_4_13 extends GroupToken {
	
	public EditText_Group_4_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEditTextAccess().getGroup_4_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_PhoneNumberAssignment_4_13_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "phoneNumber?"
protected class EditText_PhoneNumberKeyword_4_13_0 extends KeywordToken  {
	
	public EditText_PhoneNumberKeyword_4_13_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEditTextAccess().getPhoneNumberKeyword_4_13_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EditText_Group_4_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EditText_Group_4_11(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EditText_Group_4_10(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EditText_Group_4_9(lastRuleCallOrigin, this, 3, inst);
			case 4: return new EditText_Group_4_8(lastRuleCallOrigin, this, 4, inst);
			case 5: return new EditText_Group_4_7(lastRuleCallOrigin, this, 5, inst);
			case 6: return new EditText_Group_4_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new EditText_Group_4_5(lastRuleCallOrigin, this, 7, inst);
			case 8: return new EditText_Group_4_4(lastRuleCallOrigin, this, 8, inst);
			case 9: return new EditText_Group_4_3(lastRuleCallOrigin, this, 9, inst);
			case 10: return new EditText_Group_4_2(lastRuleCallOrigin, this, 10, inst);
			case 11: return new EditText_Group_4_1(lastRuleCallOrigin, this, 11, inst);
			case 12: return new EditText_Group_4_0(lastRuleCallOrigin, this, 12, inst);
			case 13: return new EditText_TextAssignment_3(lastRuleCallOrigin, this, 13, inst);
			default: return null;
		}	
	}

}

// phoneNumber=BooleanPropertyValue
protected class EditText_PhoneNumberAssignment_4_13_1 extends AssignmentToken  {
	
	public EditText_PhoneNumberAssignment_4_13_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEditTextAccess().getPhoneNumberAssignment_4_13_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("phoneNumber",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("phoneNumber");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEditTextAccess().getPhoneNumberBooleanPropertyValueParserRuleCall_4_13_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EditText_PhoneNumberKeyword_4_13_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




/************ end Rule EditText ****************/


/************ begin Rule Activity ****************
 *
 * Activity:
 * 	GenericActivity | ListActivity | TabActivity;
 *
 **/

// GenericActivity | ListActivity | TabActivity
protected class Activity_Alternatives extends AlternativesToken {

	public Activity_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getActivityAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Activity_GenericActivityParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Activity_ListActivityParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Activity_TabActivityParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGenericActivityRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getListActivityRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTabActivityRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// GenericActivity
protected class Activity_GenericActivityParserRuleCall_0 extends RuleCallToken {
	
	public Activity_GenericActivityParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActivityAccess().getGenericActivityParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericActivity_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGenericActivityRule().getType().getClassifier())
			return null;
		if(checkForRecursion(GenericActivity_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ListActivity
protected class Activity_ListActivityParserRuleCall_1 extends RuleCallToken {
	
	public Activity_ListActivityParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActivityAccess().getListActivityParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ListActivity_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getListActivityRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ListActivity_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// TabActivity
protected class Activity_TabActivityParserRuleCall_2 extends RuleCallToken {
	
	public Activity_TabActivityParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActivityAccess().getTabActivityParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TabActivity_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTabActivityRule().getType().getClassifier())
			return null;
		if(checkForRecursion(TabActivity_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Activity ****************/


/************ begin Rule GenericActivity ****************
 *
 * GenericActivity:
 * 	"activity" name=QualifiedName "{" actions+=Action* "}";
 *
 **/

// "activity" name=QualifiedName "{" actions+=Action* "}"
protected class GenericActivity_Group extends GroupToken {
	
	public GenericActivity_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericActivityAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericActivity_RightCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGenericActivityRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "activity"
protected class GenericActivity_ActivityKeyword_0 extends KeywordToken  {
	
	public GenericActivity_ActivityKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericActivityAccess().getActivityKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=QualifiedName
protected class GenericActivity_NameAssignment_1 extends AssignmentToken  {
	
	public GenericActivity_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericActivityAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericActivity_ActivityKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGenericActivityAccess().getNameQualifiedNameParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getGenericActivityAccess().getNameQualifiedNameParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class GenericActivity_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public GenericActivity_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericActivityAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericActivity_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// actions+=Action*
protected class GenericActivity_ActionsAssignment_3 extends AssignmentToken  {
	
	public GenericActivity_ActionsAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericActivityAccess().getActionsAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Action_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getActionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGenericActivityAccess().getActionsActionParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new GenericActivity_ActionsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new GenericActivity_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class GenericActivity_RightCurlyBracketKeyword_4 extends KeywordToken  {
	
	public GenericActivity_RightCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericActivityAccess().getRightCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericActivity_ActionsAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GenericActivity_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule GenericActivity ****************/


/************ begin Rule ListActivity ****************
 *
 * ListActivity:
 * 	"listActivity" name=QualifiedName "{" "data" dataSource=ID ("layout" layout=[Layout])? "item" itemLayout=[Layout]
 * 	actions+=Action* "}";
 *
 **/

// "listActivity" name=QualifiedName "{" "data" dataSource=ID ("layout" layout=[Layout])? "item" itemLayout=[Layout]
// actions+=Action* "}"
protected class ListActivity_Group extends GroupToken {
	
	public ListActivity_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListActivityAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ListActivity_RightCurlyBracketKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getListActivityRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "listActivity"
protected class ListActivity_ListActivityKeyword_0 extends KeywordToken  {
	
	public ListActivity_ListActivityKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListActivityAccess().getListActivityKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=QualifiedName
protected class ListActivity_NameAssignment_1 extends AssignmentToken  {
	
	public ListActivity_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListActivityAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ListActivity_ListActivityKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getListActivityAccess().getNameQualifiedNameParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getListActivityAccess().getNameQualifiedNameParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class ListActivity_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public ListActivity_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListActivityAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ListActivity_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "data"
protected class ListActivity_DataKeyword_3 extends KeywordToken  {
	
	public ListActivity_DataKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListActivityAccess().getDataKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ListActivity_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// dataSource=ID
protected class ListActivity_DataSourceAssignment_4 extends AssignmentToken  {
	
	public ListActivity_DataSourceAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListActivityAccess().getDataSourceAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ListActivity_DataKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("dataSource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dataSource");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getListActivityAccess().getDataSourceIDTerminalRuleCall_4_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getListActivityAccess().getDataSourceIDTerminalRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// ("layout" layout=[Layout])?
protected class ListActivity_Group_5 extends GroupToken {
	
	public ListActivity_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListActivityAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ListActivity_LayoutAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "layout"
protected class ListActivity_LayoutKeyword_5_0 extends KeywordToken  {
	
	public ListActivity_LayoutKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListActivityAccess().getLayoutKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ListActivity_DataSourceAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// layout=[Layout]
protected class ListActivity_LayoutAssignment_5_1 extends AssignmentToken  {
	
	public ListActivity_LayoutAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListActivityAccess().getLayoutAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ListActivity_LayoutKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("layout",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("layout");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getListActivityAccess().getLayoutLayoutCrossReference_5_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getListActivityAccess().getLayoutLayoutCrossReference_5_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// "item"
protected class ListActivity_ItemKeyword_6 extends KeywordToken  {
	
	public ListActivity_ItemKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListActivityAccess().getItemKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ListActivity_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ListActivity_DataSourceAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// itemLayout=[Layout]
protected class ListActivity_ItemLayoutAssignment_7 extends AssignmentToken  {
	
	public ListActivity_ItemLayoutAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListActivityAccess().getItemLayoutAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ListActivity_ItemKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("itemLayout",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("itemLayout");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getListActivityAccess().getItemLayoutLayoutCrossReference_7_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getListActivityAccess().getItemLayoutLayoutCrossReference_7_0(); 
				return obj;
			}
		}
		return null;
	}

}

// actions+=Action*
protected class ListActivity_ActionsAssignment_8 extends AssignmentToken  {
	
	public ListActivity_ActionsAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListActivityAccess().getActionsAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Action_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getActionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getListActivityAccess().getActionsActionParserRuleCall_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ListActivity_ActionsAssignment_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ListActivity_ItemLayoutAssignment_7(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class ListActivity_RightCurlyBracketKeyword_9 extends KeywordToken  {
	
	public ListActivity_RightCurlyBracketKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListActivityAccess().getRightCurlyBracketKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ListActivity_ActionsAssignment_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ListActivity_ItemLayoutAssignment_7(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule ListActivity ****************/


/************ begin Rule TabActivity ****************
 *
 * TabActivity:
 * 	"tabActivity" name=QualifiedName "{" tabs+=Tab+ "}";
 *
 **/

// "tabActivity" name=QualifiedName "{" tabs+=Tab+ "}"
protected class TabActivity_Group extends GroupToken {
	
	public TabActivity_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTabActivityAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TabActivity_RightCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTabActivityRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "tabActivity"
protected class TabActivity_TabActivityKeyword_0 extends KeywordToken  {
	
	public TabActivity_TabActivityKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTabActivityAccess().getTabActivityKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=QualifiedName
protected class TabActivity_NameAssignment_1 extends AssignmentToken  {
	
	public TabActivity_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTabActivityAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TabActivity_TabActivityKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTabActivityAccess().getNameQualifiedNameParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getTabActivityAccess().getNameQualifiedNameParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class TabActivity_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public TabActivity_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTabActivityAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TabActivity_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// tabs+=Tab+
protected class TabActivity_TabsAssignment_3 extends AssignmentToken  {
	
	public TabActivity_TabsAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTabActivityAccess().getTabsAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tab_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("tabs",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("tabs");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTabRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTabActivityAccess().getTabsTabParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new TabActivity_TabsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new TabActivity_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class TabActivity_RightCurlyBracketKeyword_4 extends KeywordToken  {
	
	public TabActivity_RightCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTabActivityAccess().getRightCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TabActivity_TabsAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule TabActivity ****************/


/************ begin Rule Tab ****************
 *
 * Tab:
 * 	"tab" activity=[Activity];
 *
 **/

// "tab" activity=[Activity]
protected class Tab_Group extends GroupToken {
	
	public Tab_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTabAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tab_ActivityAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTabRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "tab"
protected class Tab_TabKeyword_0 extends KeywordToken  {
	
	public Tab_TabKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTabAccess().getTabKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// activity=[Activity]
protected class Tab_ActivityAssignment_1 extends AssignmentToken  {
	
	public Tab_ActivityAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTabAccess().getActivityAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tab_TabKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("activity",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("activity");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTabAccess().getActivityActivityCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getTabAccess().getActivityActivityCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule Tab ****************/


/************ begin Rule Action ****************
 *
 * Action:
 * 	GenericAction / * | LoadURLAction * / | GoToURLAction | ShowLayoutAction | InvokeActivityAction | LoadResourceAction;
 *
 **/

// GenericAction / * | LoadURLAction * / | GoToURLAction | ShowLayoutAction | InvokeActivityAction | LoadResourceAction
protected class Action_Alternatives extends AlternativesToken {

	public Action_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getActionAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Action_GenericActionParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Action_GoToURLActionParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Action_ShowLayoutActionParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Action_InvokeActivityActionParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Action_LoadResourceActionParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGenericActionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getGoToURLActionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getInvokeActivityActionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLoadResourceActionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getShowLayoutActionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// GenericAction
protected class Action_GenericActionParserRuleCall_0 extends RuleCallToken {
	
	public Action_GenericActionParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActionAccess().getGenericActionParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericAction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGenericActionRule().getType().getClassifier())
			return null;
		if(checkForRecursion(GenericAction_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// GoToURLAction
protected class Action_GoToURLActionParserRuleCall_1 extends RuleCallToken {
	
	public Action_GoToURLActionParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActionAccess().getGoToURLActionParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GoToURLAction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGoToURLActionRule().getType().getClassifier())
			return null;
		if(checkForRecursion(GoToURLAction_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ShowLayoutAction
protected class Action_ShowLayoutActionParserRuleCall_2 extends RuleCallToken {
	
	public Action_ShowLayoutActionParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActionAccess().getShowLayoutActionParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ShowLayoutAction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getShowLayoutActionRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ShowLayoutAction_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// InvokeActivityAction
protected class Action_InvokeActivityActionParserRuleCall_3 extends RuleCallToken {
	
	public Action_InvokeActivityActionParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActionAccess().getInvokeActivityActionParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InvokeActivityAction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInvokeActivityActionRule().getType().getClassifier())
			return null;
		if(checkForRecursion(InvokeActivityAction_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// LoadResourceAction
protected class Action_LoadResourceActionParserRuleCall_4 extends RuleCallToken {
	
	public Action_LoadResourceActionParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActionAccess().getLoadResourceActionParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoadResourceAction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoadResourceActionRule().getType().getClassifier())
			return null;
		if(checkForRecursion(LoadResourceAction_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Action ****************/


/************ begin Rule GenericAction ****************
 *
 * / *
 * Action
 * 
 * ActionCondicional
 *  -> Action(semCondicao) + condicao
 * 	('if' condition+=Action )?
 * * // *
 * //ExtraComplexity
 * ConditionalAction
 * contition=Conditional
 * 
 * Conditional
 * firstCondition+=Conditional
 * (operador=Operator
 * secondCondition+=Conditional)?
 * * /GenericAction:
 * 	"action" name=QualifiedName;
 *
 **/

// "action" name=QualifiedName
protected class GenericAction_Group extends GroupToken {
	
	public GenericAction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGenericActionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericAction_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGenericActionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "action"
protected class GenericAction_ActionKeyword_0 extends KeywordToken  {
	
	public GenericAction_ActionKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGenericActionAccess().getActionKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=QualifiedName
protected class GenericAction_NameAssignment_1 extends AssignmentToken  {
	
	public GenericAction_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGenericActionAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GenericAction_ActionKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGenericActionAccess().getNameQualifiedNameParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getGenericActionAccess().getNameQualifiedNameParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule GenericAction ****************/


/************ begin Rule GoToURLAction ****************
 *
 * GoToURLAction:
 * 	"goTo" url=URL;
 *
 **/

// "goTo" url=URL
protected class GoToURLAction_Group extends GroupToken {
	
	public GoToURLAction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGoToURLActionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GoToURLAction_UrlAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGoToURLActionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "goTo"
protected class GoToURLAction_GoToKeyword_0 extends KeywordToken  {
	
	public GoToURLAction_GoToKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGoToURLActionAccess().getGoToKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// url=URL
protected class GoToURLAction_UrlAssignment_1 extends AssignmentToken  {
	
	public GoToURLAction_UrlAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGoToURLActionAccess().getUrlAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GoToURLAction_GoToKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("url",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("url");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGoToURLActionAccess().getUrlURLParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getGoToURLActionAccess().getUrlURLParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule GoToURLAction ****************/


/************ begin Rule ShowLayoutAction ****************
 *
 * ShowLayoutAction:
 * 	"show" layout=[Layout];
 *
 **/

// "show" layout=[Layout]
protected class ShowLayoutAction_Group extends GroupToken {
	
	public ShowLayoutAction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getShowLayoutActionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ShowLayoutAction_LayoutAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getShowLayoutActionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "show"
protected class ShowLayoutAction_ShowKeyword_0 extends KeywordToken  {
	
	public ShowLayoutAction_ShowKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getShowLayoutActionAccess().getShowKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// layout=[Layout]
protected class ShowLayoutAction_LayoutAssignment_1 extends AssignmentToken  {
	
	public ShowLayoutAction_LayoutAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getShowLayoutActionAccess().getLayoutAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ShowLayoutAction_ShowKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("layout",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("layout");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getShowLayoutActionAccess().getLayoutLayoutCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getShowLayoutActionAccess().getLayoutLayoutCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule ShowLayoutAction ****************/


/************ begin Rule InvokeActivityAction ****************
 *
 * InvokeActivityAction:
 * 	"invoke" activity=[Activity|QualifiedName];
 *
 **/

// "invoke" activity=[Activity|QualifiedName]
protected class InvokeActivityAction_Group extends GroupToken {
	
	public InvokeActivityAction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInvokeActivityActionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InvokeActivityAction_ActivityAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInvokeActivityActionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "invoke"
protected class InvokeActivityAction_InvokeKeyword_0 extends KeywordToken  {
	
	public InvokeActivityAction_InvokeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInvokeActivityActionAccess().getInvokeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// activity=[Activity|QualifiedName]
protected class InvokeActivityAction_ActivityAssignment_1 extends AssignmentToken  {
	
	public InvokeActivityAction_ActivityAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInvokeActivityActionAccess().getActivityAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InvokeActivityAction_InvokeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("activity",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("activity");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInvokeActivityActionAccess().getActivityActivityCrossReference_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getInvokeActivityActionAccess().getActivityActivityCrossReference_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule InvokeActivityAction ****************/


/************ begin Rule LoadResourceAction ****************
 *
 * //Loads a fixed resource
 * //TODO: Load a dinamic resource from a URL, loadJson for example
 * LoadResourceAction:
 * 	"load" resource=ID ("->" toVar=ID)? ("=>" afterLoad=Action)?;
 *
 **/

// "load" resource=ID ("->" toVar=ID)? ("=>" afterLoad=Action)?
protected class LoadResourceAction_Group extends GroupToken {
	
	public LoadResourceAction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoadResourceActionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoadResourceAction_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new LoadResourceAction_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new LoadResourceAction_ResourceAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLoadResourceActionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "load"
protected class LoadResourceAction_LoadKeyword_0 extends KeywordToken  {
	
	public LoadResourceAction_LoadKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoadResourceActionAccess().getLoadKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// resource=ID
protected class LoadResourceAction_ResourceAssignment_1 extends AssignmentToken  {
	
	public LoadResourceAction_ResourceAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoadResourceActionAccess().getResourceAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoadResourceAction_LoadKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("resource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("resource");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLoadResourceActionAccess().getResourceIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLoadResourceActionAccess().getResourceIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ("->" toVar=ID)?
protected class LoadResourceAction_Group_2 extends GroupToken {
	
	public LoadResourceAction_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoadResourceActionAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoadResourceAction_ToVarAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "->"
protected class LoadResourceAction_HyphenMinusGreaterThanSignKeyword_2_0 extends KeywordToken  {
	
	public LoadResourceAction_HyphenMinusGreaterThanSignKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoadResourceActionAccess().getHyphenMinusGreaterThanSignKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoadResourceAction_ResourceAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// toVar=ID
protected class LoadResourceAction_ToVarAssignment_2_1 extends AssignmentToken  {
	
	public LoadResourceAction_ToVarAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoadResourceActionAccess().getToVarAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoadResourceAction_HyphenMinusGreaterThanSignKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("toVar",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("toVar");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLoadResourceActionAccess().getToVarIDTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLoadResourceActionAccess().getToVarIDTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("=>" afterLoad=Action)?
protected class LoadResourceAction_Group_3 extends GroupToken {
	
	public LoadResourceAction_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLoadResourceActionAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoadResourceAction_AfterLoadAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "=>"
protected class LoadResourceAction_EqualsSignGreaterThanSignKeyword_3_0 extends KeywordToken  {
	
	public LoadResourceAction_EqualsSignGreaterThanSignKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLoadResourceActionAccess().getEqualsSignGreaterThanSignKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LoadResourceAction_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new LoadResourceAction_ResourceAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// afterLoad=Action
protected class LoadResourceAction_AfterLoadAssignment_3_1 extends AssignmentToken  {
	
	public LoadResourceAction_AfterLoadAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLoadResourceActionAccess().getAfterLoadAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Action_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("afterLoad",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("afterLoad");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getActionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLoadResourceActionAccess().getAfterLoadActionParserRuleCall_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new LoadResourceAction_EqualsSignGreaterThanSignKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule LoadResourceAction ****************/


/************ begin Rule PropertyValue ****************
 *
 * PropertyValue:
 * 	StringPropertyValue / *
 * 	  IntegerArrayPropertyValue | StringArrayPropertyValue |
 * 	  Typed ArrayPropertyValue * /| IntegerPropertyValue | BooleanPropertyValue | ColorPropertyValue |
 * 	DimensionPropertyValue | DrawableResourcePropertyValue;
 *
 **/

// StringPropertyValue / *
// 	  IntegerArrayPropertyValue | StringArrayPropertyValue |
// 	  Typed ArrayPropertyValue * /| IntegerPropertyValue | BooleanPropertyValue | ColorPropertyValue |
// DimensionPropertyValue | DrawableResourcePropertyValue
protected class PropertyValue_Alternatives extends AlternativesToken {

	public PropertyValue_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPropertyValueAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PropertyValue_StringPropertyValueParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PropertyValue_IntegerPropertyValueParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new PropertyValue_BooleanPropertyValueParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new PropertyValue_ColorPropertyValueParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new PropertyValue_DimensionPropertyValueParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new PropertyValue_DrawableResourcePropertyValueParserRuleCall_5(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBooleanPropertyValueRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getColorPropertyValueRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDimensionPropertyValueRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDrawableResourcePropertyValueRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getIntegerPropertyValueRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getStringPropertyValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// StringPropertyValue
protected class PropertyValue_StringPropertyValueParserRuleCall_0 extends RuleCallToken {
	
	public PropertyValue_StringPropertyValueParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyValueAccess().getStringPropertyValueParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStringPropertyValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(StringPropertyValue_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// IntegerPropertyValue
protected class PropertyValue_IntegerPropertyValueParserRuleCall_1 extends RuleCallToken {
	
	public PropertyValue_IntegerPropertyValueParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyValueAccess().getIntegerPropertyValueParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerPropertyValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(IntegerPropertyValue_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// BooleanPropertyValue
protected class PropertyValue_BooleanPropertyValueParserRuleCall_2 extends RuleCallToken {
	
	public PropertyValue_BooleanPropertyValueParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyValueAccess().getBooleanPropertyValueParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(BooleanPropertyValue_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ColorPropertyValue
protected class PropertyValue_ColorPropertyValueParserRuleCall_3 extends RuleCallToken {
	
	public PropertyValue_ColorPropertyValueParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyValueAccess().getColorPropertyValueParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getColorPropertyValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ColorPropertyValue_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// DimensionPropertyValue
protected class PropertyValue_DimensionPropertyValueParserRuleCall_4 extends RuleCallToken {
	
	public PropertyValue_DimensionPropertyValueParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyValueAccess().getDimensionPropertyValueParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(DimensionPropertyValue_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// DrawableResourcePropertyValue
protected class PropertyValue_DrawableResourcePropertyValueParserRuleCall_5 extends RuleCallToken {
	
	public PropertyValue_DrawableResourcePropertyValueParserRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyValueAccess().getDrawableResourcePropertyValueParserRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResourcePropertyValue_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDrawableResourcePropertyValueRule().getType().getClassifier())
			return null;
		if(checkForRecursion(DrawableResourcePropertyValue_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule PropertyValue ****************/


/************ begin Rule StringPropertyValue ****************
 *
 * / *
 * button<primeiro>
 *   top 		= 20
 *   bottom 	= default_button_position
 *   left 		= (outro_valor)
 * * /StringPropertyValue:
 * 	value=STRING | (resource=[StringValueResource] | "(" externalResource=ID ")");
 *
 **/

// value=STRING | (resource=[StringValueResource] | "(" externalResource=ID ")")
protected class StringPropertyValue_Alternatives extends AlternativesToken {

	public StringPropertyValue_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getStringPropertyValueAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_ValueAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new StringPropertyValue_Alternatives_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStringPropertyValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// value=STRING
protected class StringPropertyValue_ValueAssignment_0 extends AssignmentToken  {
	
	public StringPropertyValue_ValueAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStringPropertyValueAccess().getValueAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getStringPropertyValueAccess().getValueSTRINGTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getStringPropertyValueAccess().getValueSTRINGTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// resource=[StringValueResource] | "(" externalResource=ID ")"
protected class StringPropertyValue_Alternatives_1 extends AlternativesToken {

	public StringPropertyValue_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getStringPropertyValueAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_ResourceAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new StringPropertyValue_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// resource=[StringValueResource]
protected class StringPropertyValue_ResourceAssignment_1_0 extends AssignmentToken  {
	
	public StringPropertyValue_ResourceAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStringPropertyValueAccess().getResourceAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("resource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("resource");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStringPropertyValueAccess().getResourceStringValueResourceCrossReference_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getStringPropertyValueAccess().getResourceStringValueResourceCrossReference_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "(" externalResource=ID ")"
protected class StringPropertyValue_Group_1_1 extends GroupToken {
	
	public StringPropertyValue_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStringPropertyValueAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_RightParenthesisKeyword_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class StringPropertyValue_LeftParenthesisKeyword_1_1_0 extends KeywordToken  {
	
	public StringPropertyValue_LeftParenthesisKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStringPropertyValueAccess().getLeftParenthesisKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// externalResource=ID
protected class StringPropertyValue_ExternalResourceAssignment_1_1_1 extends AssignmentToken  {
	
	public StringPropertyValue_ExternalResourceAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStringPropertyValueAccess().getExternalResourceAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_LeftParenthesisKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("externalResource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("externalResource");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getStringPropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getStringPropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class StringPropertyValue_RightParenthesisKeyword_1_1_2 extends KeywordToken  {
	
	public StringPropertyValue_RightParenthesisKeyword_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStringPropertyValueAccess().getRightParenthesisKeyword_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StringPropertyValue_ExternalResourceAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




/************ end Rule StringPropertyValue ****************/


/************ begin Rule IntegerPropertyValue ****************
 *
 * IntegerPropertyValue:
 * 	value=INT | (resource=[IntegerValueResource] | "(" externalResource=ID ")");
 *
 **/

// value=INT | (resource=[IntegerValueResource] | "(" externalResource=ID ")")
protected class IntegerPropertyValue_Alternatives extends AlternativesToken {

	public IntegerPropertyValue_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getIntegerPropertyValueAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerPropertyValue_ValueAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new IntegerPropertyValue_Alternatives_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIntegerPropertyValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// value=INT
protected class IntegerPropertyValue_ValueAssignment_0 extends AssignmentToken  {
	
	public IntegerPropertyValue_ValueAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerPropertyValueAccess().getValueAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getIntegerPropertyValueAccess().getValueINTTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getIntegerPropertyValueAccess().getValueINTTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// resource=[IntegerValueResource] | "(" externalResource=ID ")"
protected class IntegerPropertyValue_Alternatives_1 extends AlternativesToken {

	public IntegerPropertyValue_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getIntegerPropertyValueAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerPropertyValue_ResourceAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new IntegerPropertyValue_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// resource=[IntegerValueResource]
protected class IntegerPropertyValue_ResourceAssignment_1_0 extends AssignmentToken  {
	
	public IntegerPropertyValue_ResourceAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerPropertyValueAccess().getResourceAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("resource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("resource");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getIntegerPropertyValueAccess().getResourceIntegerValueResourceCrossReference_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getIntegerPropertyValueAccess().getResourceIntegerValueResourceCrossReference_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "(" externalResource=ID ")"
protected class IntegerPropertyValue_Group_1_1 extends GroupToken {
	
	public IntegerPropertyValue_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIntegerPropertyValueAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerPropertyValue_RightParenthesisKeyword_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class IntegerPropertyValue_LeftParenthesisKeyword_1_1_0 extends KeywordToken  {
	
	public IntegerPropertyValue_LeftParenthesisKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerPropertyValueAccess().getLeftParenthesisKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// externalResource=ID
protected class IntegerPropertyValue_ExternalResourceAssignment_1_1_1 extends AssignmentToken  {
	
	public IntegerPropertyValue_ExternalResourceAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getIntegerPropertyValueAccess().getExternalResourceAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerPropertyValue_LeftParenthesisKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("externalResource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("externalResource");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getIntegerPropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getIntegerPropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class IntegerPropertyValue_RightParenthesisKeyword_1_1_2 extends KeywordToken  {
	
	public IntegerPropertyValue_RightParenthesisKeyword_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getIntegerPropertyValueAccess().getRightParenthesisKeyword_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new IntegerPropertyValue_ExternalResourceAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




/************ end Rule IntegerPropertyValue ****************/


/************ begin Rule BooleanPropertyValue ****************
 *
 * BooleanPropertyValue:
 * 	value=BOOL | (resource=[BooleanValueResource] | "(" externalResource=ID ")");
 *
 **/

// value=BOOL | (resource=[BooleanValueResource] | "(" externalResource=ID ")")
protected class BooleanPropertyValue_Alternatives extends AlternativesToken {

	public BooleanPropertyValue_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBooleanPropertyValueAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_ValueAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BooleanPropertyValue_Alternatives_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBooleanPropertyValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// value=BOOL
protected class BooleanPropertyValue_ValueAssignment_0 extends AssignmentToken  {
	
	public BooleanPropertyValue_ValueAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBooleanPropertyValueAccess().getValueAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBooleanPropertyValueAccess().getValueBOOLParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getBooleanPropertyValueAccess().getValueBOOLParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// resource=[BooleanValueResource] | "(" externalResource=ID ")"
protected class BooleanPropertyValue_Alternatives_1 extends AlternativesToken {

	public BooleanPropertyValue_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBooleanPropertyValueAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_ResourceAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BooleanPropertyValue_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// resource=[BooleanValueResource]
protected class BooleanPropertyValue_ResourceAssignment_1_0 extends AssignmentToken  {
	
	public BooleanPropertyValue_ResourceAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBooleanPropertyValueAccess().getResourceAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("resource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("resource");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBooleanPropertyValueAccess().getResourceBooleanValueResourceCrossReference_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getBooleanPropertyValueAccess().getResourceBooleanValueResourceCrossReference_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "(" externalResource=ID ")"
protected class BooleanPropertyValue_Group_1_1 extends GroupToken {
	
	public BooleanPropertyValue_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBooleanPropertyValueAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_RightParenthesisKeyword_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class BooleanPropertyValue_LeftParenthesisKeyword_1_1_0 extends KeywordToken  {
	
	public BooleanPropertyValue_LeftParenthesisKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBooleanPropertyValueAccess().getLeftParenthesisKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// externalResource=ID
protected class BooleanPropertyValue_ExternalResourceAssignment_1_1_1 extends AssignmentToken  {
	
	public BooleanPropertyValue_ExternalResourceAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBooleanPropertyValueAccess().getExternalResourceAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_LeftParenthesisKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("externalResource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("externalResource");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBooleanPropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBooleanPropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class BooleanPropertyValue_RightParenthesisKeyword_1_1_2 extends KeywordToken  {
	
	public BooleanPropertyValue_RightParenthesisKeyword_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBooleanPropertyValueAccess().getRightParenthesisKeyword_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BooleanPropertyValue_ExternalResourceAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




/************ end Rule BooleanPropertyValue ****************/


/************ begin Rule ColorPropertyValue ****************
 *
 * ColorPropertyValue:
 * 	value=HEX_COLOR | (resource=[ColorValueResource] | "(" externalResource=ID ")");
 *
 **/

// value=HEX_COLOR | (resource=[ColorValueResource] | "(" externalResource=ID ")")
protected class ColorPropertyValue_Alternatives extends AlternativesToken {

	public ColorPropertyValue_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getColorPropertyValueAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorPropertyValue_ValueAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ColorPropertyValue_Alternatives_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getColorPropertyValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// value=HEX_COLOR
protected class ColorPropertyValue_ValueAssignment_0 extends AssignmentToken  {
	
	public ColorPropertyValue_ValueAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorPropertyValueAccess().getValueAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getColorPropertyValueAccess().getValueHEX_COLORTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getColorPropertyValueAccess().getValueHEX_COLORTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// resource=[ColorValueResource] | "(" externalResource=ID ")"
protected class ColorPropertyValue_Alternatives_1 extends AlternativesToken {

	public ColorPropertyValue_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getColorPropertyValueAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorPropertyValue_ResourceAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ColorPropertyValue_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// resource=[ColorValueResource]
protected class ColorPropertyValue_ResourceAssignment_1_0 extends AssignmentToken  {
	
	public ColorPropertyValue_ResourceAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorPropertyValueAccess().getResourceAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("resource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("resource");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorPropertyValueAccess().getResourceColorValueResourceCrossReference_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getColorPropertyValueAccess().getResourceColorValueResourceCrossReference_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "(" externalResource=ID ")"
protected class ColorPropertyValue_Group_1_1 extends GroupToken {
	
	public ColorPropertyValue_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorPropertyValueAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorPropertyValue_RightParenthesisKeyword_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class ColorPropertyValue_LeftParenthesisKeyword_1_1_0 extends KeywordToken  {
	
	public ColorPropertyValue_LeftParenthesisKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorPropertyValueAccess().getLeftParenthesisKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// externalResource=ID
protected class ColorPropertyValue_ExternalResourceAssignment_1_1_1 extends AssignmentToken  {
	
	public ColorPropertyValue_ExternalResourceAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorPropertyValueAccess().getExternalResourceAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorPropertyValue_LeftParenthesisKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("externalResource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("externalResource");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getColorPropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getColorPropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class ColorPropertyValue_RightParenthesisKeyword_1_1_2 extends KeywordToken  {
	
	public ColorPropertyValue_RightParenthesisKeyword_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorPropertyValueAccess().getRightParenthesisKeyword_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorPropertyValue_ExternalResourceAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




/************ end Rule ColorPropertyValue ****************/


/************ begin Rule DimensionPropertyValue ****************
 *
 * DimensionPropertyValue:
 * 	value=FLOAT | (resource=[DimensionValueResource] | "(" externalResource=ID ")");
 *
 **/

// value=FLOAT | (resource=[DimensionValueResource] | "(" externalResource=ID ")")
protected class DimensionPropertyValue_Alternatives extends AlternativesToken {

	public DimensionPropertyValue_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDimensionPropertyValueAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_ValueAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DimensionPropertyValue_Alternatives_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDimensionPropertyValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// value=FLOAT
protected class DimensionPropertyValue_ValueAssignment_0 extends AssignmentToken  {
	
	public DimensionPropertyValue_ValueAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDimensionPropertyValueAccess().getValueAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDimensionPropertyValueAccess().getValueFLOATParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getDimensionPropertyValueAccess().getValueFLOATParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// resource=[DimensionValueResource] | "(" externalResource=ID ")"
protected class DimensionPropertyValue_Alternatives_1 extends AlternativesToken {

	public DimensionPropertyValue_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDimensionPropertyValueAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_ResourceAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DimensionPropertyValue_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// resource=[DimensionValueResource]
protected class DimensionPropertyValue_ResourceAssignment_1_0 extends AssignmentToken  {
	
	public DimensionPropertyValue_ResourceAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDimensionPropertyValueAccess().getResourceAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("resource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("resource");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDimensionPropertyValueAccess().getResourceDimensionValueResourceCrossReference_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDimensionPropertyValueAccess().getResourceDimensionValueResourceCrossReference_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "(" externalResource=ID ")"
protected class DimensionPropertyValue_Group_1_1 extends GroupToken {
	
	public DimensionPropertyValue_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDimensionPropertyValueAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_RightParenthesisKeyword_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class DimensionPropertyValue_LeftParenthesisKeyword_1_1_0 extends KeywordToken  {
	
	public DimensionPropertyValue_LeftParenthesisKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDimensionPropertyValueAccess().getLeftParenthesisKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// externalResource=ID
protected class DimensionPropertyValue_ExternalResourceAssignment_1_1_1 extends AssignmentToken  {
	
	public DimensionPropertyValue_ExternalResourceAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDimensionPropertyValueAccess().getExternalResourceAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_LeftParenthesisKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("externalResource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("externalResource");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDimensionPropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDimensionPropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class DimensionPropertyValue_RightParenthesisKeyword_1_1_2 extends KeywordToken  {
	
	public DimensionPropertyValue_RightParenthesisKeyword_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDimensionPropertyValueAccess().getRightParenthesisKeyword_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DimensionPropertyValue_ExternalResourceAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




/************ end Rule DimensionPropertyValue ****************/


/************ begin Rule DrawableResourcePropertyValue ****************
 *
 * DrawableResourcePropertyValue:
 * 	value=HEX_COLOR | (resource=[DrawableResource] | "(" externalResource=ID ")");
 *
 **/

// value=HEX_COLOR | (resource=[DrawableResource] | "(" externalResource=ID ")")
protected class DrawableResourcePropertyValue_Alternatives extends AlternativesToken {

	public DrawableResourcePropertyValue_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDrawableResourcePropertyValueAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResourcePropertyValue_ValueAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DrawableResourcePropertyValue_Alternatives_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDrawableResourcePropertyValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// value=HEX_COLOR
protected class DrawableResourcePropertyValue_ValueAssignment_0 extends AssignmentToken  {
	
	public DrawableResourcePropertyValue_ValueAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDrawableResourcePropertyValueAccess().getValueAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDrawableResourcePropertyValueAccess().getValueHEX_COLORTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDrawableResourcePropertyValueAccess().getValueHEX_COLORTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// resource=[DrawableResource] | "(" externalResource=ID ")"
protected class DrawableResourcePropertyValue_Alternatives_1 extends AlternativesToken {

	public DrawableResourcePropertyValue_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDrawableResourcePropertyValueAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResourcePropertyValue_ResourceAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DrawableResourcePropertyValue_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// resource=[DrawableResource]
protected class DrawableResourcePropertyValue_ResourceAssignment_1_0 extends AssignmentToken  {
	
	public DrawableResourcePropertyValue_ResourceAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDrawableResourcePropertyValueAccess().getResourceAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("resource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("resource");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDrawableResourcePropertyValueAccess().getResourceDrawableResourceCrossReference_1_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDrawableResourcePropertyValueAccess().getResourceDrawableResourceCrossReference_1_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "(" externalResource=ID ")"
protected class DrawableResourcePropertyValue_Group_1_1 extends GroupToken {
	
	public DrawableResourcePropertyValue_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDrawableResourcePropertyValueAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResourcePropertyValue_RightParenthesisKeyword_1_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class DrawableResourcePropertyValue_LeftParenthesisKeyword_1_1_0 extends KeywordToken  {
	
	public DrawableResourcePropertyValue_LeftParenthesisKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDrawableResourcePropertyValueAccess().getLeftParenthesisKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// externalResource=ID
protected class DrawableResourcePropertyValue_ExternalResourceAssignment_1_1_1 extends AssignmentToken  {
	
	public DrawableResourcePropertyValue_ExternalResourceAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDrawableResourcePropertyValueAccess().getExternalResourceAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResourcePropertyValue_LeftParenthesisKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("externalResource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("externalResource");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDrawableResourcePropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDrawableResourcePropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class DrawableResourcePropertyValue_RightParenthesisKeyword_1_1_2 extends KeywordToken  {
	
	public DrawableResourcePropertyValue_RightParenthesisKeyword_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDrawableResourcePropertyValueAccess().getRightParenthesisKeyword_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableResourcePropertyValue_ExternalResourceAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




/************ end Rule DrawableResourcePropertyValue ****************/


/************ begin Rule DrawableImageResourcePropertyValue ****************
 *
 * DrawableImageResourcePropertyValue:
 * 	resource=[DrawableResource] | "(" externalResource=ID ")";
 *
 **/

// resource=[DrawableResource] | "(" externalResource=ID ")"
protected class DrawableImageResourcePropertyValue_Alternatives extends AlternativesToken {

	public DrawableImageResourcePropertyValue_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDrawableImageResourcePropertyValueAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableImageResourcePropertyValue_ResourceAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DrawableImageResourcePropertyValue_Group_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDrawableImageResourcePropertyValueRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// resource=[DrawableResource]
protected class DrawableImageResourcePropertyValue_ResourceAssignment_0 extends AssignmentToken  {
	
	public DrawableImageResourcePropertyValue_ResourceAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDrawableImageResourcePropertyValueAccess().getResourceAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("resource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("resource");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDrawableImageResourcePropertyValueAccess().getResourceDrawableResourceCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getDrawableImageResourcePropertyValueAccess().getResourceDrawableResourceCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "(" externalResource=ID ")"
protected class DrawableImageResourcePropertyValue_Group_1 extends GroupToken {
	
	public DrawableImageResourcePropertyValue_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDrawableImageResourcePropertyValueAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableImageResourcePropertyValue_RightParenthesisKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class DrawableImageResourcePropertyValue_LeftParenthesisKeyword_1_0 extends KeywordToken  {
	
	public DrawableImageResourcePropertyValue_LeftParenthesisKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDrawableImageResourcePropertyValueAccess().getLeftParenthesisKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// externalResource=ID
protected class DrawableImageResourcePropertyValue_ExternalResourceAssignment_1_1 extends AssignmentToken  {
	
	public DrawableImageResourcePropertyValue_ExternalResourceAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDrawableImageResourcePropertyValueAccess().getExternalResourceAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableImageResourcePropertyValue_LeftParenthesisKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("externalResource",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("externalResource");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDrawableImageResourcePropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDrawableImageResourcePropertyValueAccess().getExternalResourceIDTerminalRuleCall_1_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class DrawableImageResourcePropertyValue_RightParenthesisKeyword_1_2 extends KeywordToken  {
	
	public DrawableImageResourcePropertyValue_RightParenthesisKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDrawableImageResourcePropertyValueAccess().getRightParenthesisKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DrawableImageResourcePropertyValue_ExternalResourceAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule DrawableImageResourcePropertyValue ****************/





}
