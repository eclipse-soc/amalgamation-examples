/******************************************************************************
 * Copyright (c) 2011 Reinaldo Junior.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Reinaldo Junior (Google Summer of Code) - initial API and implementation
 ******************************************************************************/

/*
 * Instructions:
 * 1) Add -Xmx512m to VM parameters of GenerateDroid.mwe2's Run Configuration
 */

grammar org.eclipse.amalgam.tutorials.xtext.Droid with org.eclipse.xtext.common.Terminals
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate droid "http://www.eclipse.org/amalgam/tutorials/xtext/Droid"

//The ammount of available RAM to the JVM is a restriction to the
//DSL generation. The usage of unordered groups tend to increase the RAM needed
//in order to generate the language 

//Debug is a big problem. For example, if you forget to add an & during the
//definition of a unordered-Group yout WILL get memory problems
//(stack overflows, heap out of memory, etc)

/******************************************************************************
 * Application
 ******************************************************************************/

Application:
	'application' name=STRING '=>' packageName=QualifiedName
	'{'
		(  ('version:' versionCode=INT '=>' versionName=STRING)?
		 & sdkVersion=ApplicationUsesSDK?
		)
		(resources+=Resource | activities+=Activity | layouts+=Layout)+
	'}'
;

ApplicationUsesSDK:
	'sdk:' '{' {ApplicationUsesSDK}
		(   ('min:' minSdkVersion=INT ';')?
		  & ('max:' maxSdkVersion=INT ';')?
		  & ('target:' targetSdkVersion=INT ';')?
		)
	'}'
;

Resource:
	ValueResource | MenuResource
;

Layout:
	AbstractLinearLayout | RelativeLayout | TabHost | FrameLayout //| SlideDrawer | AdapterView //
;

/******************************************************************************
 * Activities
 ******************************************************************************/

//TODO: change widgets to viewCollection
AbstractActivity:
	Activity | (referencedLayout=[Layout] widgets=ViewCollection)
;

Activity:
	GenericActivity | ListActivity | TabActivity
;

GenericActivity:
	'screen' name=QualifiedName '{'
		(
		 ('layout:' referencedLayout=[Layout])
		 | widgets=ViewCollection
		)
		//(actions+=Action)*
	'}'
;

ViewCollection:
	('#' views+=View)+
;

//NOT tested
ListActivity:
	'listActivity' name=QualifiedName '{'
		'data:' dataSource=ID
		 (
		   ('layout:' referencedLayout=[Layout])
		   | widgets=ViewCollection
		 )?
		'item:' itemLayout=[Layout]
		(actions+=Action)*
	'}'

;

//NOT tested
TabActivity:
	'tabActivity' name=QualifiedName '{'
		(
		  ('layout:' referencedLayout=[Layout])
		  | widgets=ViewCollection
		)?
		(tabs+=Tab)+
		(actions+=Action)*
	'}'
;


//NOT tested
Tab:
	'tab:' caption=StringVA name=QualifiedName? '{'
		(
		  ('icon:' icon=DrawableRA )?
		  & ('selectedIcon:' selectedIcon=DrawableRA )?
		  & ('activity:' activity=[Activity|QualifiedName] )?
		  & ('layout:' layout=[Layout] )?
		)
		(actions+=Action)*
	 '}'
;

//
//Actions
//


ActionSet:
	'actions:' '{' actions+=Action+ '}'
;

// => (invoke second_activity)
Action:
	'=>'
	(
	  GoToURLAction | ShowLayoutAction | InvokeActivityAction
	  /*| LoadResourceAction| LoadURLAction */
	)
;

//NOT tested
GoToURLAction:
	'goTo' url=STRING;

//NOT tested
ShowLayoutAction:
	'show' layout=[Layout];

//NOT tested
InvokeActivityAction:
	'invoke' activity=[Activity|QualifiedName];

/******************************************************************************
 * Layouts
 ******************************************************************************/
AbstractLinearLayout:
	LinearLayout | TabWidget //| RadioGroup
;

AbstractView:
	View | (name=ID widgets=ViewCollection) //Enforces properties inside AbstractView interface
;

View:
	Widget | Layout
;

LinearLayout:
	'linear'? 'layout' {LinearLayout} name=ID? '{'
		(
		  //View Properties
		  ('alpha:' alpha=FLOAT ';' )?
		  & ('background:' background=AnyDrawableVA ';' )?
		  & ('minHeight:' minHeight=DimensionVA ';' )?
		  & ('minWidth:' minWidth=DimensionVA ';' )?
		  & ('nextFocusDown:' nextFocusDown=[View] ';' )?
		  & ('nextFocusLeft:' nextFocusLeft=[View] ';' )?
		  & ('nextFocusRight:' nextFocusRight=[View] ';' )?
		  & ('nextFocusUp:' nextFocusUp=[View] ';' )?
		  & ('onClick:' onClick=Action';' )?
		  & ('padding:' padding=DimensionVA ';' )?
		  & ('paddingBottom:' paddingBottom=DimensionVA';' )?
		  & ('paddingLeft:' paddingLeft=DimensionVA';' )?
		  & ('paddingRight:' paddingRight=DimensionVA';' )?
		  & ('paddingTop:' paddingTop=DimensionVA';' )?
//		  & ('rotation:' rotation=DimensionVA';' )?
//		  & ('rotationX:' rotationX=DimensionVA';' )?
//		  & ('rotationY:' rotationY=DimensionVA';' )?
//		  & ('saveEnabled:' saveEnabled=BooleanVA';' )?
//		  & ('scaleX:' scaleX=DimensionVA';' )?
//		  & ('scaleY:' scaleY=DimensionVA';' )?
//		  & ('scrollX:' scrollX=DimensionVA';' )?
//		  & ('scrollY:' scrollY=DimensionVA';' )?
		  & ('scrollbars:' scrollbars=BooleanVA';' )?
//		  & ('transformPivotX:' transformPivotX=DimensionVA';' )?
//		  & ('transformPivotY:' transformPivotY=DimensionVA';' )?
//		  & ('translationX:' translationX=DimensionVA';' )?
//		  & ('translationY:' translationY=DimensionVA';' )?
		  & ('visibility:' visibility=LayoutVisibilityKind';' )?

		  //LinearLayout.LayoutParams
		  //NOTE: All its children can have this layout parameters too
		  //& (layoutParams=LinearLayoutParams)?
		  & (layoutParams=LayoutParams)?

		  //ViewGroup
		  & ('animation:' layoutAnimation=AnimationVA ';' )?

		  //LinearLayout
//		  & ('gravity:' gravity+=LayoutGravityKind ('|' gravity+=LayoutGravityKind)* ';' )?
		  & ('orientation:' orientation=LayoutOrientationKind ';' )?
		)
	  widgets=ViewCollection?
	'}'
;

RelativeLayout:
	'relative' 'layout' {RelativeLayout} name=ID? '{'
		(
		  //View Properties
		  ('alpha:' alpha=FLOAT ';' )?
		  & ('background:' background=AnyDrawableVA ';' )?
		  & ('minHeight:' minHeight=DimensionVA ';' )?
		  & ('minWidth:' minWidth=DimensionVA ';' )?
		  & ('nextFocusDown:' nextFocusDown=[View] ';' )?
		  & ('nextFocusLeft:' nextFocusLeft=[View] ';' )?
		  & ('nextFocusRight:' nextFocusRight=[View] ';' )?
		  & ('nextFocusUp:' nextFocusUp=[View] ';' )?
		  & ('onClick:' onClick=Action';' )?
		  & ('padding:' padding=DimensionVA ';' )?
		  & ('paddingBottom:' paddingBottom=DimensionVA';' )?
		  & ('paddingLeft:' paddingLeft=DimensionVA';' )?
		  & ('paddingRight:' paddingRight=DimensionVA';' )?
		  & ('paddingTop:' paddingTop=DimensionVA';' )?
//		  & ('rotation:' rotation=DimensionVA';' )?
//		  & ('rotationX:' rotationX=DimensionVA';' )?
//		  & ('rotationY:' rotationY=DimensionVA';' )?
//		  & ('saveEnabled:' saveEnabled=BooleanVA';' )?
//		  & ('scaleX:' scaleX=DimensionVA';' )?
//		  & ('scaleY:' scaleY=DimensionVA';' )?
//		  & ('scrollX:' scrollX=DimensionVA';' )?
//		  & ('scrollY:' scrollY=DimensionVA';' )?
		  & ('scrollbars:' scrollbars=BooleanVA';' )?
//		  & ('transformPivotX:' transformPivotX=DimensionVA';' )?
//		  & ('transformPivotY:' transformPivotY=DimensionVA';' )?
//		  & ('translationX:' translationX=DimensionVA';' )?
//		  & ('translationY:' translationY=DimensionVA';' )?
		  & ('visibility:' visibility=LayoutVisibilityKind';' )?

		  //RelativeLayout.LayoutParams
		  //NOTE: All its children can have this layout parameters too
		  //& (layoutParams=RelativeLayoutParams)?
		  & (layoutParams=LayoutParams)?

		  //ViewGroup
		  & ('animation:' layoutAnimation=AnimationVA ';' )?

		  //RelativeLayout
//		  & ('gravity:' gravity+=LayoutGravityKind ('|' gravity+=LayoutGravityKind)* ';' )?
		  & ('orientation:' orientation=LayoutOrientationKind ';' )?
		)
	  widgets=ViewCollection?
	'}'
;

//OCL restriction: Must have a TabWidget and a FrameLayout
TabHost:
	'tab' 'layout' {TabHost} name=ID? '{'
		(
		  ('alpha:' alpha=FLOAT ';' )?
		  & ('background:' background=AnyDrawableVA ';' )?
		  & ('minHeight:' minHeight=DimensionVA ';' )?
		  & ('minWidth:' minWidth=DimensionVA ';' )?
		  & ('nextFocusDown:' nextFocusDown=[View] ';' )?
		  & ('nextFocusLeft:' nextFocusLeft=[View] ';' )?
		  & ('nextFocusRight:' nextFocusRight=[View] ';' )?
		  & ('nextFocusUp:' nextFocusUp=[View] ';' )?
		  & ('onClick:' onClick=Action';' )?
		  & ('padding:' padding=DimensionVA ';' )?
		  & ('paddingBottom:' paddingBottom=DimensionVA';' )?
		  & ('paddingLeft:' paddingLeft=DimensionVA';' )?
		  & ('paddingRight:' paddingRight=DimensionVA';' )?
		  & ('paddingTop:' paddingTop=DimensionVA';' )?
//		  & ('rotation:' rotation=DimensionVA';' )?
//		  & ('rotationX:' rotationX=DimensionVA';' )?
//		  & ('rotationY:' rotationY=DimensionVA';' )?
//		  & ('saveEnabled:' saveEnabled=BooleanVA';' )?
//		  & ('scaleX:' scaleX=DimensionVA';' )?
//		  & ('scaleY:' scaleY=DimensionVA';' )?
//		  & ('scrollX:' scrollX=DimensionVA';' )?
//		  & ('scrollY:' scrollY=DimensionVA';' )?
		  & ('scrollbars:' scrollbars=BooleanVA';' )?
//		  & ('transformPivotX:' transformPivotX=DimensionVA';' )?
//		  & ('transformPivotY:' transformPivotY=DimensionVA';' )?
//		  & ('translationX:' translationX=DimensionVA';' )?
//		  & ('translationY:' translationY=DimensionVA';' )?
		  & ('visibility:' visibility=LayoutVisibilityKind';' )?
//		  & ('layout:' layoutParams=LinearLayoutParams ';' )?

		  & (layoutParams=LayoutParams)?

		  //ViewGroup
		  & ('animation:' layoutAnimation=AnimationVA ';' )?
		)
//	  layout=Layout
	  widgets=ViewCollection?
	'}'
;

TabWidget:
	'tabWidget' {TabWidget} name=ID? '{'
		(
		  ('alpha:' alpha=FLOAT ';' )?
		  & ('background:' background=AnyDrawableVA ';' )?
		  & ('minHeight:' minHeight=DimensionVA ';' )?
		  & ('minWidth:' minWidth=DimensionVA ';' )?
		  & ('nextFocusDown:' nextFocusDown=[View] ';' )?
		  & ('nextFocusLeft:' nextFocusLeft=[View] ';' )?
		  & ('nextFocusRight:' nextFocusRight=[View] ';' )?
		  & ('nextFocusUp:' nextFocusUp=[View] ';' )?
		  & ('onClick:' onClick=Action';' )?
		  & ('padding:' padding=DimensionVA ';' )?
		  & ('paddingBottom:' paddingBottom=DimensionVA';' )?
		  & ('paddingLeft:' paddingLeft=DimensionVA';' )?
		  & ('paddingRight:' paddingRight=DimensionVA';' )?
		  & ('paddingTop:' paddingTop=DimensionVA';' )?
//		  & ('rotation:' rotation=DimensionVA';' )?
//		  & ('rotationX:' rotationX=DimensionVA';' )?
//		  & ('rotationY:' rotationY=DimensionVA';' )?
//		  & ('saveEnabled:' saveEnabled=BooleanVA';' )?
//		  & ('scaleX:' scaleX=DimensionVA';' )?
//		  & ('scaleY:' scaleY=DimensionVA';' )?
//		  & ('scrollX:' scrollX=DimensionVA';' )?
//		  & ('scrollY:' scrollY=DimensionVA';' )?
		  & ('scrollbars:' scrollbars=BooleanVA';' )?
//		  & ('transformPivotX:' transformPivotX=DimensionVA';' )?
//		  & ('transformPivotY:' transformPivotY=DimensionVA';' )?
//		  & ('translationX:' translationX=DimensionVA';' )?
//		  & ('translationY:' translationY=DimensionVA';' )?
		  & ('visibility:' visibility=LayoutVisibilityKind';' )?

		  //LinearLayout.LayoutParams
		  //NOTE: All its children can have this layout parameters too
//		  & ('layout:' layoutParams=LinearLayoutParams ';' )?

		  //ViewGroup
		  & ('animation:' layoutAnimation=AnimationVA ';' )?

		  //LinearLayout
		  & ('gravity:' gravity+=LayoutGravityKind ('|' gravity+=LayoutGravityKind)* ';' )?
		  & ('orientation:' orientation=LayoutOrientationKind ';' )?
		  
		  //TabWidget
		  & ('divider:' divider=AnyDrawableVA ';' )?
		  & ('tabStrip:' trabStripEnabled=BooleanVA ';' )?
		  & ('tabStripLeft:' trabStripLeft=AnyDrawableVA ';' )?
		  & ('tabStripRight:' tabStripRight=AnyDrawableVA ';' )?

		)
	  widgets=ViewCollection?
	'}'
;


FrameLayout:
	'frame' 'layout' {FrameLayout} name=ID? '{'
		(
		  ('alpha:' alpha=FLOAT ';' )?
		  & ('background:' background=AnyDrawableVA ';' )?
		  & ('minHeight:' minHeight=DimensionVA ';' )?
		  & ('minWidth:' minWidth=DimensionVA ';' )?
		  & ('nextFocusDown:' nextFocusDown=[View] ';' )?
		  & ('nextFocusLeft:' nextFocusLeft=[View] ';' )?
		  & ('nextFocusRight:' nextFocusRight=[View] ';' )?
		  & ('nextFocusUp:' nextFocusUp=[View] ';' )?
		  & ('onClick:' onClick=Action';' )?
		  & ('padding:' padding=DimensionVA ';' )?
		  & ('paddingBottom:' paddingBottom=DimensionVA';' )?
		  & ('paddingLeft:' paddingLeft=DimensionVA';' )?
		  & ('paddingRight:' paddingRight=DimensionVA';' )?
		  & ('paddingTop:' paddingTop=DimensionVA';' )?
//		  & ('rotation:' rotation=DimensionVA';' )?
//		  & ('rotationX:' rotationX=DimensionVA';' )?
//		  & ('rotationY:' rotationY=DimensionVA';' )?
//		  & ('saveEnabled:' saveEnabled=BooleanVA';' )?
//		  & ('scaleX:' scaleX=DimensionVA';' )?
//		  & ('scaleY:' scaleY=DimensionVA';' )?
//		  & ('scrollX:' scrollX=DimensionVA';' )?
//		  & ('scrollY:' scrollY=DimensionVA';' )?
		  & ('scrollbars:' scrollbars=BooleanVA';' )?
//		  & ('transformPivotX:' transformPivotX=DimensionVA';' )?
//		  & ('transformPivotY:' transformPivotY=DimensionVA';' )?
//		  & ('translationX:' translationX=DimensionVA';' )?
//		  & ('translationY:' translationY=DimensionVA';' )?
		  & ('visibility:' visibility=LayoutVisibilityKind';' )?

//		  & ('layout:' layoutParams=FrameLayoutParams ';' )?

		  //ViewGroup
		  & ('animation:' layoutAnimation=AnimationVA ';' )?
		)
//	  layout=Layout
	  widgets=ViewCollection?
	'}'
;




LayoutParams:
	'layout:' '{' {LayoutParams}
	(
      //LinearLayoutParams
	  ('height:' layout_height=LayoutDimensionVA ';' )?
	  & ('width:' layout_width=LayoutDimensionVA ';' )?
	  //& ('gravity:' layout_gravity+=LayoutGravityKind ('|' gravity+=LayoutGravityKind)* ';' )?
	  & ('weight:' layout_weight=IntegerVA ';' )?
	  & ('marginBottom:' layout_marginBottom=DimensionVA ';' )?
	  & ('marginLeft:' layout_marginLeft=DimensionVA ';' )?
	  & ('marginRight:' layout_marginRight=DimensionVA ';' )?
	  & ('marginTop:' layout_marginTop=DimensionVA ';' )?

	  //RelativeLayoutParams
	  & ('above:' layout_above=[View] ';' )?
	  & ('alignBaseline:' layout_alignBaseline=[View] ';')?
	  & ('alignBottom:' layout_alignBottom=[View] ';')?
	  & ('alignLeft:' layout_alignLeft=[View] ';')?
	  & ('alignParentBottom:' layout_alignParentBottom=BooleanVA ';')?
	  & ('alignParentLeft:' layout_alignParentLeft=BooleanVA ';')?
	  & ('alignParentRight:' layout_alignParentRight=BooleanVA ';')?
	  & ('alignParentTop:' layout_alignParentTop=BooleanVA ';')?
	  & ('alignTop:' layout_alignTop=[View] ';')?
	  & ('alignWithParentIfMissing:' layout_alignWithParentIfMissing=BooleanVA ';')?
	  & ('below:' layout_below=[View] ';')?
	  & ('centerHorizontal:' layout_centerHorizontal=BooleanVA ';')?
	  & ('centerInParent:' layout_centerInParent=BooleanVA ';')?
	  & ('centerVertical:' layout_centerVertical=BooleanVA ';')?
	  & ('toLeftOf:' layout_toLeftOf=[View] ';')?
	  & ('toRightOf:' layout_toRightOf=[View] ';')?
	)
	'}'
;


/******************************************************************************
 * Widgets
 ******************************************************************************/
Widget:
	TextView | Button | ImageView | EditText | Spinner
;

AbstractTextView:
	TextView | Button | EditText
;

TextView:
	'textView:' ('<'name=ID'>')?
	text=StringVA
	('{'
	(layoutParams=LayoutParams)?
	(
	 ('top:' top=DimensionVA ';')?
	 & ('left:' left=DimensionVA ';')?
	 & ('width:' width=DimensionVA ';')?
	 & ('height:' height=DimensionVA ';')?
	 & ('background:' background=AnyDrawableVA ';')?
	 & ('clickable:' clickable=BooleanVA ';' )?
	 & ('fadeScrollBars:' fadeScrollBars=BooleanVA ';' )?
	 & ('isScrollContainer:' isScrollContainer=BooleanVA ';' )?

	 //TextView attributes
	 & ('autoLink:' autoLink=AutoLinkKind ';' )?
	 & ('autoText:' autoText=BooleanVA ';' )?
	 & ('capitalize:' capitalize=CapitalizeKind ';' )?
	 & ('digits:' digits=StringVA ';' )?
	 & ('editable:' editable=BooleanVA';' )?
	 & ('gravity:' gravity=LayoutGravityKind';' )?
	 & ('hint:' hint=StringVA';' )?
	 & ('numeric:' numeric=BooleanVA';' )?
	 & ('password:' password=BooleanVA';' )?
	 & ('phoneNumber:' phoneNumber=BooleanVA';' )?
	 & ('singleLine:' singleLine=BooleanVA ';' )?
	 & ('textColor:' textColor=ColorVA';' )?
	 & ('typeface:' typeface=TypefaceKind ';' )?
	 & ('textSize:' textSize=DimensionVA ';' )?
	 & ('textStyle:' textStyle+=TextStyleKind ('|' textStyle+=TextStyleKind)* ';' )?
	 
	 //Test HERE
	 //& (layoutParams=LayoutParams)?
	)
	'}')?
;

//NOT tested
ImageView:
	'imageView:' ('<'name=ID'>')?
	src=AnyDrawableVA
	('{'
	(layoutParams=LayoutParams)?
	(
	  ('top:' top=DimensionVA ';' )?
	 & ('left:' left=DimensionVA ';' )?
	 & ('width:' width=DimensionVA ';' )?
	 & ('height:' height=DimensionVA ';' )?
	 & ('background:' background=AnyDrawableVA ';' )?
	 & ('clickable:' clickable=BooleanVA ';' )?
	 & ('fadeScrollBars:' fadeScrollBars=BooleanVA ';' )?
	 & ('isScrollContainer:' isScrollContainer=BooleanVA ';' )?
	)
	'}')?
;


//Button and ImageButton (depending on parameters)
Button:
	'button:' {Button} ('<'name=ID'>')?
	( text=StringVA | src=AnyDrawableVA )
	('to' target=[Activity|QualifiedName])?
	('{'
	(layoutParams=LayoutParams)?
	(
	 ('top:' top=DimensionVA ';' )?
	 & ('left:' left=DimensionVA ';' )?
	 & ('width:' width=DimensionVA ';' )?
	 & ('height:' height=DimensionVA ';' )?
	 & ('background:' background=AnyDrawableVA ';' )?
	 & ('clickable:' clickable=BooleanVA ';' )?

	 // Specific properties
	 & ('hint:' hint=StringVA ';' )?
	)
	'}')?
;


//Todo: look at http://developer.android.com/resources/tutorials/views/hello-spinner.html
//NOT tested
Spinner:
	'spinner:' {Spinner} ('<'name=ID'>')?
	prompt=StringVA?
	('{'
	(layoutParams=LayoutParams)?
	(
	  ('top:' top=DimensionVA ';' )?
	 & ('left:' left=DimensionVA ';' )?
	 & ('width:' width=DimensionVA ';' )?
	 & ('height:' height=DimensionVA ';' )?
	 & ('background:' background=AnyDrawableVA ';' )?
	 & ('clickable:' clickable=BooleanVA ';' )?
	 & ('fadeScrollBars:' fadeScrollBars=BooleanVA ';' )?
	 & ('isScrollContainer:' isScrollContainer=BooleanVA ';' )?

	 // Specific properties
//	 & ('gravity:' gravity+=SpinnerGravityKind ('|' gravity+=SpinnerGravityKind )* ';' )?
	)
	'}')?
;

//EditText < TextView
//NOT tested
EditText:
	'editText:' {EditText} ('<'name=ID'>')?
	text=StringVA?
	('{'
	(layoutParams=LayoutParams)?
	(
	  ('top:' top=DimensionVA ';' )?
	 & ('left:' left=DimensionVA ';' )?
	 & ('width:' width=DimensionVA ';' )?
	 & ('height:' height=DimensionVA ';' )?
	 & ('background:' background=AnyDrawableVA ';' )?
	 & ('clickable:' clickable=BooleanVA ';' )?
	 & ('fadeScrollBars:' fadeScrollBars=BooleanVA ';' )?
	 & ('isScrollContainer:' isScrollContainer=BooleanVA ';' )?

	 //TextView attributes
	 & ('autoLink:' autoLink=AutoLinkKind ';' )?
	 & ('autoText:' autoText=BooleanVA ';' )?
	 & ('capitalize:' capitalize=CapitalizeKind ';' )?
	 & ('digits:' digits=StringVA ';' )?
	 & ('editable:' editable=BooleanVA';' )?
	 & ('gravity:' gravity=LayoutGravityKind';' )?
	 & ('hint:' hint=StringVA';' )?
	 & ('numeric:' numeric=BooleanVA';' )?
	 & ('password:' password=BooleanVA';' )?
	 & ('phoneNumber:' phoneNumber=BooleanVA';' )?
	 & ('singleLine:' singleLine=BooleanVA ';' )?
	 & ('textColor:' textColor=ColorVA';' )?
	 & ('typeface:' typeface=TypefaceKind ';' )?
	 & ('textSize:' textSize=DimensionVA ';' )?
	 & ('textStyle:' textStyle+=TextStyleKind ('|' textStyle+=TextStyleKind)* ';' )?
	)
	'}')?
;

/******************************************************************************
 * Value Access
 ******************************************************************************
 * If something (like a property) have a value of any resource kind, this value
 * is a value access. Always have as associated type.
 ******************************************************************************/
ValueAccess:
	StringVA | IntegerVA | BooleanVA | ColorVA | DimensionVA
		| DrawableVA | AnimationVA | InterpolatorVA
		//| IntegerArrayVA | StringArrayVA | TypedArrayVA
;

//This delegation pattern is only making the things harder because I can not
//put an abstract property (access) in the ValueAccess abstract class

StringVA:
	//(StringRA | StringVD)
	access=StringRA | value=StringVD
;

IntegerVA:
	//(IntegerRA | IntegerVD)
	access=IntegerRA | value=IntegerVD
;


BooleanVA:
	//(BooleanRA | BooleanVD)
	access=BooleanRA | value=BooleanVD
;

ColorVA:
	//(ColorRA | ColorVD)
	access=ColorRA | value=ColorVD
;

DimensionVA:
	//(DimensionRA | DimensionVD)
	access=DimensionRA | value=DimensionVD
;

//Used only in layout_width and layout_height
LayoutDimensionVA:
	DimensionVA | ( constant_value=LayoutDimensionKind )
;

//TODO: StyleRA
//http://developer.android.com/guide/topics/ui/themes.html
AnyDrawableVA:
	DrawableVA | ColorVA
;
DrawableVA:
	(access=DrawableRA)
;

AnimationVA:
	//(AnimationRA)
	access=AnimationRA //| AnimationVD
;

InterpolatorVA:
	//(InterpolatorRA)
	access=InterpolatorRA
;


/******************************************************************************
 * Value Definitions (always typed)
 ******************************************************************************/
ValueDefinition:
 	StringVD | IntegerVD | BooleanVD | ColorVD | DimensionVD
	/* IntegerArrayVD | StringArrayVD | TypedArrayVD */
;

StringVD:
	value=STRING;

IntegerVD:
	value=INT;

BooleanVD:
	value=BOOL;

ColorVD:
	value=HEX_COLOR;

DimensionVD:
	value=DimensionValue
;

/*
No need
InterpolatorVD:
	 shareInterpolator?='shared'
	 'interpolator' interpolator=InterpolatorRA
;
*/



/******************************************************************************
 * Resource Definition (for resources which can be defined as property value)
 ******************************************************************************
 * TODO: Verify if ALL resources can be defined as property value =D
 ******************************************************************************/

ValueResource:
	StringResource | IntegerResource | BooleanResource | ColorResource
	| DimensionResource  | ArrayResource | DrawableResource | AnimationResource
	//| InterpolatorResource
;

StringResource:
	'string' name=ID '=' value=STRING
;

IntegerResource:
	'integer' name=ID '=' value=INT
;

BooleanResource:
	'bool' name=ID '=' value=BOOL
;

ColorResource:
	'color' name=ID '=' value=HEX_COLOR
;

DimensionResource:
	'dimension' name=ID '=' value=DimensionValue
;

//
//Array Resource
//

ArrayResource:
	'array'
	(IntegerArrayResource | StringArrayResource | TypedArrayResource)
;

IntegerArrayResource:
	'(integer)'
	name=ID '=' '['
		(items+=INT (',' items+=INT)* )?
	']'
;

StringArrayResource:
	'(string)'
	name=ID '=' '['
		(items+=STRING (',' items+=STRING)* )?
	']'
;

//That is going to generate some crazy rules =D
TypedArrayResource:
	name=ID '=' '['
		(values+=ValueAccess (',' values+=ValueAccess)* )?
	']'
;

//
//DrawableResource
//

//http://developer.android.com/guide/topics/resources/drawable-resource.html
DrawableResource:
	(BitmapDrawableResource | TransitionDrawableResource)
;

//http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap
BitmapDrawableResource:
	'bitmap' {BitmapDrawableResource} name=ID '=' filename=ID
;

//http://developer.android.com/guide/topics/resources/drawable-resource.html#Transition
TransitionDrawableResource:
	'transition' {TransitionDrawableResource} name=ID
		from=[BitmapDrawableResource] '<->' to=[BitmapDrawableResource]
;

//
//Menu Resource
//

//PENDING
//Implement attributes: http://developer.android.com/guide/topics/resources/menu-resource.html
MenuResource:
	'menu' {MenuResource} name=ID '{'
		(menuItems+=MenuItem | subMenus+=SubMenu | groups+=MenuItemGroup)*
	'}'
;

MenuItem:
	'item' {MenuItem} '{'
		subMenus+=SubMenu*
	'}'
;

MenuItemGroup:
	'group' {MenuGroup} '{'
		items+=MenuItem+
	'}'
;

SubMenu:
	'submenu' {SubMenu} '{'
		(menuItems+=MenuItem | groups+=MenuItemGroup)*
	'}'
;


//
//Animation Resource
//

AnimationResource:
	( TweenAnimationResource | FrameAnimationResource)
;

FrameAnimationElement:
	(TerminalAnimationElements | TerminalAnimationSet)
;

TerminalAnimationElements:
	(AlphaAnimation | ScaleAnimation | TranslateAnimation | RotateAnimation)
;

TerminalAnimationSet:
	'set' '{'
		(shareInterpolator?='shared'
	 	interpolator=InterpolatorVA)?
		(elements+=FrameAnimationElement)+
	'}'
;

AlphaAnimation:
	'fade:'
	(
	 ('from' fromAlpha=FLOAT) &
	 ('to' toAlpha=FLOAT)
	)
;

ScaleAnimation:
	'scale:'
	(
	 ('from' fromAlpha=FLOAT) &
	 ('to' toAlpha=FLOAT)
	)
;

TranslateAnimation:
	'translate:'
	(
	 ('from' fromAlpha=FLOAT) &
	 ('to' toAlpha=FLOAT)
	)
;

RotateAnimation:
	'rotate:'
	(
	 ('from' fromAlpha=FLOAT) &
	 ('to' toAlpha=FLOAT)
	)
;


TweenAnimationResource:
	'tweenAnimation' name=ID '{'
		(elements+=FrameAnimationElement)+
	'}'
;

FrameAnimationResource:
	oneShot?='oneShot' 'frameAnimation' name=ID '{'
		frames+=AnimationFrame+
	'}'
;

AnimationFrame:
	'frame:' drawable=AnyDrawableVA ('->' duration=INT)?
;


/******************************************************************************
 *  Resource Access
 ******************************************************************************/

//TODO: exemplify this behaviour in a blog post and report eventual bug
//BUG: all the subclasses have a commond attribute but it was not especified in
// the parent common class because the attributes were not of the same
// concrete type (they were of the same abstract type)
//Used only to enforce the abstract property (resource) in the Abstract Class
//BUG?: Why when using this the concrete class's resource attribute don't
// override the abstract resource attribute? 
//AbstractResourceAccess:
//	(ResourceAccess) | ( resource=[Resource] | externalResource=STRING )
//;

//I putted this @<type> just to allow the parser to resolve the ambiguity.
//So, I followed the Android Conventions to typed resource references
AbstractResourceAccess:
	ResourceAccess | (externalResource=STRING)
;
ResourceAccess:
	StringRA | IntegerRA | BooleanRA | ColorRA | DimensionRA
	| DrawableRA | AnimationRA | InterpolatorRA 
;

StringRA:
	'@string'
	( resource=[StringResource] | externalResource=STRING )
;

IntegerRA:
	'@integer'
	( resource=[IntegerResource] | externalResource=STRING )
;

BooleanRA:
	'@bool'
	( resource=[BooleanResource] | externalResource=STRING )
;

ColorRA:
	'@color'
	( resource=[ColorResource] | externalResource=STRING )
;

DimensionRA:
	'@dimen'
	( resource=[DimensionResource] | externalResource=STRING )
;

/*
//TODO: verify if this is valid
ArrayRA:
	'@array'
	( resource=[ArrayResource]  | externalResource=STRING )
;
*/

DrawableRA:
	'@drawable'
	( resource=[DrawableResource]  | externalResource=STRING )
;

AnimationRA:
	'@anim'
	( resource=[AnimationResource]  | externalResource=STRING )
;

InterpolatorRA:
	'@interpolator'
	( interpolatorName=InterpolatorsKind | externalResource=STRING )
;




//CheckBox < TextView
CheckBox:
	'check:' ('<'name=ID'>')?
	text=StringVA
	('{'
	(
	 ('top:' top=DimensionVA ';' )?
	 & ('left:' left=DimensionVA ';' )?
	 & ('width:' width=DimensionVA ';' )?
	 & ('height:' height=DimensionVA ';' )?
	 & ('background:' background=AnyDrawableVA ';' )?
	 & ('clickable:' clickable=BooleanVA ';' )?
	 & ('fadeScrollBars:' fadeScrollBars=BooleanVA ';' )?
	 & ('isScrollContainer:' isScrollContainer=BooleanVA ';' )?

	 //TextView attributes
	 & ('autoLink:' autoLink=AutoLinkKind ';' )?
	 & ('autoText:' autoText=BooleanVA ';' )?
	 & ('capitalize:' capitalize=CapitalizeKind ';' )?
	 & ('digits:' digits=StringVA ';' )?
	 & ('editable:' editable=BooleanVA';' )?
	 & ('gravity:' gravity=LayoutGravityKind';' )?
	 & ('hint:' hint=StringVA';' )?
	 & ('numeric:' numeric=BooleanVA';' )?
	 & ('password:' password=BooleanVA';' )?
	 & ('phoneNumber:' phoneNumber=BooleanVA';' )?
	 & ('singleLine:' singleLine=BooleanVA ';' )?
	 & ('textColor:' textColor=ColorVA';' )?
	 & ('typeface:' typeface=TypefaceKind ';' )?
	 & ('textSize:' textSize=DimensionVA ';' )?
	 & ('textStyle:' textStyle+=TextStyleKind ('|' textStyle+=TextStyleKind)* ';' )?

	 //TODO: Decide how will it be defined
	 //Idea: To create an ActionVA
	 & ('onCheck:' onCheck=Action';' )?
	)
	'}')?
;

//EditText < TextView
RadioButton:
	'radio:' ('<'name=ID'>')?
	text=StringVA
	('{'
	 	('onCheck:' onClick=Action';' )?
	'}')?
;

//EditText < TextView
RadioGroup:
	'radioGroup:' ('<'name=ID'>')?
	'{'
		radioButtons+=[RadioButton]+
	'}'
;


/******************************************************************************
 * Concrete Syntax Stuff
 ******************************************************************************/

/*
 * Enumerations
 */

enum BuiltInPermissionType:
	ACCESS_CHECKIN_PROPERTIES |
	ACCESS_COARSE_LOCATION |
	ACCESS_FINE_LOCATION |
	ACCESS_LOCATION_EXTRA_COMMANDS |
	ACCESS_MOCK_LOCATION |
	ACCESS_NETWORK_STATE |
	ACCESS_SURFACE_FLINGER	|
	ACCESS_WIFI_STATE	|
	ACCOUNT_MANAGER	|
	AUTHENTICATE_ACCOUNTS	|
	BATTERY_STATS	|
	BIND_APPWIDGET	|
	BIND_DEVICE_ADMIN	|
	BIND_INPUT_METHOD	|
	BIND_REMOTEVIEWS	|
	BIND_WALLPAPER	|
	BLUETOOTH	|
	BLUETOOTH_ADMIN	|
	BRICK	|
	BROADCAST_PACKAGE_REMOVED	|
	BROADCAST_SMS	|
	BROADCAST_STICKY	|
	BROADCAST_WAP_PUSH	|
	CALL_PHONE	|
	CALL_PRIVILEGED	|
	CAMERA	|
	CHANGE_COMPONENT_ENABLED_STATE	|
	CHANGE_CONFIGURATION	|
	CHANGE_NETWORK_STATE	|
	CHANGE_WIFI_MULTICAST_STATE	|
	CHANGE_WIFI_STATE	|
	CLEAR_APP_CACHE	|
	CLEAR_APP_USER_DATA	|
	CONTROL_LOCATION_UPDATES	|
	DELETE_CACHE_FILES	|
	DELETE_PACKAGES	|
	DEVICE_POWER	|
	DIAGNOSTIC	|
	DISABLE_KEYGUARD	|
	DUMP	|
	EXPAND_STATUS_BAR	|
	FACTORY_TEST	|
	FLASHLIGHT	|
	FORCE_BACK	|
	GET_ACCOUNTS	|
	GET_PACKAGE_SIZE	|
	GET_TASKS	|
	GLOBAL_SEARCH	|
	HARDWARE_TEST	|
	INJECT_EVENTS	|
	INSTALL_LOCATION_PROVIDER	|
	INSTALL_PACKAGES	|
	INTERNAL_SYSTEM_WINDOW	|
	INTERNET	|
	KILL_BACKGROUND_PROCESSES	|
	MANAGE_ACCOUNTS	|
	MANAGE_APP_TOKENS	|
	MASTER_CLEAR	|
	MODIFY_AUDIO_SETTINGS	|
	MODIFY_PHONE_STATE	|
	MOUNT_FORMAT_FILESYSTEMS	|
	MOUNT_UNMOUNT_FILESYSTEMS	|
	NFC	|
	PERSISTENT_ACTIVITY	|
	PROCESS_OUTGOING_CALLS	|
	READ_CALENDAR	|
	READ_CONTACTS	|
	READ_FRAME_BUFFER	|
	READ_HISTORY_BOOKMARKS	|
	READ_INPUT_STATE	|
	READ_LOGS	|
	READ_PHONE_STATE	|
	READ_SMS	|
	READ_SYNC_SETTINGS	|
	READ_SYNC_STATS	|
	REBOOT	|
	RECEIVE_BOOT_COMPLETED	|
	RECEIVE_MMS	|
	RECEIVE_SMS	|
	RECEIVE_WAP_PUSH	|
	RECORD_AUDIO	|
	REORDER_TASKS	|
	RESTART_PACKAGES	|
	SEND_SMS	|
	SET_ACTIVITY_WATCHER	|
	SET_ALARM	|
	SET_ALWAYS_FINISH	|
	SET_ANIMATION_SCALE	|
	SET_DEBUG_APP	|
	SET_ORIENTATION	|
	SET_PREFERRED_APPLICATIONS	|
	SET_PROCESS_LIMIT	|
	SET_TIME	|
	SET_TIME_ZONE	|
	SET_WALLPAPER	|
	SET_WALLPAPER_HINTS	|
	SIGNAL_PERSISTENT_PROCESSES	|
	STATUS_BAR	|
	SUBSCRIBED_FEEDS_READ	|
	SUBSCRIBED_FEEDS_WRITE	|
	SYSTEM_ALERT_WINDOW	|
	UPDATE_DEVICE_STATS	|
	USE_CREDENTIALS	|
	USE_SIP	|
	VIBRATE	|
	WAKE_LOCK	|
	WRITE_APN_SETTINGS	|
	WRITE_CALENDAR	|
	WRITE_CONTACTS	|
	WRITE_EXTERNAL_STORAGE	|
	WRITE_GSERVICES	|
	WRITE_HISTORY_BOOKMARKS	|
	WRITE_SECURE_SETTINGS	|
	WRITE_SETTINGS	|
	WRITE_SMS	|
	WRITE_SYNC_SETTINGS	
;

enum InterpolatorsKind :
  accelerate_decelerate |
  accelerate |
  anticipate |
  anticipate_overshoot |
  bounce |
  cycle |
  decelerate |
  linear |
  overshoot
;

enum LayoutDimensionKind:
	fill_parent | match_parent | wrap_content
;

enum LayoutGravityKind :
	top | bottom | left | right |
	center | center_vertical | center_horizontal |
	fill | fill_vertical | fill_horizontal |
	clip_vertical | clip_horizontal
;

enum LayoutOrientationKind:
	horizontal | vertical
;

enum LayoutVisibilityKind:
	visible | invisible | gone
;

enum TypefaceKind:
	normal | sans | serif | monospace
;

enum TextStyleKind:
	normal | bold | italic
;

enum AutoLinkKind:
	none | web | email | phone | map | all
;

enum CapitalizeKind:
	none | sentences | words | characters
;

/*
 * Datatypes
 * (returns EDataType instead EClass)
 */
QualifiedName:
	ID ('.' ID)*
;

RelativePercentual:
	(INT | FLOAT) ('%'|'%p')
;

URL:
	ID '://' QualifiedName ('/'  (QualifiedName '/')* )?
;

DimensionValue:
	(FLOAT | INT) ('dp' | 'sp' | 'pt' | 'px' | 'mm' | 'in')
;

/*
 * Terminals
 */
//TODO: Value Converter
terminal BOOL returns ecore::EBooleanObject:
//	'YES' | 'NO'
	'TRUE' | 'FALSE'
;


//TODO: ValueConverter
terminal FLOAT returns ecore::EFloatObject:
	INT '.' INT
;

terminal HEX_COLOR:
	'#' 
	    ('0'..'9'|'A'..'F'|'a'..'f') ('0'..'9'|'A'..'F'|'a'..'f')
	    ('0'..'9'|'A'..'F'|'a'..'f') ('0'..'9'|'A'..'F'|'a'..'f')
	    ('0'..'9'|'A'..'F'|'a'..'f') ('0'..'9'|'A'..'F'|'a'..'f')
	    (('0'..'9'|'A'..'F'|'a'..'f') ('0'..'9'|'A'..'F'|'a'..'f'))? 
;
