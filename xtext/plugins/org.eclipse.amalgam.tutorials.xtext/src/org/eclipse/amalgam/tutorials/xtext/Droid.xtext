/******************************************************************************
 * Copyright (c) 2011 Reinaldo Junior.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Reinaldo Junior (Google Summer of Code) - initial API and implementation
 ******************************************************************************/

grammar org.eclipse.amalgam.tutorials.xtext.Droid with org.eclipse.xtext.common.Terminals
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate droid "http://www.eclipse.org/amalgam/tutorials/xtext/Droid"

/******************************************************************************
 * Application
 ******************************************************************************/

Application:
	'application' name=STRING packageName=QualifiedName
	'{'
		manifest=ManifestFile
		(resources+=Resource | activities+=Activity | layouts+=Layout)+
	'}'
;

ManifestFile:
	'manifest' '{'
		(sdk=ManifestSDK & usesPermission=ManifestUsesPermission?)
	'}'
;

ManifestSDK:
	'sdk' '{'
		(
		 ('from' minSdkVersion=INT 'to' maxSdkVersion=INT) &
		 ('target' targetSdkVersion=INT)
		)
	'}'
;

ManifestUsesPermission:
	'usesPermission' '{'
		permissions+=BuiltInPermissionType (',' permissions+=BuiltInPermissionType)*
	'}'
;

Resource:
	ValueResource | MenuResource
;

Activity:
	GenericActivity | ListActivity | TabActivity
;


Layout:
	'layout' {Layout} name=ID '{'
		widgets+=Widget+
	'}'
;


/******************************************************************************
 * Activities
 ******************************************************************************/

GenericActivity:
	'activity' name=QualifiedName '{'
		(actions+=Action)*
	'}'
;

ListActivity:
	'listActivity' name=QualifiedName '{'
		'data:' dataSource=ID
		('layout:' layout=[Layout])?
		'item:' itemLayout=[Layout]
		(actions+=Action)*
	'}'

;

TabActivity:
	'tabActivity' name=QualifiedName '{'
		(tabs+=Tab)+
	'}'
;

Tab:
	'tab:' activity=[Activity|QualifiedName] ';'
;

//
//Actions
//


ActionSet:
	'actions:' '{' actions+=Action+ '}'
;

// => (invoke second_activity)
Action:
	'=>'
	(
	  GoToURLAction | ShowLayoutAction | InvokeActivityAction
	  /*| LoadResourceAction| LoadURLAction */
	)
;

GoToURLAction:
	'goTo' url=STRING;

ShowLayoutAction:
	'show' layout=[Layout];

InvokeActivityAction:
	'invoke' activity=[Activity|QualifiedName];

//Loads a fixed resource
//TODO: Load a dinamic resource from a URL, loadJson for example
//MAYBE...
//Pode ter recurs‹o...
//LoadResourceAction:
//	'load' resource=ID ('->' toVar=ID)? (afterLoad=Action)?
//;


/******************************************************************************
 * Widgets
 ******************************************************************************/
Widget:
	TextView | Button | ImageView | ImageButton | Link | Spinner | EditText
;

TextView:
	'textView' {TextView} ('<'id=ID'>') text=StringVA
	'{'
	(
	 ('top:' top=DimensionVA )? &
	 ('left:' left=DimensionVA )? &
	 ('width:' width=DimensionVA )? &
	 ('height:' height=DimensionVA )? &
	 ('background:' background=DrawableVA )? &
	 ('clickable:' clickable=BooleanVA )? &
	 ('fadeScrollBars:' fadeScrollBars=BooleanVA )? &
	 ('isScrollContainer:' isScrollContainer=BooleanVA )? &
	 // Specific properties
	 ('hint:' hint=StringVA)? &
	 ('textColor:' textColor=ColorVA)?
	)
	(actions=ActionSet)?
	'}'
;

Button:
	'button' {Button} ('<'id=ID'>')
	text=StringVA
	'{'
	(
	 ('top:' top=DimensionVA )? &
	 ('left:' left=DimensionVA )? &
	 ('width:' width=DimensionVA )? &
	 ('height:' height=DimensionVA )? &
	 ('background:' background=DrawableVA )? &
	 ('clickable:' clickable=BooleanVA )? &
	 ('fadeScrollBars:' fadeScrollBars=BooleanVA )? &
	 ('isScrollContainer:' isScrollContainer=BooleanVA )? &
	 // Specific properties
	 ('hint:' hint=StringVA)? &
	 ('textColor:' textColor=ColorVA)?
	)
//	actions+=Action*
	(actions=ActionSet)?
	'}'
;

ImageButton:
	'imageButton' {ImageButton} ('<'id=ID'>')
	//(src=DrawableVA | src=ColorVA)
	src=DrawableVA
	'{'
	(
	 ('top:' top=DimensionVA )? &
	 ('left:' left=DimensionVA )? &
	 ('width:' width=DimensionVA )? &
	 ('height:' height=DimensionVA )? &
	 ('background:' background=DrawableVA )? &
	 ('clickable:' clickable=BooleanVA )? &
	 ('fadeScrollBars:' fadeScrollBars=BooleanVA )? &
	 ('isScrollContainer:' isScrollContainer=BooleanVA )? &
	 // Specific properties
	 ('hint:' hint=StringVA)? &
	 ('textColor:' textColor=ColorVA)?
	)
	//actions+=Action*
	(actions=ActionSet)?
	'}'
;

ImageView:
	'imageView' {ImageView} ('<'id=ID'>')
	//(src=DrawableVA | src=ColorVA)
	src=DrawableVA
	'{'
	(
	 ('top:' top=DimensionVA )? &
	 ('left:' left=DimensionVA )? &
	 ('width:' width=DimensionVA )? &
	 ('height:' height=DimensionVA )? &
	 ('background:' background=DrawableVA )? &
	 ('clickable:' clickable=BooleanVA )? &
	 ('fadeScrollBars:' fadeScrollBars=BooleanVA )? &
	 ('isScrollContainer:' isScrollContainer=BooleanVA )?
	 // Specific properties
	)
	'}'
;


//Button to an Activity
Link:
	'link' {Link} ('<'id=ID'>')
	text=StringVA
	'to' target=[Activity|QualifiedName]
	'{'
	(
	 ('top:' top=DimensionVA )? &
	 ('left:' left=DimensionVA )? &
	 ('width:' width=DimensionVA )? &
	 ('height:' height=DimensionVA )? &
	 ('background:' background=DrawableVA )? &
	 ('clickable:' clickable=BooleanVA )? &
	 ('fadeScrollBars:' fadeScrollBars=BooleanVA )? &
	 ('isScrollContainer:' isScrollContainer=BooleanVA )? &
	 // Specific properties
	 ('hint:' hint=BooleanVA)? &
	 ('textColor:' textColor=BooleanVA)?
	)
	(actions=ActionSet)?
	'}'
;

//Todo: look at http://developer.android.com/resources/tutorials/views/hello-spinner.html
Spinner:
	'spinner' {Spinner} ('<'id=ID'>')
	(prompt=StringVA)? //&
	'{'
	(
	 ('top:' top=DimensionVA )? &
	 ('left:' left=DimensionVA )? &
	 ('width:' width=DimensionVA )? &
	 ('height:' height=DimensionVA )? &
	 ('background:' background=DrawableVA )? &
	 ('clickable:' clickable=BooleanVA )? &
	 ('fadeScrollBars:' fadeScrollBars=BooleanVA )? &
	 ('isScrollContainer:' isScrollContainer=BooleanVA )? //&
	 // Specific properties
	//Does not work
//	 ('gravity:' gravity+=SpinnerGravityKind+ )?
	)
	(actions=ActionSet)?
	'}'
;


EditText:
	'editText' {EditText} ('<'id=ID'>')
	text=StringVA
	'{'
	(
	 ('top:' top=DimensionVA )? &
	 ('left:' left=DimensionVA )? &
	 ('width:' width=DimensionVA )? &
	 ('height:' height=DimensionVA )? &
	 ('background:' background=DrawableVA )? &
	 ('clickable:' clickable=BooleanVA )? &
	 ('fadeScrollBars:' fadeScrollBars=BooleanVA )? &
	 ('isScrollContainer:' isScrollContainer=BooleanVA )? &
	 //EditText properties
	 ('hint:' hint=StringVA)? &
	 ('textColor:' textColor=ColorVA)? &
	 ('editable:' editable=BooleanVA)? &
	 ('numeric:' numeric=BooleanVA)? &
	 ('password:' password=BooleanVA)? &
	 ('phoneNumber:' phoneNumber=BooleanVA)?
	)
	(actions=ActionSet)?
	'}'
;


/******************************************************************************
 * Value Access
 ******************************************************************************
 * If something (like a property) have a value of any resource kind, this value
 * is a value access.
 ******************************************************************************/
//TODO: test ExternalResourceReference
TypedVA:
	StringVA | IntegerVA | BooleanVA | ColorVA | DimensionVA
		| DrawableVA | AnimationVA | InterpolatorVA
		//| IntegerArrayVA | StringArrayVA | TypedArrayVA
;

StringVA:
	StringRA | StringVD
;

IntegerVA:
	IntegerRA | IntegerVD
;


BooleanVA:
	BooleanRA | BooleanVD
;

ColorVA:
	ColorRA | ColorVD
;

DimensionVA:
	DimensionRA | DimensionVD
;

//TODO: StyleRA
//http://developer.android.com/guide/topics/ui/themes.html
DrawableVA:
	DrawableRA /*| DrawableVD */
;


AnimationVA:
	AnimationRA /*| AnimationVD */
;

InterpolatorVA:
	InterpolatorRA
;



/******************************************************************************
 * Value Definitions (always typed)
 ******************************************************************************/
ValueDefinition:
 	StringVD | IntegerVD | BooleanVD | ColorVD | DimensionVD
	/* IntegerArrayVD | StringArrayVD | TypedArrayVD */
;

StringVD:
	value=STRING;

IntegerVD:
	value=INT;

BooleanVD:
	value=BOOL;

ColorVD:
	value=HEX_COLOR;

DimensionVD:
	value=FLOAT;

/*
No need
InterpolatorVD:
	 shareInterpolator?='shared'
	 'interpolator' interpolator=InterpolatorRA
;
*/



/******************************************************************************
 * Resource Definition (for resources which can be defined as property value)
 ******************************************************************************
 * TODO: Verify if ALL resources can be defined as property value =D
 ******************************************************************************/

ValueResource:
	StringResource | IntegerResource | BooleanResource | ColorResource
	| DimensionResource  | ArrayResource | DrawableResource | AnimationResource
	//| InterpolatorResource
;

StringResource:
	'string' name=ID '=' value=STRING
;

IntegerResource:
	'integer' name=ID '=' value=INT
;

BooleanResource:
	'bool' name=ID '=' value=BOOL
;

ColorResource:
	'color' name=ID '=' value=HEX_COLOR
;

DimensionResource:
	'dimension' name=ID '=' value=FLOAT unit=DimensionKind
;

//
//Array Resource
//

ArrayResource:
	'array'
	(IntegerArrayResource | StringArrayResource | TypedArrayResource)
;

IntegerArrayResource:
	'(integer)'
	name=ID '=' '['
		(items+=INT (',' items+=INT)* )?
	']'
;

StringArrayResource:
	'(string)'
	name=ID '=' '['
		(items+=STRING (',' items+=STRING)* )?
	']'
;

//That is going to generate some crazy rules =D
TypedArrayResource:
	name=ID '=' '['
		(values+=TypedVA (',' values+=TypedVA)* )?
	']'
;

//
//DrawableResource
//

//http://developer.android.com/guide/topics/resources/drawable-resource.html
DrawableResource:
	(BitmapDrawableResource | TransitionDrawableResource)
;

//http://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap
BitmapDrawableResource:
	'bitmap' {BitmapDrawableResource} name=ID '=' filename=ID
;

//http://developer.android.com/guide/topics/resources/drawable-resource.html#Transition
TransitionDrawableResource:
	'transition' {TransitionDrawableResource}
		from=[BitmapDrawableResource] '<->' to=[BitmapDrawableResource]
;

//
//Menu Resource
//

//PENDING
//Implement attributes: http://developer.android.com/guide/topics/resources/menu-resource.html
MenuResource:
	'menu' {MenuResource} name=ID '{'
		(menuItems+=MenuItem | subMenus+=SubMenu | groups+=MenuItemGroup)*
	'}'
;

MenuItem:
	'item' {MenuItem} '{'
		subMenus+=SubMenu*
	'}'
;

MenuItemGroup:
	'group' {MenuGroup} '{'
		items+=MenuItem+
	'}'
;

SubMenu:
	'submenu' {SubMenu} '{'
		(menuItems+=MenuItem | groups+=MenuItemGroup)*
	'}'
;


//
//Animation Resource
//

AnimationResource:
	( TweenAnimationResource | FrameAnimationResource)
;

FrameAnimationElement:
	(TerminalAnimationElements | TerminalAnimationSet)
;

TerminalAnimationElements:
	(AlphaAnimation | ScaleAnimation | TranslateAnimation | RotateAnimation)
;

TerminalAnimationSet:
	'set' '{'
		(shareInterpolator?='shared'
	 	interpolator=InterpolatorVA)?
		(elements+=FrameAnimationElement)+
	'}'
;

AlphaAnimation:
	'fade:'
	(
	 ('from' fromAlpha=FLOAT) &
	 ('to' toAlpha=FLOAT)
	)
;

ScaleAnimation:
	'scale:'
	(
	 ('from' fromAlpha=FLOAT) &
	 ('to' toAlpha=FLOAT)
	)
;

TranslateAnimation:
	'translate:'
	(
	 ('from' fromAlpha=FLOAT) &
	 ('to' toAlpha=FLOAT)
	)
;

RotateAnimation:
	'rotate:'
	(
	 ('from' fromAlpha=FLOAT) &
	 ('to' toAlpha=FLOAT)
	)
;


TweenAnimationResource:
	'tweenAnimation' name=ID '{'
		(elements+=FrameAnimationElement)+
	'}'
;

FrameAnimationResource:
	oneShot?='oneShot' 'frameAnimation' name=ID '{'
		frames+=AnimationFrame+
	'}'
;

AnimationFrame:
	'frame:' drawable=DrawableVA ('->' duration=INT)?
;


/******************************************************************************
 *  Resource Access
 ******************************************************************************/

//TODO: exemplify this behaviour in a blog post and report eventual bug
//BUG: all the subclasses have a commond attribute but it was not especified in
// the parent common class because the attributes were not of the same
// concrete type (they were of the same abstract type)
//Used only to enforce the abstract property (resource) in the Abstract Class
AbstractResourceAccess:
	(ResourceAccess) | ( resource=[Resource] | externalResource=STRING )
;

//I putted this @<type> just to allow the parser to resolve the ambiguity.
//So, I followed the Android Conventions to typed resource references
ResourceAccess:
	StringRA | IntegerRA | BooleanRA | ColorRA | DimensionRA | DrawableRA | AnimationRA 
;

StringRA:
	'@string'
	( resource=[StringResource] | externalResource=STRING )
;

IntegerRA:
	'@integer'
	( resource=[IntegerResource]  | externalResource=STRING )
;

BooleanRA:
	'@bool'
	( resource=[BooleanResource]  | externalResource=STRING )
;

ColorRA:
	'@color'
	( resource=[ColorResource]  | externalResource=STRING )
;

DimensionRA:
	'@dimen'
	( resource=[DimensionResource]  | externalResource=STRING )
;

/*
//TODO: verify if this is valid
ArrayRA:
	'@array'
	( resource=[ArrayResource]  | externalResource=STRING )
;
*/

DrawableRA:
	'@drawable'
	( resource=[DrawableResource]  | externalResource=STRING )
;

AnimationRA:
	'@anim'
	( resource=[AnimationResource]  | externalResource=STRING )
;

InterpolatorRA:
	'interpolator'
	( resource=InterpolatorsKind | externalResource=STRING )
;

/*
DrawableResourceRA:
//	(value=HEX_COLOR | resource=[DrawableResource] | externalResource=ExternalResourceReference)
;
*/

//DrawableImageResourceRA:
//	resource=[DrawableImageResource]
//;






/******************************************************************************
 * Concrete Syntax Stuff
 ******************************************************************************/

/*
 * Enumerations
 */

enum BuiltInPermissionType:
	ACCESS_CHECKIN_PROPERTIES |
	ACCESS_COARSE_LOCATION |
	ACCESS_FINE_LOCATION |
	ACCESS_LOCATION_EXTRA_COMMANDS |
	ACCESS_MOCK_LOCATION |
	ACCESS_NETWORK_STATE |
	ACCESS_SURFACE_FLINGER	|
	ACCESS_WIFI_STATE	|
	ACCOUNT_MANAGER	|
	AUTHENTICATE_ACCOUNTS	|
	BATTERY_STATS	|
	BIND_APPWIDGET	|
	BIND_DEVICE_ADMIN	|
	BIND_INPUT_METHOD	|
	BIND_REMOTEVIEWS	|
	BIND_WALLPAPER	|
	BLUETOOTH	|
	BLUETOOTH_ADMIN	|
	BRICK	|
	BROADCAST_PACKAGE_REMOVED	|
	BROADCAST_SMS	|
	BROADCAST_STICKY	|
	BROADCAST_WAP_PUSH	|
	CALL_PHONE	|
	CALL_PRIVILEGED	|
	CAMERA	|
	CHANGE_COMPONENT_ENABLED_STATE	|
	CHANGE_CONFIGURATION	|
	CHANGE_NETWORK_STATE	|
	CHANGE_WIFI_MULTICAST_STATE	|
	CHANGE_WIFI_STATE	|
	CLEAR_APP_CACHE	|
	CLEAR_APP_USER_DATA	|
	CONTROL_LOCATION_UPDATES	|
	DELETE_CACHE_FILES	|
	DELETE_PACKAGES	|
	DEVICE_POWER	|
	DIAGNOSTIC	|
	DISABLE_KEYGUARD	|
	DUMP	|
	EXPAND_STATUS_BAR	|
	FACTORY_TEST	|
	FLASHLIGHT	|
	FORCE_BACK	|
	GET_ACCOUNTS	|
	GET_PACKAGE_SIZE	|
	GET_TASKS	|
	GLOBAL_SEARCH	|
	HARDWARE_TEST	|
	INJECT_EVENTS	|
	INSTALL_LOCATION_PROVIDER	|
	INSTALL_PACKAGES	|
	INTERNAL_SYSTEM_WINDOW	|
	INTERNET	|
	KILL_BACKGROUND_PROCESSES	|
	MANAGE_ACCOUNTS	|
	MANAGE_APP_TOKENS	|
	MASTER_CLEAR	|
	MODIFY_AUDIO_SETTINGS	|
	MODIFY_PHONE_STATE	|
	MOUNT_FORMAT_FILESYSTEMS	|
	MOUNT_UNMOUNT_FILESYSTEMS	|
	NFC	|
	PERSISTENT_ACTIVITY	|
	PROCESS_OUTGOING_CALLS	|
	READ_CALENDAR	|
	READ_CONTACTS	|
	READ_FRAME_BUFFER	|
	READ_HISTORY_BOOKMARKS	|
	READ_INPUT_STATE	|
	READ_LOGS	|
	READ_PHONE_STATE	|
	READ_SMS	|
	READ_SYNC_SETTINGS	|
	READ_SYNC_STATS	|
	REBOOT	|
	RECEIVE_BOOT_COMPLETED	|
	RECEIVE_MMS	|
	RECEIVE_SMS	|
	RECEIVE_WAP_PUSH	|
	RECORD_AUDIO	|
	REORDER_TASKS	|
	RESTART_PACKAGES	|
	SEND_SMS	|
	SET_ACTIVITY_WATCHER	|
	SET_ALARM	|
	SET_ALWAYS_FINISH	|
	SET_ANIMATION_SCALE	|
	SET_DEBUG_APP	|
	SET_ORIENTATION	|
	SET_PREFERRED_APPLICATIONS	|
	SET_PROCESS_LIMIT	|
	SET_TIME	|
	SET_TIME_ZONE	|
	SET_WALLPAPER	|
	SET_WALLPAPER_HINTS	|
	SIGNAL_PERSISTENT_PROCESSES	|
	STATUS_BAR	|
	SUBSCRIBED_FEEDS_READ	|
	SUBSCRIBED_FEEDS_WRITE	|
	SYSTEM_ALERT_WINDOW	|
	UPDATE_DEVICE_STATS	|
	USE_CREDENTIALS	|
	USE_SIP	|
	VIBRATE	|
	WAKE_LOCK	|
	WRITE_APN_SETTINGS	|
	WRITE_CALENDAR	|
	WRITE_CONTACTS	|
	WRITE_EXTERNAL_STORAGE	|
	WRITE_GSERVICES	|
	WRITE_HISTORY_BOOKMARKS	|
	WRITE_SECURE_SETTINGS	|
	WRITE_SETTINGS	|
	WRITE_SMS	|
	WRITE_SYNC_SETTINGS	
;

enum DimensionKind :
  dp | sp | pt | px | mm | in
;

enum InterpolatorsKind :
  accelerate_decelerate |
  accelerate |
  anticipate |
  anticipate_overshoot |
  bounce |
  cycle |
  decelerate |
  linear |
  overshoot
;


/*
 * Datatypes
 * (returns EDataType instead EClass)
 */
QualifiedName:
	ID ('.' ID)*
;

RelativePercentual:
	(INT | FLOAT) ('%'|'%p')
;

URL:
	ID '://' QualifiedName ('/'  (QualifiedName '/')* )?
;


/*
 * Terminals
 */
//TODO: Value Converter
terminal BOOL returns ecore::EBooleanObject:
//	'YES' | 'NO'
	'TRUE' | 'FALSE'
;


//TODO: ValueConverter
terminal FLOAT returns ecore::EFloatObject:
	INT '.' INT
;

terminal HEX_COLOR:
	'#' 
	    ('0'..'9'|'A'..'F'|'a'..'f') ('0'..'9'|'A'..'F'|'a'..'f')
	    ('0'..'9'|'A'..'F'|'a'..'f') ('0'..'9'|'A'..'F'|'a'..'f')
	    ('0'..'9'|'A'..'F'|'a'..'f') ('0'..'9'|'A'..'F'|'a'..'f')
	    (('0'..'9'|'A'..'F'|'a'..'f') ('0'..'9'|'A'..'F'|'a'..'f'))? 
;
